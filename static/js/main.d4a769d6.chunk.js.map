{"version":3,"sources":["components/ResourceBar.js","components/CooldownSweep.js","lib/events.js","lib/abilityEvents.js","lib/auraEvents.js","utils/eventHandler.js","lib/constants.js","utils/ability.js","components/ProgressAbility.js","components/GlobalCooldown.js","components/CastBar.js","components/AbilityBar.js","components/auras/Aura.js","components/auras/LingeringInsanity.js","components/auras/Voidform.js","components/auras/DamageOverTime.js","components/auras/Buff.js","lib/options.js","components/auras/AuraBar.js","components/panels/Panel.js","utils/hooks.js","lib/abilitySettings.js","lib/auraSettings.js","utils/importExport.js","lib/templates/index.js","lib/templates/live.js","lib/templates/alpha.js","lib/templates/legionENVoidlord.js","lib/templates/legionAntorus.js","lib/templates/ryeshot.js","lib/templates/yvaelle.js","components/panels/ExportPanel.js","components/panels/optionFactory.js","components/panels/SettingOption.js","components/panels/WhatIs.js","components/panels/CustomizeSection.js","components/panels/SettingsPanel.js","components/panels/AbilityKeybindsPanel.js","components/panels/AboutPanel.js","lib/whatsNew.js","components/panels/WhatsNewPanel.js","lib/abilities.js","components/forms/FormTextAreaField.js","components/forms/FormTextField.js","utils/bugreport.js","components/forms/BugReport.js","components/forms/FeatureRequest.js","components/forms/Forms.js","App.js","serviceWorker.js","index.js"],"names":["ResourceBar","props","max","current","voidform","className","toFixed","style","width","CooldownSweep","size","progress","inverse","stroke","normalizedRadius","circumference","Math","PI","height","fill","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","cx","cy","r","events","abilityEvents","onEvent","auraEvents","EventHandler","eventTriggers","this","event","payload","forEach","e","type","keybinds","Ability","initialState","updateFn","onExecute","eventHandler","state","updateState","ignoreGcd","charges","maxCharges","currentState","Object","keys","k","value","subState","k2","value2","now","Date","startTime","cooldown","duration","getCurrentState","name","cooldownTimer","setInterval","remaining","clearInterval","startCooldown","handleEvent","time","displayName","resource","costsResource","cast","castTimer","setTimeout","currentlyOnCooldown","endTime","channel","baseDuration","baseTicks","ticks","gcd","globalCooldown","pandemicTime","currentTicks","channelTimer","previousChannelRemaining","maximumTicks","floor","min","channelFrequency","round","tickResourceModifier","baseChannelTime","globalCooldownTimer","disabled","unusable","clearTimeout","triggers","trigger","eventTypes","constructEventHandler","InstantAbility","CastAbility","ChannelAbility","casting","startCast","startChannel","ProgressAbility","settings","globalCooldownStartTime","casttime","castStartTime","castEndTime","icon","keybind","subscribe","unsubscribe","onAbilityUpdate","onClick","triggerEvent","show","reset","useState","setState","key","keybindText","startTimeRef","useRef","cooldownRef","castStartTimeRef","castEndTimeRef","casttimeRef","castingRef","baseChannelTimeRef","ticksRef","chargesRef","globalCooldownRef","globalCooldownStartTimeRef","unusableRef","disabledRef","ability","useEffect","create","source","execute","notify","beginGlobalCooldown","getRemainingCooldown","canExecute","ignoresGcd","remove","src","GlobalCooldown","start","CastBar","direction","setCurrent","timeRef","durationRef","timer","AbilityBar","abilitySettings","abilities","haste","inVoidform","keyEventsPaused","hasteRef","inVoidformRef","spellQueueTimer","observers","setObservers","observersRef","defaultState","cooldowns","defaultCooldowns","status","hasReset","setHasReset","triggerCooldown","getAbilityCooldown","cdr","document","addEventListener","handleKeyPress","removeEventListener","useReducer","oldState","action","newState","JSON","parse","stringify","rankTwo","console","error","o","preventDefault","abilityCooldownRemaining","globalCooldownRemaining","queueAbility","handleClick","calculateCooldown","triggerGlobalCooldown","gcdLength","observer","obs","filter","hasted","getAbilityCastTime","staticCastTime","find","disabledAbilities","showAbility","sort","k1","index","buildAbilityBar","map","Aura","maxDuration","stacks","children","LingeringInsanity","setMaxDuration","setDuration","stacksRef","initialize","afterVoidformEntry","hasteRetention","currentMaxDuration","ceil","voidformEntered","calculateDecayStacks","voidformHaste","hasteDecay","startStatic","decayRate","i","startDecay","Voidform","drainRate","drainStart","hasteStack","hasteStart","maxStacks","paused","active","setStacks","pausedRef","n","frequency","drain","interval","startingHaste","DamageOverTime","maxDurationRef","calculateNextTickTime","tickTime","Buff","setting","auraEventHandler","commonOptions","whatIs","unit","resourceCast","resourceChannel","cost","castTime","channelTime","auraDuration","auraTicks","auraResource","abilityOptions","auraOptions","options","dots","buffs","AuraBar","auras","lingeringInsanity","dot","buff","Panel","panel","currentPanel","handleClose","header","panelClass","target","cleanup","ref","useCleanup","defaultAbilitySettings","targetCount","extension","requireVoidform","defaultAuraSettings","stats","gainInsanity","resourceGen","parseAbilitySettings","result","a","Error","abilitySetting","reduce","obj","userSetting","undefined","parseAbility","parseAuraSettings","auraSettings","aura","auraSetting","parseAura","formatAbilitySettingsForExport","formattedAbility","formatAbilityConfig","includeKeybinds","includeSpellOrder","exportSettings","currentSettings","formattedAbilitySettings","formattedAbilityConfig","combined","abilityConfig","Base64","encode","live","alpha","legionENVoidlord","legionAntorus","ryeshot","yvaelle","Templates","onChange","selected","templates","t","ExportPanel","onImport","closePanel","exportData","setExportData","inputData","setInputData","setIncludeKeybinds","setIncludeSpellOrder","selectedTemplate","setSelectedTemplate","transform","template","data","rows","cols","placeholder","checked","parsedSettings","decode","message","importSettings","id","readOnly","getElementById","select","execCommand","err","TimeTextOption","displayValue","setDisplayValue","step","parseFloat","NumberTextOption","parseInt","FloatTextOption","PercentTextOption","BooleanOption","defaultChecked","SelectOption","handleChange","htmlFor","Option","rest","SettingOption","onHelp","closeHelp","parentKey","onMouseEnter","pos","x","offsetLeft","y","offsetTop","onMouseLeave","v","WhatIs","text","xPos","yPos","left","top","CustomizeSection","showWhatIs","setShowWhatIs","setWhatIs","optionKey","option","newSetting","handleShowWhatIs","closeWhatIs","SettingsPanel","didReset","onAbilitySet","onAuraSet","changesPendingText","currentAbilities","setCurrentAbilities","currentAuras","setCurrentAuras","activeAbilitySection","setActiveAbilitySection","activeAuraSection","setActiveAuraSection","abilityChangesPending","setAbilityChangesPending","auraChangesPending","setAuraChangesPending","showAbilityOptions","settingKey","getAttribute","showAuraOptions","newAbilities","newAuras","AbilityIndex","count","Array","AbilityKeybindsPanel","onKeybind","setOrder","onToggle","tooltip","setTooltip","setKeybindText","currentAbility","setCurrentAbility","length","abilityCount","currentAbilityRef","showToolTip","alt","hideToolTip","prepareToBindAbility","handleKeyDown","once","isKeydownKey","bindAbility","match","toUpperCase","formKeybindFromKey","visibility","toString","onMouseOver","onMouseOut","AboutPanel","description","containerStyle","textAlign","marginBottom","smallText","fontSize","mediumText","WhatsNew","onClose","whatsNew","item","WhatsNewPanel","showWhatsNew","setShowWhatsNew","defaultAbilities","FormTextAreaField","label","placeHolder","required","FormTextField","email","window","Email","formatBugReportContent","body","headers","content","concat","join","sendBugReport","title","SecureToken","process","From","To","Subject","Body","send","submitBugReport","onSuccess","onFail","log","fields","titleField","contactField","BugReport","closeForm","setData","canSubmit","setCanSubmit","submitMessage","setSubmitMessage","onSubmit","setText","repeat","createPendingTextTimer","f","contact","FeatureRequest","Forms","pauseKeyEvents","showBugReport","setShowBugReport","showFeatureRequest","setShowFeatureRequest","handleFormClick","setShow","App","setPanel","setAbilitySettings","setAbilities","setAuraSettings","setKeyEventsPaused","setReset","abilityReset","setAbilityReset","setHaste","powerInfusion","pandemicDuration","handleAuraPandemic","d","calculateHaste","handlePanelHeaderClick","handlePanelClose","setAllAbilities","importedAbilities","handleAuraSet","handleAuraReset","handleAbilitySet","handleAbilityReset","handleReset","merged","voidBoltOrEruption","abilityIndex","shift","currentIndex","newSettings","Boolean","location","hostname","dotenv","config","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d4a769d6.chunk.js","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\r\nimport \"./ResourceBar.css\"\r\n\r\nconst ResourceBar = (props) => {\r\n    const {max, current, voidform} = props\r\n\r\n    return (\r\n        <div className=\"progress-bar-container\">\r\n            <div className=\"progress-text\">{(current/max*100).toFixed(0)}</div> \r\n            <div className=\"progress-bar resource-bar\" \r\n                style={{\r\n                    width: `${(current/max*100).toFixed(2)}%`\r\n            }}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceBar","import React, {useState, useEffect, useRef} from 'react';\r\n\r\nimport \"./CooldownSweep.css\"\r\n\r\nconst CooldownSweep = (props) => {\r\n\r\n    const {size, progress, inverse} = props\r\n\r\n    const radius = size * 2\r\n    const stroke = size * 2\r\n\r\n    const normalizedRadius = radius - (stroke/2)\r\n    const circumference = normalizedRadius * 2 * Math.PI\r\n\r\n    return (\r\n        <svg width={size} height={size}>\r\n            <circle\r\n                fill=\"transparent\"\r\n                strokeWidth={stroke}\r\n                strokeOpacity={.7}\r\n                strokeDasharray={circumference + \" \" + circumference}\r\n                strokeDashoffset={inverse ? ((!progress ? circumference : 0) + (progress || 0) * circumference) : (circumference + (progress || 0) * circumference)}\r\n                stroke={\"rgb(0,0,0)\"}\r\n                cx={size/2}\r\n                cy={size/2}\r\n                r={normalizedRadius} />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default CooldownSweep","const events = {\r\n    \"CAST\": [\r\n        \"ABILITY_CAST_SUCCESS\",\r\n        \"ABILITY_COOLDOWN_START\",\r\n        \"ABILITY_COOLDOWN_END\",\r\n        \"ABILITY_CAST_START\",\r\n        \"ABILITY_CHANNEL_START\",\r\n        \"ABILITY_CHANNEL_UPDATE\",\r\n        \"ABILITY_CHANNEL_END\"\r\n    ],\r\n    \"RESOURCE\": [\r\n        \"RESOURCE_UPDATE\",\r\n        \"INSANITY_DRAIN_PAUSE_START\",\r\n        \"INSANITY_DRAIN_PAUSE_END\"\r\n    ],\r\n    \"AURA\": [\r\n        \"VOIDFORM_START\",\r\n        \"VOIDFORM_UPDATE\",\r\n        \"VOIDFORM_END\",\r\n        \"LINGERING_INSANITY_START\",\r\n        \"LINGERING_INSANITY_UPDATE\",\r\n        \"LINGERING_INSANITY_END\",\r\n        \"AURA_START\",\r\n        \"AURA_BEGIN\",\r\n        \"AURA_END\",\r\n        \"DOT_EXTEND\"\r\n    ],\r\n    \"STAT\": [\r\n        \"HASTE_UPDATE\", \r\n        \"HASTE_RESET\"\r\n    ]\r\n}\r\n\r\nexport default events","const abilityEvents = {\r\n    \"void-bolt\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\", \"DOT_EXTEND\"]\r\n        }\r\n    },\r\n    \"mind-flay\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [],\r\n            \"COOLDOWN_END\": [],\r\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\"],\r\n            \"CHANNEL_UPDATE\": [\"ABILITY_CHANNEL_UPDATE\", \"RESOURCE_UPDATE\"],\r\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\"]\r\n        }\r\n    },\r\n    \"mind-sear\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [],\r\n            \"COOLDOWN_END\": [],\r\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\"],\r\n            \"CHANNEL_UPDATE\": [\"ABILITY_CHANNEL_UPDATE\", \"RESOURCE_UPDATE\"],\r\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\"]\r\n        }\r\n    },\r\n    \"void-eruption\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"VOIDFORM_START\"],\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"]\r\n        }\r\n    },\r\n    \"mind-blast\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\"],\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"]\r\n        }\r\n    },\r\n    \"shadow-word-death\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"void-torrent\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\", \"INSANITY_DRAIN_PAUSE_START\"],\r\n            \"CHANNEL_UPDATE\": [\"RESOURCE_UPDATE\"],\r\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\", \"INSANITY_DRAIN_PAUSE_END\"]\r\n        }\r\n    },\r\n    \"shadow-word-pain\": {\r\n        onEvent: {\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"vampiric-touch\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"devouring-plague\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"shadowfiend\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"power-infusion\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\"]\r\n        }\r\n    },\r\n    \"bloodlust\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\"]\r\n        }\r\n    }\r\n}\r\n\r\nexport default abilityEvents","const auraEvents = {\r\n    \"voidform\": {\r\n        onEvent: {\r\n            \"AURA_START\": [\r\n                \"\"\r\n            ],\r\n            \"AURA_UPDATE\": [],\r\n            \"AURA_TIME_UPDATE\": [],\r\n            \"AURA_END\": []\r\n        }\r\n    },\r\n    \"lingeringInsanity\": {\r\n        onEvent: {\r\n            \"AURA_START\": [],\r\n            \"AURA_UPDATE\": [],\r\n            \"AURA_TIME_UPDATE\": [],\r\n            \"AURA_END\": []\r\n        }\r\n    },\r\n    \"shadow-word-pain\": {\r\n        onEvent: {\r\n            \"AURA_START\": [],\r\n            \"AURA_UPDATE\": [],\r\n            \"AURA_TIME_UPDATE\": [],\r\n            \"AURA_END\": []\r\n        }\r\n    },\r\n    \"vampiric-touch\": {\r\n        onEvent: {\r\n            \"AURA_START\": [],\r\n            \"AURA_UPDATE\": [],\r\n            \"AURA_TIME_UPDATE\": [],\r\n            \"AURA_END\": []\r\n        }\r\n    },\r\n    \"power-infusion\": {\r\n        onEvent: {\r\n            \"AURA_START\": [\"AURA_BEGIN\", \"HASTE_UPDATE\"],\r\n            \"AURA_END\": [\"AURA_END\", \"HASTE_RESET\"]\r\n        }\r\n    },\r\n    \"bloodlust\": {\r\n        onEvent: {\r\n            \"AURA_START\": [\"AURA_BEGIN\", \"HASTE_UPDATE\"],\r\n            \"AURA_END\": [\"AURA_END\", \"HASTE_RESET\"]\r\n        }\r\n    }\r\n}\r\n\r\nexport default auraEvents","import events from \"../lib/events\"\r\nimport abilityEvents from \"../lib/abilityEvents\"\r\nimport auraEvents from \"../lib/auraEvents\"\r\n\r\nclass EventHandler {\r\n\r\n    constructor(eventTriggers, events) {\r\n        this.eventTriggers = eventTriggers\r\n        this.events = events\r\n    }\r\n\r\n    handleEvent(event, payload) {\r\n        if(!this.events[event]) return\r\n\r\n        this.events[event].forEach(e => this.eventTriggers[e]({\r\n            type: e,\r\n            payload\r\n        }))\r\n    }\r\n}\r\n\r\nexport const constructEventHandler = (name, triggers) => {\r\n    const eventTriggers = {}\r\n\r\n    triggers.forEach(trigger => {\r\n        let types = trigger.eventTypes\r\n        types.forEach(type => {\r\n            events[type].forEach(e => eventTriggers[e] = trigger.trigger)\r\n        })\r\n    })\r\n\r\n    return new EventHandler(eventTriggers, abilityEvents[name].onEvent)\r\n}\r\n\r\nexport const auraEventHandler = (name, trigger) => {\r\n    const types = [\"AURA\", \"RESOURCE\", \"STAT\"]\r\n    const eventTriggers = {}\r\n\r\n    types.forEach(type => {\r\n        events[type].forEach(e => eventTriggers[e] = trigger)\r\n    })\r\n\r\n    return new EventHandler(eventTriggers, auraEvents[name].onEvent)\r\n}","export const interval = 20\r\nexport const lag = 50\r\nexport const spellQueueWindow = 250\r\nexport const keybinds = {\r\n    \"!\": \"S-1\",\r\n    \"@\": \"S-2\",\r\n    \"#\": \"S-3\",\r\n    \"$\": \"S-4\",\r\n    \"%\": \"S-5\",\r\n    \"^\": \"S-6\",\r\n    \"&\": \"S-7\",\r\n    \"*\": \"S-8\",\r\n    \"(\": \"S-9\",\r\n    \")\": \"S-0\",\r\n    \" \": \"SPC\"\r\n}","import {constructEventHandler} from \"./eventHandler\"\r\nimport {interval, lag} from \"../lib/constants\"\r\n\r\nclass Ability {\r\n\r\n    constructor(initialState, updateFn, onExecute, eventHandler) {\r\n        this.state = initialState\r\n        this.updateState = updateFn\r\n        this.onExecute = initialState.ignoreGcd ? () => {} : onExecute\r\n        this.eventHandler = eventHandler\r\n        this.updateState({\r\n            progress: 0,\r\n            charges: initialState.charges.maxCharges || 1\r\n        })       \r\n    }\r\n\r\n    static create(type, initialState, updateFn, onExecute, triggers) {\r\n        const eventHandler = constructEventHandler(initialState.name, triggers)\r\n        switch(type) {\r\n            case \"instant\":\r\n                return new InstantAbility(initialState, updateFn, onExecute, eventHandler)\r\n            case \"cast\":\r\n                return new CastAbility(initialState, updateFn, onExecute, eventHandler)\r\n            case \"channel\":\r\n                return new ChannelAbility(initialState, updateFn, onExecute, eventHandler)\r\n        }\r\n    }\r\n\r\n    getCurrentState() {\r\n        const currentState = {}\r\n        let state = this.state\r\n\r\n        Object.keys(state).forEach(k => {\r\n            let value = state[k]\r\n            if(typeof value !== \"object\") {\r\n                currentState[k] = value\r\n                return\r\n            }\r\n\r\n            const subState = {}\r\n            Object.keys(value).forEach(k2 => {\r\n                let value2 = value[k2]\r\n                if(value2 === \"undefined\") return\r\n                subState[k2] =  typeof value2 !== \"object\" ? value2 : value2.current\r\n            })\r\n            currentState[k] = subState\r\n        })\r\n\r\n        return currentState\r\n    }\r\n\r\n    getRemainingCooldown() {\r\n        const now = Date.now()\r\n        const startTime = this.state.cooldown.startTime.current\r\n        const duration = startTime ? this.state.cooldown.duration.current : 0\r\n        const charges = this.state.charges.current.current\r\n        const remaining = charges === 0 ? ((startTime || now) + duration) - now : 0\r\n\r\n        return remaining\r\n    }\r\n\r\n    startCooldown() {\r\n        let state = this.getCurrentState()\r\n        const {name} = state\r\n        const {maxCharges} = state.charges\r\n\r\n        this.cooldownTimer = setInterval(() => {\r\n            let now = Date.now()\r\n\r\n            let duration = this.state.cooldown.duration.current\r\n            let startTime = this.state.cooldown.startTime.current || now\r\n            let charges = this.state.charges.current.current\r\n            let remaining = (startTime + duration) - now\r\n\r\n            if(remaining <= interval) {\r\n                this.updateState(state => {\r\n                    return {...state, charges: charges+1}\r\n                })\r\n\r\n                clearInterval(this.cooldownTimer)\r\n\r\n                if(maxCharges && charges < maxCharges - 1) {\r\n                    this.startCooldown()\r\n                    return\r\n                }\r\n\r\n                this.eventHandler.handleEvent(\"COOLDOWN_END\", {name})\r\n\r\n                this.updateState(state => {\r\n                    return {...state, progress: 0}\r\n                })\r\n\r\n                return\r\n            }\r\n            this.updateState(state => {\r\n                return {...state, progress: remaining/duration}\r\n            })\r\n\r\n        }, interval)\r\n\r\n        this.eventHandler.handleEvent(\"COOLDOWN_START\", {\r\n            name,\r\n            time: Date.now()\r\n        })\r\n    }\r\n\r\n    startCast() {\r\n        let state = this.getCurrentState()\r\n        const {name, displayName, resource, costsResource} = state\r\n        const {duration} = state.cast\r\n\r\n        this.castTimer = setTimeout(() => {\r\n            this.eventHandler.handleEvent(\"CAST_SUCCESS\", {\r\n                name,\r\n                resource,\r\n                costsResource,\r\n                time: Date.now()\r\n            })\r\n\r\n            let cooldown = this.state.cooldown.duration.current\r\n            let currentlyOnCooldown = this.state.cooldown.startTime.current\r\n            let charges = this.state.charges.current.current\r\n\r\n            if(cooldown) {\r\n                this.updateState(state => {\r\n                    return {...state, charges: charges-1}\r\n                })\r\n                if(currentlyOnCooldown) return               \r\n                this.startCooldown()\r\n            }\r\n\r\n        }, duration)\r\n\r\n        this.eventHandler.handleEvent(\"CAST_START\", {\r\n            name,\r\n            displayName,\r\n            duration,\r\n            time: Date.now()\r\n        })\r\n    }\r\n\r\n    startChannel() {\r\n        let state = this.getCurrentState()\r\n        const {startTime, endTime, duration} = state.cast\r\n        const {baseDuration, baseTicks, ticks} = state.channel\r\n        const {name, displayName, resource} = state\r\n        const gcd = state.globalCooldown.duration\r\n\r\n        let now = Date.now()\r\n        let pandemicTime = 0\r\n        let currentTicks = baseTicks\r\n\r\n        if(startTime) {\r\n            clearInterval(this.channelTimer)\r\n            const previousChannelTime = endTime - startTime\r\n            const previousChannelRemaining = previousChannelTime - (now - startTime)\r\n            const maximumTicks = Math.floor(baseTicks * ((baseDuration - gcd)/baseDuration))      \r\n            pandemicTime = Math.min(previousChannelRemaining, baseDuration * .3)\r\n\r\n            const remainingTicks = Math.min(ticks, maximumTicks)\r\n\r\n            currentTicks += remainingTicks\r\n        }\r\n\r\n        let channelFrequency = Math.round((duration+pandemicTime)/currentTicks)\r\n\r\n        this.channelTimer = setInterval(() => {\r\n\r\n            let now = Date.now()\r\n            let endTime = this.state.cast.endTime.current\r\n            let lastTick = this.state.channel.ticks.current === 1\r\n            let tickResourceModifier = lastTick ? (pandemicTime && .3 || 1) : 1\r\n\r\n            //another cast has stopped this channel, don't update\r\n            if(!endTime) {\r\n                clearInterval(this.channelTimer)\r\n\r\n                this.eventHandler.handleEvent(\"CHANNEL_END\", {\r\n                    name\r\n                })\r\n                return\r\n            }\r\n\r\n            this.eventHandler.handleEvent(\"CHANNEL_UPDATE\", {\r\n                resource: (resource/baseTicks) * tickResourceModifier,\r\n                name\r\n            })\r\n\r\n            if(now >= endTime) {\r\n                clearInterval(this.channelTimer)\r\n\r\n                this.eventHandler.handleEvent(\"CHANNEL_END\", {\r\n                    name\r\n                })\r\n                return\r\n            }\r\n\r\n        }, channelFrequency)\r\n\r\n        this.eventHandler.handleEvent(\"CHANNEL_START\", {\r\n            name,\r\n            displayName,\r\n            duration: duration + pandemicTime,\r\n            time: now,\r\n            baseChannelTime: duration,\r\n            currentTicks\r\n        })\r\n    }\r\n\r\n    beginGlobalCooldown() {\r\n        let state = this.getCurrentState()\r\n        const {duration, startTime} = state.globalCooldown\r\n        const {current, maxCharges} = state.charges\r\n\r\n        if(state.ignoreGcd) return\r\n\r\n        if(state.cooldown.startTime) {\r\n            if(maxCharges && current < maxCharges - 1) return\r\n            let remaining = (state.cooldown.startTime + state.cooldown.duration) - startTime\r\n            if(remaining > duration) return\r\n        }\r\n\r\n        this.globalCooldownTimer = setInterval(() => {\r\n            let now = Date.now()\r\n            let remaining = (startTime + duration) - now\r\n            if(remaining <= interval) {\r\n                clearInterval(this.globalCooldownTimer)\r\n                this.updateState(state => {\r\n                    return {...state, progress: 0}\r\n                })\r\n                             \r\n                return\r\n            }\r\n\r\n            if(this.state.cooldown.startTime.current) return\r\n            this.updateState(state => {\r\n                return {...state, progress: remaining/duration}\r\n            })\r\n        }, interval)\r\n    }\r\n\r\n    canExecute() {\r\n        if(this.state.disabled.current) return false\r\n        if(this.state.unusable.current) return false\r\n\r\n        return true\r\n    }\r\n\r\n    remove() {\r\n        clearInterval(this.cooldownTimer)\r\n        clearInterval(this.globalCooldownTimer)\r\n        clearInterval(this.channelTimer)\r\n        clearTimeout(this.castTimer)\r\n    }\r\n}\r\n\r\nclass InstantAbility extends Ability {\r\n\r\n    execute() {\r\n        if(this.state.cast.casting.current) return false\r\n        let state = this.getCurrentState()\r\n        const {name, resource, costsResource} = state\r\n        const {startTime} = state.cooldown\r\n        const {maxCharges, current} = state.charges\r\n\r\n        if(startTime && current === 0) return      \r\n        this.updateState(state => {\r\n            return {...state, charges: current-1}\r\n        })\r\n\r\n        this.eventHandler.handleEvent(\"CAST_SUCCESS\", {\r\n            name,\r\n            resource,\r\n            costsResource,\r\n            time: Date.now()\r\n        })\r\n\r\n        this.onExecute()\r\n        if(maxCharges && current < maxCharges) return\r\n        this.startCooldown()\r\n    }\r\n}\r\n\r\nclass CastAbility extends Ability {\r\n\r\n    execute() {\r\n        if(this.state.cast.casting.current) return false\r\n        let state = this.getCurrentState()\r\n        const {startTime} = state.cast\r\n        const {current} = state.charges\r\n\r\n        if(startTime || current === 0) return\r\n        this.startCast()\r\n        this.onExecute()\r\n    }\r\n}\r\n\r\nclass ChannelAbility extends Ability {\r\n\r\n    execute() {\r\n        if(this.state.cast.casting.current) return false\r\n        let state = this.getCurrentState()\r\n        const {duration, startTime} = state.cooldown\r\n\r\n        if(startTime) return\r\n        this.startChannel()\r\n        if(duration) {\r\n            this.startCooldown()\r\n        }\r\n        this.onExecute()\r\n    }\r\n}\r\n\r\nexport default Ability","import React, {useState, useEffect, useRef} from 'react';\r\nimport \"./ProgressAbility.css\"\r\nimport CooldownSweep from \"./CooldownSweep\"\r\nimport Ability from \"../utils/ability\"\r\n\r\nconst ProgressAbility = (props) => {\r\n\r\n    const {name, displayName, settings, cooldown, globalCooldown, globalCooldownStartTime, unusable, startTime, casttime, castStartTime, castEndTime, icon, baseChannelTime, currentTicks, keybind, casting, subscribe, unsubscribe, onExecute, onAbilityUpdate, onClick, triggerEvent, show, reset} = props\r\n\r\n    const size = 50\r\n\r\n    const [state, setState] = useState({})\r\n\r\n    const {key, keybindText} = keybind\r\n    const {type, resource, costsResource, charges, ticks, ignoreGcd} = settings\r\n\r\n    //cooldown states\r\n    const startTimeRef = useRef(startTime)\r\n    const cooldownRef = useRef(cooldown)\r\n\r\n    startTimeRef.current = startTime\r\n    cooldownRef.current = cooldown\r\n\r\n    //cast states\r\n    const castStartTimeRef = useRef(castStartTime)\r\n    const castEndTimeRef = useRef(castEndTime)\r\n    const casttimeRef = useRef(casttime)\r\n    const castingRef = useRef(casting)\r\n\r\n    castStartTimeRef.current = castStartTime\r\n    castEndTimeRef.current = castEndTime\r\n    casttimeRef.current = casttime\r\n    castingRef.current = casting\r\n\r\n    //channel states\r\n    const baseChannelTimeRef = useRef(baseChannelTime)\r\n    const ticksRef = useRef(currentTicks)\r\n\r\n    baseChannelTimeRef.current = baseChannelTime\r\n    ticksRef.current = currentTicks\r\n\r\n    //charge states\r\n    const chargesRef = useRef(charges || 1)\r\n\r\n    chargesRef.current = state.charges\r\n\r\n    //gcd states\r\n    const globalCooldownRef = useRef(globalCooldown)\r\n    const globalCooldownStartTimeRef = useRef(globalCooldownStartTime)\r\n\r\n    globalCooldownRef.current = globalCooldown\r\n    globalCooldownStartTimeRef.current = globalCooldownStartTime\r\n\r\n    //other states\r\n    const unusableRef = useRef(unusable)\r\n    unusableRef.current = unusable\r\n\r\n    const disabledRef = useRef(!show)\r\n    disabledRef.current = !show\r\n\r\n    const ability = useRef()\r\n\r\n    useEffect(() => {\r\n        const triggers = [{\r\n            eventTypes: [\"CAST\"],\r\n            trigger: onAbilityUpdate \r\n        },\r\n        {\r\n            eventTypes: [\"RESOURCE\", \"AURA\", \"STAT\"],\r\n            trigger: triggerEvent\r\n        }]\r\n\r\n        const initialState = {\r\n            name,\r\n            displayName,\r\n            resource,\r\n            costsResource,\r\n            unusable: unusableRef,\r\n            disabled: disabledRef,\r\n            ignoreGcd,\r\n            cooldown: {\r\n                duration: cooldownRef,\r\n                startTime: startTimeRef\r\n            },\r\n            cast: {\r\n                duration: casttimeRef,\r\n                startTime: castStartTimeRef,\r\n                endTime: castEndTimeRef,\r\n                casting: castingRef\r\n            },\r\n            channel: {\r\n                baseDuration: baseChannelTimeRef,\r\n                baseTicks: ticks,\r\n                ticks: ticksRef\r\n            },\r\n            charges: {\r\n                maxCharges: charges,\r\n                current: chargesRef\r\n            },\r\n            globalCooldown: {\r\n                duration: globalCooldownRef,\r\n                startTime: globalCooldownStartTimeRef\r\n            }\r\n        }\r\n\r\n        ability.current = Ability.create(type, initialState, setState, onExecute, triggers)\r\n        \r\n        subscribe({\r\n            source: name,\r\n            keybind: key,\r\n            execute: () => ability.current.execute(),\r\n            notify: () => ability.current.beginGlobalCooldown(),\r\n            getRemainingCooldown: () => ability.current.getRemainingCooldown(),\r\n            canExecute: () => ability.current.canExecute(),\r\n            ignoresGcd: !!ignoreGcd\r\n        })\r\n\r\n        return () => {\r\n            ability.current.remove()\r\n            unsubscribe(name)\r\n        }\r\n    }, [key, reset])\r\n\r\n    const handleClick = () => {\r\n        onClick(name, () => ability.current.getRemainingCooldown(), () => ability.current.execute(), () => ability.current.canExecute(), !!ignoreGcd)\r\n    }\r\n\r\n    return (\r\n        show ? <div className=\"progress-ability-container\">\r\n            <div className=\"progress-ability hover-pointer\" onClick={handleClick}>\r\n                <img\r\n                    className={!unusable && ((state.charges > 0 && charges) || (!startTimeRef.current)) ? \"colored\" : \"desaturated\"}\r\n                    src={icon}\r\n                    width={size}\r\n                    height={size}\r\n                />\r\n                <div className=\"charge-text\">{charges > 1 ? state.charges : \"\"}</div>\r\n                {startTimeRef.current || globalCooldownRef.current ? \r\n                <CooldownSweep size={size} progress={state.progress}/>\r\n                : null}\r\n            </div>\r\n            <div>{keybindText}</div>\r\n        </div>\r\n        : null\r\n    )\r\n}\r\n\r\nexport default ProgressAbility;","const GlobalCooldown = {\r\n\r\n    start: (duration, triggerEvent) => {\r\n        triggerEvent({\r\n            type: \"GLOBAL_COOLDOWN_START\",\r\n            payload: {\r\n                gcd: duration,\r\n                time: Date.now()\r\n\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            triggerEvent({\r\n                type: \"GLOBAL_COOLDOWN_END\"\r\n            })    \r\n        }, duration);\r\n    }\r\n}\r\n\r\nexport default GlobalCooldown","import React, {useState, useEffect, useRef} from 'react';\r\nimport \"./CastBar.css\"\r\n\r\nconst CastBar = (props) => {\r\n\r\n    const {time, name, displayName, duration, direction} = props\r\n\r\n    const sec = 1000\r\n    const interval = 50\r\n\r\n    const [current, setCurrent] = useState(0)\r\n\r\n    const timeRef = useRef(time)\r\n    const durationRef = useRef(time)\r\n\r\n    timeRef.current = time\r\n    durationRef.current = duration\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            let now = Date.now()\r\n            setCurrent(current => now - timeRef.current)\r\n        }, interval)\r\n\r\n        return () => {\r\n            clearInterval(timer)\r\n            setCurrent(current => 0)\r\n        }\r\n    }, [name])\r\n\r\n    return (\r\n        <div className=\"progress-bar-container\">\r\n            <div className=\"cast-bar-text-container\">\r\n                <div className=\"progress-text cast-bar-text\">{displayName}</div>\r\n                <div className=\"progress-text cast-bar-text\">{direction \r\n                ? `${(current/sec).toFixed(1)}/${((duration/sec).toFixed(1))}`\r\n                : `${((durationRef.current-current)/sec).toFixed(1)}/${((durationRef.current/sec).toFixed(1))}`}sec\r\n                </div> \r\n            </div>\r\n            <div className=\"progress-bar cast-bar\" \r\n                style={{\r\n                    width: direction \r\n                    ? `${(current/durationRef.current*100).toFixed(2)}%`\r\n                    : `${((durationRef.current-current)/durationRef.current*100).toFixed(2)}%`\r\n            }}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastBar","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport ProgressAbility from \"./ProgressAbility\"\r\nimport GlobalCooldown from \"./GlobalCooldown\"\r\nimport CastBar from \"./CastBar\"\r\nimport {spellQueueWindow} from \"../lib/constants\"\r\nimport \"./AbilityBar.css\"\r\n\r\nconst AbilityBar = (props) => {\r\n\r\n    const gcdLength = 1500\r\n    const {abilitySettings, abilities, haste, inVoidform, triggerEvent, keyEventsPaused, reset} = props\r\n\r\n    const hasteRef = useRef(haste)\r\n    hasteRef.current = haste\r\n\r\n    const inVoidformRef = useRef(inVoidform)\r\n    inVoidformRef.current = inVoidform \r\n\r\n    const spellQueueTimer = useRef()\r\n\r\n    const defaultCooldowns = () => {\r\n        const cooldowns = {}\r\n        Object.keys(abilities).forEach(k => {\r\n            if(abilitySettings[k] && abilitySettings[k].disabled) return\r\n            cooldowns[k] = {\r\n                startTime: 0\r\n            }\r\n        })\r\n\r\n        return cooldowns\r\n    }\r\n\r\n    const [observers, setObservers] = useState([])\r\n\r\n    const observersRef = useRef(observers)\r\n    observersRef.current = observers\r\n\r\n    const defaultState = {\r\n        globalCooldown: 0,\r\n        cooldowns: defaultCooldowns(),\r\n        status: {}\r\n    }\r\n\r\n    const [hasReset, setHasReset] = useState(reset)\r\n\r\n    useEffect(() => {\r\n        triggerCooldown({\r\n            type: \"RESET\"\r\n        })\r\n\r\n        return () => setHasReset(reset)\r\n    }, [reset])\r\n\r\n    useEffect(() => {\r\n        const name = \"mind-blast\"\r\n        const ability = abilitySettings[name]\r\n        const duration = getAbilityCooldown(name)\r\n        let cdr = ability.cdr * (inVoidform && -1 || 1)\r\n        ability.cooldown += cdr\r\n\r\n        const startTime = state.cooldowns[name].startTime\r\n        if(!startTime || hasReset === reset) return\r\n        cdr = getAbilityCooldown(name) - duration\r\n        const now = Date.now()\r\n        const remaining = (startTime + duration) - now\r\n        const remainingPercent = remaining/duration\r\n        const remainingCdr = remainingPercent * cdr\r\n\r\n        triggerCooldown({\r\n            type: \"ABILITY_COOLDOWN_START\",\r\n            payload: {\r\n                name,\r\n                time: startTime + remainingCdr - cdr\r\n            }\r\n        })\r\n\r\n    }, [inVoidform])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleKeyPress)\r\n        document.addEventListener(\"keypress\", handleKeyPress)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", handleKeyPress)\r\n            document.removeEventListener(\"keypress\", handleKeyPress)\r\n        }\r\n    }, [keyEventsPaused])\r\n\r\n    const [state, triggerCooldown] = useReducer((oldState, action) => {\r\n        const newState = JSON.parse(JSON.stringify(oldState))\r\n        const payload = action.payload\r\n\r\n        switch(action.type) {\r\n            case \"RESET\":\r\n                return defaultState\r\n            case \"EXECUTE_PENDING\":\r\n                var {name} = payload\r\n                newState.status[name] = \"PENDING\"\r\n                break\r\n            case \"EXECUTE_END\":\r\n                var {name} = payload\r\n                newState.status[name] = \"\"\r\n                break\r\n            case \"ABILITY_CAST_SUCCESS\":\r\n                var {name} = payload\r\n                if(abilitySettings[\"void-bolt\"].rankTwo && newState.casting && name === \"void-bolt\" && newState.casting.name === \"mind-flay\") {\r\n                    break\r\n                }\r\n                newState.cooldowns[name].castStartTime = 0\r\n                newState.cooldowns[name].castEndTime = 0\r\n\r\n                if(newState.casting) {\r\n                    newState.cooldowns[newState.casting.name].castStartTime = 0\r\n                    newState.cooldowns[newState.casting.name].castEndTime = 0\r\n                    delete newState.casting\r\n                }\r\n                break\r\n            case \"ABILITY_COOLDOWN_START\":\r\n                var {name, time} = payload\r\n                newState.cooldowns[name].startTime = time\r\n                break\r\n            case \"ABILITY_COOLDOWN_END\":\r\n                var {name} = payload\r\n                newState.cooldowns[name].startTime = 0\r\n                break\r\n            case \"ABILITY_CAST_START\":\r\n                var {name, displayName, time, duration} = payload\r\n                newState.cooldowns[name].castStartTime = time\r\n                newState.cooldowns[name].castEndTime = time + duration\r\n                if(newState.casting) {\r\n                    newState.cooldowns[newState.casting.name].castStartTime = 0\r\n                    newState.cooldowns[newState.casting.name].castEndTime = 0\r\n                }\r\n                newState.casting = {\r\n                    duration,\r\n                    name,\r\n                    displayName,\r\n                    direction: 1,\r\n                    time\r\n                }\r\n                break\r\n            case \"ABILITY_CHANNEL_START\":\r\n                var {name, displayName, time, duration, baseChannelTime, currentTicks} = payload\r\n                var ability = newState.cooldowns[name]\r\n\r\n                newState.cooldowns[name] = {\r\n                    ...ability,\r\n                    castStartTime: time,\r\n                    castEndTime: time + duration,\r\n                    baseChannelTime,\r\n                    currentTicks\r\n                }\r\n\r\n                if(newState.casting && name !== newState.casting.name) {\r\n                    newState.cooldowns[newState.casting.name].castStartTime = 0\r\n                    newState.cooldowns[newState.casting.name].castEndTime = 0\r\n                }\r\n                newState.casting = {\r\n                    duration,\r\n                    name,\r\n                    displayName,\r\n                    direction: 0,\r\n                    time\r\n                }\r\n                break\r\n            case \"ABILITY_CHANNEL_UPDATE\":\r\n                var {name} = payload\r\n                newState.cooldowns[name].currentTicks--\r\n                break\r\n            case \"ABILITY_CHANNEL_END\":\r\n                var {name} = payload\r\n                var ability = newState.cooldowns[name]\r\n\r\n                newState.cooldowns[name] = {\r\n                    ...ability,\r\n                    castStartTime: 0,\r\n                    castEndTime: 0,\r\n                    currentTicks: 0\r\n                }\r\n                if(newState.casting && name === newState.casting.name) delete newState.casting\r\n                break\r\n            case \"GLOBAL_COOLDOWN_START\":\r\n                newState.globalCooldown = payload.gcd\r\n                newState.globalCooldownStartTime = payload.time\r\n                break\r\n            case \"GLOBAL_COOLDOWN_END\":\r\n                newState.globalCooldownStartTime = 0\r\n                break\r\n            default:\r\n                console.error(`Invalid action provided: ${action.type}`)\r\n        }\r\n\r\n        return newState\r\n\r\n    }, defaultState)\r\n\r\n    const globalCooldownRef = useRef(state.globalCooldown)\r\n    globalCooldownRef.current = state.globalCooldown\r\n\r\n    const globalCooldownStartTimeRef = useRef(state.globalCooldownStartTime)\r\n    globalCooldownStartTimeRef.current = state.globalCooldownStartTime\r\n\r\n    const handleKeyPress = (e) => {\r\n        if(keyEventsPaused) return\r\n\r\n        const now = Date.now()\r\n\r\n        observersRef.current.forEach(o => {\r\n            if(o.keybind === e.key) {\r\n                e.preventDefault()\r\n                const abilityCooldownRemaining = o.getRemainingCooldown()\r\n                const globalCooldownRemaining = globalCooldownRef.current ? globalCooldownRef.current - (now - globalCooldownStartTimeRef.current) : 0\r\n                const remaining = o.ignoresGcd ? 0 : Math.max(abilityCooldownRemaining, globalCooldownRemaining)\r\n\r\n                if(remaining > spellQueueWindow) return\r\n                if(!o.canExecute()) return\r\n\r\n                queueAbility(o.source, o.execute, remaining + 15)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleClick = (name, getRemainingCooldown, execute, canExecute, ignoresGcd) => {\r\n        const now = Date.now()\r\n\r\n        const abilityCooldownRemaining = getRemainingCooldown()\r\n        const globalCooldownRemaining = globalCooldownRef.current ? globalCooldownRef.current - (now - globalCooldownStartTimeRef.current) : 0\r\n        const remaining = ignoresGcd ? 0 : Math.max(abilityCooldownRemaining, globalCooldownRemaining)\r\n\r\n        if(remaining > spellQueueWindow) return\r\n        if(!canExecute()) return\r\n\r\n        queueAbility(name, execute, remaining + 15)\r\n    }\r\n\r\n    const calculateCooldown = (cooldown) => {\r\n        return cooldown/hasteRef.current\r\n    }\r\n\r\n    const triggerGlobalCooldown = () => {\r\n        let gcd = Math.max(calculateCooldown(gcdLength), gcdLength/2)\r\n\r\n        GlobalCooldown.start(gcd, triggerCooldown)\r\n\r\n        setTimeout(() => {\r\n            observersRef.current.forEach(o => o.notify())\r\n        }, 0)\r\n    }\r\n\r\n    const subscribe = (observer) => {\r\n        setObservers(o => [...o, observer])\r\n    }\r\n\r\n    const unsubscribe = (source) => {\r\n        setObservers(obs => obs.filter(o => o.source !== source))\r\n    }\r\n\r\n    const getAbilityCooldown = (k) => {\r\n        const ability = abilitySettings[k]\r\n        const cooldown = ability.cooldown\r\n\r\n        return ability.hasted ? calculateCooldown(cooldown) : cooldown\r\n    }\r\n\r\n    const getAbilityCastTime = (k) => {\r\n        const ability = abilitySettings[k]\r\n        const casttime = ability.casttime\r\n\r\n        return ability.staticCastTime ? casttime : calculateCooldown(casttime)\r\n    }\r\n\r\n    const queueAbility = (name, execute, remaining) => {\r\n\r\n        clearTimeout(spellQueueTimer.current)\r\n\r\n        spellQueueTimer.current = setTimeout(() => {\r\n            if(!observersRef.current.find(o => o.source === name)) return\r\n            execute()\r\n        }, remaining)\r\n    }\r\n\r\n    const makeGroupChunks = (size) => (chunks, curr, i) => {\r\n        const index = Math.floor(i/size)\r\n        chunks[index] = [...chunks[index] || [], curr]\r\n        return chunks\r\n    }\r\n\r\n    const disabledAbilities = (k) => {\r\n        if(abilities[k].disabled) return false\r\n        // if(k === \"void-bolt\" && !inVoidformRef.current) return false\r\n        // if(k === \"void-eruption\" && inVoidformRef.current) return false\r\n\r\n        return true\r\n    }\r\n\r\n    const showAbility = (k) => {\r\n        if(k === \"void-bolt\" && !inVoidformRef.current) return false\r\n        if(k === \"void-eruption\" && inVoidformRef.current) return false\r\n\r\n        return true\r\n    }\r\n\r\n    const buildAbilityBar = (abilities) => {\r\n        return Object.keys(abilities)\r\n            .filter(disabledAbilities)\r\n            .sort((k1, k2) => abilities[k1].index - abilities[k2].index)\r\n            //.reduce(makeGroupChunks(8), [])\r\n    }\r\n\r\n    return (\r\n    <div className=\"ability-bar-container\">\r\n        <div className=\"progress-bar-container\">\r\n            {state.casting ? <CastBar {...state.casting}/> : null}\r\n        </div>\r\n        <div className=\"ability-bar\">\r\n            {buildAbilityBar(abilities)\r\n            .map(k => {\r\n                return <ProgressAbility\r\n                    name={k}\r\n                    key={`ability-${k}`}\r\n                    {...abilities[k]}\r\n                    {...state.cooldowns[k]}\r\n                    settings={abilitySettings[k]}\r\n                    cooldown={getAbilityCooldown(k)}\r\n                    globalCooldown={state.globalCooldown}\r\n                    globalCooldownStartTime={state.globalCooldownStartTime}\r\n                    casttime={getAbilityCastTime(k)}\r\n                    casting={state.casting && state.casting.time && state.casting.direction}\r\n                    subscribe={subscribe}\r\n                    unsubscribe={unsubscribe}\r\n                    onExecute={triggerGlobalCooldown}\r\n                    onAbilityUpdate={triggerCooldown}\r\n                    onClick={handleClick}\r\n                    triggerEvent={triggerEvent}\r\n                    show={showAbility(k)}\r\n                    reset={reset}\r\n                    />\r\n                })}\r\n        </div>        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default AbilityBar","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport CooldownSweep from \"../CooldownSweep\"\r\nimport \"./Aura.css\"\r\n\r\nconst Aura = (props) => {\r\n\r\n    const {icon, displayName, duration, maxDuration, stacks} = props\r\n\r\n    const size = 30\r\n    const progress = duration && ((maxDuration-duration)/maxDuration)\r\n\r\n    return (\r\n        <div className=\"aura\">\r\n            <img\r\n                src={icon}\r\n                width={size}\r\n                height={size}\r\n            >\r\n            </img>\r\n            <div className=\"aura-text\">{stacks > 0 ? stacks : \"\"}</div>\r\n            {duration ? <CooldownSweep size={30} progress={progress} inverse={true}/> : null}\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aura","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Aura from \"./Aura\"\r\n\r\nconst LingeringInsanity = (props) => {\r\n\r\n    const { type, startTime, haste, stacks, inVoidform, triggerEvent, ...settings} = props\r\n\r\n    const interval = 100\r\n    const name = \"lingeringInsanity\"\r\n    const displayName = \"Lingering Insanity\"\r\n    const icon = \"images/lingering-insanity.jpg\"\r\n    const defaultMaxDuration = 60000\r\n\r\n    const [maxDuration, setMaxDuration] = useState(defaultMaxDuration)\r\n    const [duration, setDuration] = useState(0)\r\n\r\n    const stacksRef = useRef(stacks)\r\n    stacksRef.current = stacks\r\n\r\n    const inVoidformRef = useRef(inVoidform)\r\n    inVoidformRef.current = inVoidform\r\n\r\n    const startTimeRef = useRef(startTime)\r\n    startTimeRef.current = startTime\r\n\r\n    const hasteRef = useRef(haste)\r\n    hasteRef.current = haste\r\n\r\n    const initialize = (afterVoidformEntry, hasteRetention, stacks, duration) => {\r\n        let currentMaxDuration = afterVoidformEntry ? defaultMaxDuration : duration\r\n        let voidformEntered = false\r\n\r\n        setMaxDuration(maxDuration => currentMaxDuration)\r\n\r\n        triggerEvent({\r\n            type: \"LINGERING_INSANITY_START\",\r\n            payload: {\r\n                haste: hasteRef.current * hasteRetention,\r\n                stacks: Math.ceil(stacks * hasteRetention)\r\n            }\r\n        })\r\n\r\n        return {\r\n            currentMaxDuration,\r\n            voidformEntered\r\n        }\r\n\r\n    }\r\n\r\n    const startStatic = () => {\r\n\r\n        const { duration, afterVoidformEntry, hasteRetention } = settings\r\n        \r\n        let state = initialize(afterVoidformEntry, hasteRetention, stacksRef.current, duration)\r\n\r\n        const timer = setInterval(() => {\r\n\r\n            const now = Date.now()\r\n\r\n            //just left voidform\r\n            if(state.voidformEntered && !inVoidformRef.current) {\r\n                state = initialize(afterVoidformEntry, hasteRetention, stacksRef.current, duration)\r\n\r\n                return\r\n            }\r\n\r\n            //timed out\r\n            if(now >= startTimeRef.current + state.currentMaxDuration) {\r\n                clearInterval(timer)\r\n                triggerEvent({\r\n                    type: \"LINGERING_INSANITY_END\"\r\n                })\r\n\r\n                return\r\n            }\r\n\r\n            if(!state.voidformEntered && inVoidformRef.current) \r\n            {\r\n                state.voidformEntered = true\r\n\r\n                if(afterVoidformEntry) {\r\n                    triggerEvent({\r\n                        type: \"AURA_REFRESH\",\r\n                        payload: {\r\n                            name,\r\n                            time: now\r\n                        }\r\n                    })\r\n                    setMaxDuration(maxDuration => duration)\r\n                    state.currentMaxDuration = duration\r\n                    setDuration(duration => 0)\r\n                    return\r\n                }\r\n           }            \r\n\r\n            setDuration(duration => now - startTimeRef.current)\r\n\r\n        }, interval)\r\n\r\n        return timer\r\n    }\r\n\r\n    const calculateDecayStacks = (voidformHaste, hasteDecay) => {\r\n        return Math.ceil(voidformHaste/hasteDecay)\r\n    }\r\n\r\n    const startDecay = () => {\r\n\r\n        const { decayRate, hasteDecay } = settings\r\n\r\n        let i = 0\r\n\r\n        let state = initialize(true, 1, calculateDecayStacks(hasteRef.current, hasteDecay))\r\n\r\n        const timer = setInterval(() => {\r\n\r\n            i += interval\r\n\r\n            const now = Date.now()\r\n\r\n            if(state.voidformEntered && !inVoidformRef.current) {\r\n                state = initialize(true, 1, calculateDecayStacks(hasteRef.current, hasteDecay))\r\n                i = 0\r\n\r\n                return\r\n            }\r\n\r\n            if(stacksRef.current <= 0) {\r\n                clearInterval(timer)\r\n                triggerEvent({\r\n                    type: \"LINGERING_INSANITY_END\"\r\n                })\r\n\r\n                return\r\n            }\r\n\r\n            //lose stack\r\n            if(i % decayRate === 0) {\r\n                triggerEvent({\r\n                    type: \"LINGERING_INSANITY_UPDATE\",\r\n                    payload: hasteDecay * -1\r\n                })\r\n            }\r\n\r\n            if(!state.voidformEntered && inVoidformRef.current) state.voidformEntered = true\r\n\r\n            setDuration(duration => now - startTimeRef.current)\r\n\r\n        }, interval)\r\n\r\n        return timer\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer\r\n\r\n        switch(type) {\r\n            case \"static\":\r\n                timer = startStatic()\r\n                break\r\n            case \"decay\":\r\n                timer = startDecay()\r\n                break\r\n        }\r\n\r\n        return () => clearInterval(timer)\r\n\r\n    }, [])\r\n\r\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={maxDuration} stacks={stacks}/>\r\n}\r\n\r\nexport default LingeringInsanity","import React, { useState, useEffect, useRef } from 'react';\r\nimport Aura from \"./Aura\"\r\n\r\nconst Voidform = (props) => {\r\n\r\n    const { drainRate, drainStart, hasteStack, hasteStart, maxStacks, paused, active, triggerEvent } = props\r\n    const interval = 100\r\n    const displayName = \"Voidform\"\r\n    const icon = \"images/voidform.jpg\"\r\n\r\n    const [stacks, setStacks] = useState(1)\r\n\r\n    const pausedRef = useRef(paused)\r\n    pausedRef.current = paused\r\n\r\n    const start = () => {\r\n        let n = 0\r\n        let frequency = Math.round(1000 / interval)\r\n\r\n        let i = 0\r\n\r\n        triggerEvent({\r\n            type: \"HASTE_UPDATE\",\r\n            payload: {\r\n                source: \"voidform\",\r\n                haste: hasteStart + hasteStack\r\n            }\r\n        })\r\n\r\n        const timer = setInterval(() => {\r\n            let sec = interval / 1000\r\n            let drain = (drainStart + drainRate * n) * sec\r\n\r\n            i++\r\n\r\n            if (!pausedRef.current) {\r\n                n += sec\r\n                triggerEvent({\r\n                    type: \"RESOURCE_UPDATE\",\r\n                    payload: {\r\n                        resource: drain * -1\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (i % frequency === 0 && (!maxStacks || i / frequency < maxStacks)) {\r\n                //gain a stack of vf\r\n                triggerEvent({\r\n                    type: \"VOIDFORM_UPDATE\",\r\n                    payload: hasteStack\r\n                })\r\n                setStacks(stacks => stacks + 1)\r\n            }\r\n\r\n        }, interval)\r\n\r\n        return timer\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer = start()\r\n\r\n        return () => {\r\n            clearInterval(timer)\r\n\r\n            triggerEvent({\r\n                type: \"VOIDFORM_END\",\r\n                payload: {\r\n                    time: Date.now(),\r\n                    startingHaste: hasteStart\r\n                }\r\n            })\r\n        }\r\n    }, [active])\r\n\r\n    return <Aura icon={icon} displayName={displayName} stacks={stacks} />\r\n}\r\n\r\nexport default Voidform","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Aura from \"./Aura\"\r\n\r\nconst DamageOverTime = (props) => {\r\n\r\n    const {icon, name, displayName, startTime, baseDuration, maxDuration, ticks, resource, haste, hasted, triggerEvent} = props\r\n\r\n    const interval = 100\r\n\r\n    const [duration, setDuration] = useState(0)\r\n\r\n    const startTimeRef = useRef(startTime)\r\n    startTimeRef.current = startTime\r\n\r\n    const maxDurationRef = useRef(maxDuration)\r\n    maxDurationRef.current = maxDuration\r\n\r\n    const hasteRef = useRef(haste)\r\n    hasteRef.current = haste\r\n\r\n    const calculateNextTickTime = (now) => {\r\n        //console.log(\"Haste: \" + hasteRef.current)\r\n        return (baseDuration/ticks)/(hasted && hasteRef.current || 1) + now\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let start = Date.now()\r\n        let tickTime = calculateNextTickTime(start)\r\n\r\n        triggerEvent({\r\n            type: \"AURA_BEGIN\",\r\n            payload: {\r\n                name,\r\n                duration: baseDuration,\r\n                time: start\r\n            }\r\n        })\r\n\r\n        const timer = setInterval(() => {\r\n\r\n            const now = Date.now()\r\n\r\n            if(now >= startTimeRef.current + maxDurationRef.current) {\r\n                clearInterval(timer)\r\n                triggerEvent({\r\n                    type: \"RESOURCE_UPDATE\",\r\n                    payload: {\r\n                        resource\r\n                    }\r\n                })\r\n                triggerEvent({\r\n                    type: \"AURA_END\",\r\n                    payload: {\r\n                        name\r\n                    }\r\n                })\r\n                return\r\n            }\r\n\r\n            if(now >= tickTime) {\r\n                //console.log(\"Tick!\")\r\n                triggerEvent({\r\n                    type: \"RESOURCE_UPDATE\",\r\n                    payload: {\r\n                        resource\r\n                    }\r\n                })\r\n\r\n                tickTime = calculateNextTickTime(now)\r\n            }\r\n\r\n            setDuration(duration => now - startTimeRef.current)\r\n\r\n        }, interval)\r\n\r\n        return () => clearInterval(timer)\r\n    }, [])\r\n\r\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={maxDurationRef.current}/>\r\n}\r\n\r\nexport default DamageOverTime","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Aura from \"./Aura\"\r\nimport {auraEventHandler} from \"../../utils/eventHandler\"\r\n\r\n//import \r\n\r\nconst Buff = (props) => {\r\n\r\n    const {icon, name, displayName, startTime, setting, triggerEvent} = props\r\n    const {baseDuration} = setting\r\n\r\n    const interval = 100\r\n\r\n    const [duration, setDuration] = useState(0)\r\n\r\n    const startTimeRef = useRef(startTime)\r\n    startTimeRef.current = startTime\r\n\r\n    useEffect(() => {\r\n        const eventHandler = auraEventHandler(name, triggerEvent)\r\n        const start = Date.now()\r\n\r\n        eventHandler.handleEvent(\"AURA_START\", {\r\n            name,\r\n            source: name,\r\n            duration: baseDuration,\r\n            time: start,\r\n            ...setting\r\n        })\r\n\r\n        const timer = setInterval(() => {\r\n\r\n            const now = Date.now()\r\n\r\n            if(now >= startTimeRef.current + baseDuration) {\r\n                clearInterval(timer)\r\n\r\n                eventHandler.handleEvent(\"AURA_END\", {\r\n                    name,\r\n                    source: name\r\n                })\r\n\r\n                return\r\n            }\r\n\r\n            setDuration(duration => now - startTimeRef.current)\r\n\r\n        }, interval)\r\n\r\n        return () => clearInterval(timer)\r\n    }, [])\r\n\r\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={baseDuration}/>\r\n}\r\n\r\nexport default Buff","const whatIs = {\r\n    cooldown: \"The amount of time, in seconds, it takes for an ability to be able to be recast.\",\r\n    charges: \"The number of times an ability may be cast while it is on cooldown.\",\r\n    abilityHasted: \"An ability that is hasted has its cooldown reduced by haste.\",\r\n    auraHasted: \"An aura that is hasted has its period reduced by haste.\",\r\n    resourceCast: \"The amount of resource an ability will generate upon a successful cast.\",\r\n    resourceChannel: \"The amount of resource an ability will generate over its complete channel period.\",\r\n    resourceAura: \"The amount of resource an aura will generate every time its effect triggers.\",\r\n    resourceGeneration: \"Increases the amount of resource generated from abilities while an aura is active.\",\r\n    cost: \"The amount of resource required to cast an ability. Casting the ability will spend the resource cost.\",\r\n    castTime: \"The amount of time, in seconds, it takes for an ability to be executed.\",\r\n    channelTime: \"The amount of time, in seconds, it takes for an ability's channel to complete.\",\r\n    ticks: \"The number of times a channel generates resources over its duration.\",\r\n    mindSearTargetCount: \"The number of targets Mind Sear will hit. Mind Sear generates more resource per additional target.\",\r\n    voidBoltRankTwo: \"An extra rank coming to Void Bolt in Shadowlands. It allows Void Bolt to be cast during Mind Flay, without canceling it.\",\r\n    voidBoltExtension: \"The amount of time, in seconds, that Shadow Word: Pain and Vampiric Touch are extended when Void Bolt is cast.\",\r\n    voidformThreshold: \"The amount of Insanity that is required to cast Void Eruption out of Voidform.\",\r\n    voidformCooldownReduction: \"The amount of time, in seconds, that Mind Blast's cooldown is reduced while in Voidform.\",\r\n    requireVoidform: \"Must be in Voidform in order to cast the ability.\",\r\n    haste: \"Increases the rate at which spells cast and the global cooldown, and certain spell cooldowns, regenerate.\",\r\n    voidformStartingDrain: \"The starting amount of Insanity being drained every second while in Voidform.\",\r\n    voidformDrainRate: \"The amount of increasing Insanity drained every second while in Voidform.\",\r\n    voidformStartingHaste: \"The amount of haste, in percent, that is granted at the start of Voidform.\",\r\n    voidformHasteStack: \"The amount of haste, in percent, that every stack of Voidform grants.\",\r\n    voidformMaximumStacks: \"The maximum number of Voidform stacks. Note that reaching the maximum does not stop drain from increasing.\",\r\n    voidformGainInsanity: \"While in Voidform, if enabled spells will generate insanity, otherwise they won't.\",\r\n    lingeringInsanityType: \"Lingering Insanity has two types.\\nStatic - The length of the aura and haste from stacks are constant.\\nDecay - Haste stacks are lost over the aura's duration at a certain rate.\",\r\n    lingeringInsanityDuration: \"An option for type 'Static'. This is the amount of time, in seconds, that the aura will last.\",\r\n    lingeringInsanityAfterVoidformEntry: \"An option for type 'Static'. If enabled, then the duration for Lingering Insanity will only start after entering Voidform.\",\r\n    lingeringInsanityHasteRetention: \"An option for type 'Static. The amount of haste, in percent, that is retained from the final stacks of the previous Voidform.\",\r\n    lingeringInsanityDecayRate: \"An option for type 'Decay'. The amount of time, in seconds it takes for one stack of the aura to be lost.\",\r\n    lingeringInsanityHasteDecay: \"An option for type 'Decay'. The amount of haste, in percent, that is removed every time the aura loses a stack.\",\r\n    auraDuration: \"The amount of time, in seconds, that an aura's effect will last.\",\r\n    auraTicks: \"The number of times an aura will trigger its effect over its duration.\",\r\n    auraHaste: \"The amount of haste, in percent, that is granted while an aura is active\"\r\n}\r\n\r\nconst commonOptions = {\r\n    cooldown: {\r\n        key: \"cooldown\",\r\n        displayName: \"Cooldown\",\r\n        type: \"time\",\r\n        whatIs: whatIs.cooldown,\r\n        unit: \"sec\"\r\n    },\r\n    charges: {\r\n        key: \"charges\",\r\n        displayName: \"Charges\",\r\n        type: \"number\",\r\n        whatIs: whatIs.charges\r\n    },\r\n    hasted: {\r\n        key: \"hasted\",\r\n        displayName: \"Hasted\",\r\n        type: \"boolean\",\r\n        whatIs: whatIs.abilityHasted\r\n    },\r\n    resourceCast: {\r\n        key: \"resource\",\r\n        displayName: \"Resource\",\r\n        type: \"number\",\r\n        whatIs: whatIs.resourceCast,\r\n        unit: \"insanity\"\r\n    },\r\n    resourceChannel: {\r\n        key: \"resource\",\r\n        displayName: \"Resource\",\r\n        type: \"number\",\r\n        whatIs: whatIs.resourceChannel,\r\n        unit: \"insanity\"\r\n    },\r\n    cost: {\r\n        key: \"resource\",\r\n        displayName: \"Cost\",\r\n        type: \"number\",\r\n        whatIs: whatIs.cost,\r\n        unit: \"insanity\"\r\n    },\r\n    castTime: {\r\n        key: \"casttime\",\r\n        displayName: \"Cast Time\",\r\n        type: \"time\",\r\n        whatIs: whatIs.castTime,\r\n        unit: \"sec\"\r\n    },\r\n    channelTime: {\r\n        key: \"casttime\",\r\n        displayName: \"Channel Time\",\r\n        type: \"time\",\r\n        whatIs: whatIs.channelTime,\r\n        unit: \"sec\"\r\n    },\r\n    ticks: {\r\n        key: \"ticks\",\r\n        displayName: \"Ticks\",\r\n        type: \"number\",\r\n        whatIs: whatIs.ticks\r\n    },\r\n    auraDuration: {\r\n        key: \"baseDuration\",\r\n        displayName: \"Duration\",\r\n        type: \"time\",\r\n        whatIs: whatIs.auraDuration\r\n    },\r\n    auraTicks: {\r\n        key: \"ticks\",\r\n        displayName: \"Ticks\",\r\n        type: \"number\",\r\n        whatIs: whatIs.auraTicks\r\n    },\r\n    auraResource: {\r\n        key: \"resource\",\r\n        displayName: \"Resource\",\r\n        type: \"number\",\r\n        whatIs: whatIs.resourceAura\r\n    }\r\n}\r\n\r\n\r\nexport const abilityOptions = {\r\n    \"void-bolt\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.hasted,\r\n        commonOptions.charges,\r\n        commonOptions.resourceCast,\r\n        // {\r\n        //     key: \"rankTwo\",\r\n        //     displayName: \"Rank 2\",\r\n        //     type: \"boolean\",\r\n        //     whatIs: whatIs.voidBoltRankTwo\r\n        // },\r\n        {\r\n            key: \"extension\",\r\n            displayName: \"DoT Extension\",\r\n            type: \"time\",\r\n            whatIs: whatIs.voidBoltExtension\r\n        }\r\n    ],\r\n    \"void-eruption\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.castTime,\r\n        {\r\n            key: \"resource\",\r\n            displayName: \"Insanity Threshold\",\r\n            type: \"number\",\r\n            whatIs: whatIs.voidformThreshold\r\n        }\r\n    ],\r\n    \"mind-flay\": [\r\n        commonOptions.channelTime,\r\n        commonOptions.resourceChannel,\r\n        commonOptions.ticks\r\n    ],\r\n    \"mind-sear\": [\r\n        commonOptions.channelTime,\r\n        commonOptions.resourceChannel,\r\n        commonOptions.ticks,\r\n        {\r\n            key: \"targetCount\",\r\n            displayName: \"Target Count\",\r\n            type: \"number\",\r\n            whatIs: whatIs.mindSearTargetCount\r\n        }\r\n    ],\r\n    \"mind-blast\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.charges,\r\n        commonOptions.castTime,\r\n        commonOptions.hasted,\r\n        commonOptions.resourceCast,\r\n        {\r\n            key: \"cdr\",\r\n            displayName: \"Voidform Cooldown Reduction\",\r\n            type: \"time\",\r\n            whatIs: whatIs.voidformCooldownReduction\r\n        }\r\n    ],\r\n    \"shadow-word-death\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.charges,\r\n        commonOptions.hasted,\r\n        commonOptions.resourceCast\r\n    ],\r\n    \"void-torrent\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.channelTime,\r\n        commonOptions.resourceChannel,\r\n        commonOptions.ticks,\r\n        {\r\n            key: \"requireVoidform\",\r\n            displayName: \"Require Voidform\",\r\n            type: \"boolean\",\r\n            whatIs: whatIs.requireVoidform\r\n        }\r\n    ],\r\n    \"shadow-word-pain\": [\r\n        commonOptions.resourceCast\r\n    ],\r\n    \"vampiric-touch\": [\r\n        commonOptions.castTime,\r\n        commonOptions.resourceCast\r\n    ],\r\n    \"devouring-plague\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.cost\r\n    ],\r\n    \"shadowfiend\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.resourceCast\r\n    ],\r\n    \"power-infusion\": [\r\n        commonOptions.cooldown\r\n    ]\r\n}\r\n\r\nexport const auraOptions = {\r\n    \"stats\": [\r\n        {\r\n            key: \"haste\",\r\n            displayName: \"Haste\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.haste\r\n        }\r\n    ],\r\n    \"voidform\": [\r\n        {\r\n            key: \"drainStart\",\r\n            displayName: \"Starting Insanity Drain\",\r\n            type: \"float\",\r\n            unit: \"/sec\",\r\n            whatIs: whatIs.voidformStartingDrain,\r\n        },\r\n        {\r\n            key: \"drainRate\",\r\n            displayName: \"Insanity Drain Rate\",\r\n            type: \"float\",\r\n            unit: \"/sec\",\r\n            whatIs: whatIs.voidformDrainRate\r\n        },\r\n        {\r\n            key: \"hasteStart\",\r\n            displayName: \"Voidform Starting Haste\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.voidformStartingHaste\r\n        },\r\n        {\r\n            key: \"hasteStack\",\r\n            displayName: \"Voidform Haste Per Stack\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.voidformHasteStack\r\n        },\r\n        {\r\n            key: \"maxStacks\",\r\n            displayName: \"Maximum Voidform Stacks\",\r\n            type: \"number\",\r\n            whatIs: whatIs.voidformMaximumStacks\r\n        },\r\n        {\r\n            key: \"gainInsanity\",\r\n            displayName: \"Gain Insanity\",\r\n            type: \"boolean\",\r\n            whatIs: whatIs.voidformGainInsanity\r\n        }\r\n    ],\r\n    \"lingeringInsanity\": [\r\n        {\r\n            key: \"type\",\r\n            displayName: \"Aura Type\",\r\n            type: \"select\",\r\n            options: [{\r\n                value: \"static\",\r\n                displayName: \"Static\"\r\n            },{\r\n                value: \"decay\",\r\n                displayName: \"Decay\"\r\n            }],\r\n            whatIs: whatIs.lingeringInsanityType\r\n        },\r\n        {\r\n            key: \"duration\",\r\n            displayName: \"Aura Duration\",\r\n            type: \"time\",\r\n            whatIs: whatIs.lingeringInsanityDuration\r\n        },\r\n        {\r\n            key: \"afterVoidformEntry\",\r\n            displayName: \"After Voidform Entry\",\r\n            type: \"boolean\",\r\n            whatIs: whatIs.lingeringInsanityAfterVoidformEntry\r\n        },\r\n        {\r\n            key: \"hasteRetention\",\r\n            displayName: \"Haste Retained\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.lingeringInsanityHasteRetention\r\n        },\r\n        {\r\n            key: \"decayRate\",\r\n            displayName: \"Stack Decay Rate\",\r\n            type: \"time\",\r\n            whatIs: whatIs.lingeringInsanityDecayRate\r\n        },\r\n        {\r\n            key: \"hasteDecay\",\r\n            displayName: \"Haste Decay Amount\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.lingeringInsanityHasteDecay\r\n        }\r\n    ],\r\n    \"shadow-word-pain\": [\r\n        commonOptions.auraDuration,\r\n        commonOptions.auraTicks,\r\n        commonOptions.auraResource\r\n    ],\r\n    \"vampiric-touch\": [\r\n        commonOptions.auraDuration,\r\n        commonOptions.auraTicks,\r\n        commonOptions.auraResource\r\n    ],\r\n    \"devouring-plague\": [\r\n        commonOptions.auraDuration,\r\n        commonOptions.auraTicks,\r\n        commonOptions.auraResource,\r\n        {\r\n            key: \"hasted\",\r\n            displayName: \"Hasted\",\r\n            type: \"boolean\",\r\n            whatIs: whatIs.auraHasted\r\n        }\r\n    ],\r\n    \"shadowfiend\": [\r\n        commonOptions.auraResource\r\n    ],\r\n    \"power-infusion\": [\r\n        commonOptions.auraDuration,\r\n        {\r\n            key: \"haste\",\r\n            displayName: \"Haste\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.auraHaste\r\n        },\r\n        {\r\n            key: \"resourceGen\",\r\n            displayName: \"Resource Generation\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.resourceGeneration\r\n        }\r\n    ]\r\n}","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport LingeringInsanity from \"./LingeringInsanity\"\r\nimport Voidform from \"./Voidform\"\r\nimport DamageOverTime from './DamageOverTime';\r\nimport Buff from \"./Buff\"\r\nimport { auraOptions } from '../../lib/options';\r\n\r\nconst dots = [\r\n  {\r\n    name: \"shadow-word-pain\",\r\n    icon: \"images/shadow-word-pain.jpg\",\r\n    displayName: \"Shadow Word: Pain\"\r\n  },\r\n  {\r\n    name: \"vampiric-touch\",\r\n    icon: \"images/vampiric-touch.jpg\",\r\n    displayName: \"Vampiric Touch\"\r\n  },\r\n  {\r\n    name: \"devouring-plague\",\r\n    icon: \"images/devouring-plague.jpg\",\r\n    displayName: \"Devouring Plague\"\r\n  },\r\n  {\r\n    name: \"shadowfiend\",\r\n    icon: \"images/shadowfiend.jpg\",\r\n    displayName: \"Shadowfiend\"\r\n  }\r\n]\r\n\r\nconst buffs = [\r\n  {\r\n    name: \"power-infusion\",\r\n    icon: \"images/power-infusion.jpg\",\r\n    displayName: \"Power Infusion\"\r\n  },\r\n  {\r\n    name: \"bloodlust\",\r\n    icon: \"images/bloodlust.jpg\",\r\n    displayName: \"Bloodlust\"\r\n  }\r\n]\r\n\r\nconst AuraBar = (props) => {\r\n\r\n    const {auras, triggerEvent, settings, haste} = props\r\n    const {lingeringInsanity, voidform} = settings \r\n\r\n    const [state, triggerAuraEvent] = useReducer((state, action) => {\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"aura-container\">\r\n          {auras.voidform.active \r\n          ? <Voidform \r\n            {...voidform}\r\n            {...auras.voidform}\r\n            triggerEvent={triggerEvent}/> \r\n          : null}\r\n          {auras.lingeringInsanity.active\r\n          ? <LingeringInsanity \r\n            {...lingeringInsanity}\r\n            {...auras.lingeringInsanity} \r\n            inVoidform={auras.voidform.active} \r\n            triggerEvent={triggerEvent}/>\r\n          : null}\r\n          {dots.map(dot => \r\n            auras[dot.name].active\r\n            ? <DamageOverTime\r\n                {...dot}\r\n                {...auras[dot.name]}\r\n                {...settings[dot.name]}\r\n                haste={haste}\r\n                triggerEvent={triggerEvent} \r\n              />\r\n            : null\r\n          )}\r\n          {buffs.map(buff => \r\n            auras[buff.name].active\r\n            ? <Buff\r\n                {...buff}\r\n                {...auras[buff.name]}\r\n                setting={settings[buff.name]}\r\n                triggerEvent={triggerEvent} \r\n              />\r\n            : null\r\n          )}\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default AuraBar\r\n\r\n\r\n","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport {useCleanup} from \"../../utils/hooks\"\r\n\r\nimport \"./Panel.css\"\r\n\r\nconst Panel = (props) => {\r\n\r\n    const {panel, currentPanel, reset, onClick, handleClose, header, panelClass, style} = props\r\n\r\n    useCleanup(panel, currentPanel, reset)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel-header hover-pointer\" onClick={() => onClick(panel)}>{header}</div>\r\n            <div className={`panel ${panelClass}`} style={style}>\r\n                <button className=\"panel-button panel-exit-button\" onClick={handleClose}>x</button>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel","import {useEffect, useRef} from \"react\"\r\n\r\nexport const useCleanup = (target, value, cleanup) => {\r\n    const ref = useRef()\r\n\r\n    useEffect(() => {\r\n        if(ref.current === target) {\r\n            cleanup()\r\n        }       \r\n        ref.current = value\r\n    }, [value])\r\n}","const defaultAbilitySettings = {\r\n    \"mind-flay\": {\r\n        cooldown: 0,\r\n        resource: 12,\r\n        hasted: true,\r\n        casttime: 3000,\r\n        ticks: 4,\r\n        type: \"channel\",\r\n    },\r\n    \"mind-sear\": {\r\n        cooldown: 0,\r\n        resource: 5,\r\n        hasted: true,\r\n        casttime: 3000,\r\n        ticks: 4,\r\n        targetCount: 1,\r\n        type: \"channel\",\r\n    },\r\n    \"void-bolt\": {\r\n        cooldown: 4500,\r\n        resource: 20,\r\n        hasted: true,\r\n        rankTwo: false,\r\n        type: \"instant\",\r\n        charges: 1,\r\n        extension: 3000\r\n    },\r\n    \"void-eruption\": {\r\n        cooldown: 0,\r\n        type: \"cast\",\r\n        casttime: 2000,\r\n        resource: 90,\r\n        costsResource: true\r\n    },\r\n    \"mind-blast\": {\r\n        cooldown: 7500,\r\n        resource: 12,\r\n        hasted: true,\r\n        type: \"cast\",\r\n        casttime: 1500,\r\n        charges: 1,\r\n        cdr: 1500\r\n    },\r\n    \"shadow-word-death\": {\r\n        cooldown: 9000,\r\n        resource: 15,\r\n        hasted: false,\r\n        type: \"instant\",\r\n        charges: 1,\r\n    },\r\n    \"void-torrent\": {\r\n        cooldown: 45000,\r\n        resource: 30,\r\n        type: \"channel\",\r\n        casttime: 4000,\r\n        staticCastTime: true,\r\n        ticks: 10,\r\n        requireVoidform: false\r\n    },\r\n    \"shadow-word-pain\": {\r\n        cooldown: 0,\r\n        resource: 4,\r\n        type: \"instant\"\r\n    },\r\n    \"vampiric-touch\": {\r\n        cooldown: 0,\r\n        resource: 6,\r\n        type: \"cast\",\r\n        casttime: 1500\r\n    },\r\n    \"devouring-plague\": {\r\n        cooldown: 0,\r\n        resource: 50,\r\n        costsResource: true,\r\n        type: \"instant\"\r\n    },\r\n    \"shadowfiend\": {\r\n        cooldown: 180000,\r\n        resource: 3,\r\n        type: \"instant\"\r\n    },\r\n    \"power-infusion\": {\r\n        cooldown: 120000,\r\n        type: \"instant\"\r\n    },\r\n    \"bloodlust\": {\r\n        cooldown: 300000,\r\n        ignoreGcd: true,\r\n        type: \"instant\"\r\n    }\r\n}\r\n\r\nexport default defaultAbilitySettings","const defaultAuraSettings = {\r\n    stats: {\r\n        displayName: \"Stats\",\r\n        haste: 0\r\n    },\r\n    voidform: {\r\n        displayName: \"Voidform\",\r\n        drainStart: 6,\r\n        drainRate: .68,\r\n        hasteStart: 0,\r\n        hasteStack: .005,\r\n        maxStacks: 0,\r\n        gainInsanity: true\r\n    },\r\n    lingeringInsanity: {\r\n        displayName: \"Lingering Insanity\",\r\n        type: \"decay\",\r\n        duration: 60000,\r\n        afterVoidformEntry: false,\r\n        hasteRetention: 1,\r\n        decayRate: 3000,\r\n        hasteDecay: .01\r\n    },\r\n    \"shadow-word-pain\": {\r\n        displayName: \"Shadow Word: Pain\",\r\n        baseDuration: 16000,\r\n        ticks: 8,\r\n        resource: 0,\r\n        hasted: true\r\n    },\r\n    \"vampiric-touch\": {\r\n        displayName: \"Vampiric Touch\",\r\n        baseDuration: 21000,\r\n        ticks: 7,\r\n        resource: 0,\r\n        hasted: true\r\n    },\r\n    \"devouring-plague\": {\r\n        displayName: \"Devouring Plague\",\r\n        baseDuration: 12000,\r\n        ticks: 4,\r\n        resource: 0,\r\n        hasted: true\r\n    },\r\n    \"shadowfiend\": {\r\n        displayName: \"Shadowfiend\",\r\n        baseDuration: 15000,\r\n        ticks: 10,\r\n        resource: 3\r\n    },\r\n    \"power-infusion\": {\r\n        displayName: \"Power Infusion\",\r\n        baseDuration: 20000,\r\n        haste: .25,\r\n        resourceGen: 0\r\n    },\r\n    \"bloodlust\": {\r\n        displayName: \"Bloodlust\",\r\n        baseDuration: 40000,\r\n        haste: .3\r\n    }\r\n}\r\n\r\nexport default defaultAuraSettings","import {Base64} from \"js-base64\"\r\nimport abilitySettings from \"../lib/abilitySettings\"\r\nimport auraSettings from \"../lib/auraSettings\"\r\n\r\nconst parseAbility = (ability, key) => {\r\n    let abilitySetting = abilitySettings[key]\r\n    let result = Object.keys(abilitySetting).reduce((obj, k) => {\r\n        let userSetting = ability[k]\r\n        //might want to look at options\r\n        let setting = abilitySetting[k]\r\n\r\n        if(userSetting === null || userSetting === undefined) throw new Error(\"Missing ability setting in input \" + k)\r\n\r\n        if(typeof userSetting !== typeof setting) throw new Error(\"Ability setting has invalid format\")\r\n        \r\n        obj[k] = userSetting\r\n\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst parseAbilitySettings = (abilities) => {\r\n    let result = {}\r\n\r\n    Object.keys(abilitySettings).forEach(a => {\r\n        let ability = abilities[a]\r\n\r\n        if(!ability) throw new Error(\"Missing ability in input\")\r\n\r\n        result[a] = parseAbility(ability, a)\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nconst parseAura = (aura, key) => {\r\n    let auraSetting = auraSettings[key]\r\n\r\n    let result = Object.keys(auraSetting).reduce((obj, k) => {\r\n        let userSetting = aura[k]\r\n        let setting = auraSetting[k]\r\n\r\n        if(userSetting === null || auraSetting === undefined) throw new Error(\"Missing aura setting in input \" + k)\r\n        if(typeof userSetting !== typeof setting) throw new Error(`Aura setting has invalid format`)\r\n\r\n        obj[k] = userSetting\r\n\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst parseAuraSettings = (auras) => {\r\n    let result = {}\r\n    Object.keys(auraSettings).forEach(a => {\r\n        let aura = auras[a]\r\n\r\n        if(!aura) throw new Error(\"Missing aura in input\")\r\n\r\n        result[a] = parseAura(aura, a)\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nexport const importSettings = (settings, includeKeybinds, includeSpellOrder) => {\r\n\r\n    try {\r\n        let parsedSettings = JSON.parse(Base64.decode(settings))\r\n\r\n        let parsedAbilitySettings = parseAbilitySettings(parsedSettings.abilitySettings)\r\n        let parsedAuraSettings = parseAuraSettings(parsedSettings.auraSettings)\r\n        let abilityConfig = formatAbilityConfig(parsedSettings.abilityConfig, includeKeybinds, includeSpellOrder)\r\n\r\n        return {\r\n            abilitySettings: parsedAbilitySettings, \r\n            auraSettings: parsedAuraSettings,\r\n            abilityConfig\r\n        }\r\n    }\r\n\r\n    catch(e) {\r\n        throw new Error(\"An error occurred while parsing input data.\\nReason: \" + e.message)\r\n    }\r\n}\r\n\r\nconst formatSingleAbilitySetting = (setting) => {\r\n    let result = Object.keys(setting).reduce((obj, k) => {\r\n        obj[k] = setting[k]\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst formatAbilitySettingsForExport = (settings) => {\r\n    let result = Object.keys(settings).reduce((obj, k) => {\r\n        let ability = settings[k]\r\n        let formattedAbility = formatSingleAbilitySetting(ability)\r\n        obj[k] = formattedAbility\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst formatAbilityConfig = (settings, includeKeybinds, includeSpellOrder) => {\r\n    let result = Object.keys(settings).reduce((result, k) => {\r\n        let {keybind, disabled, index} = settings[k]\r\n\r\n        result[k] = {disabled: !!disabled}\r\n        if(includeKeybinds && keybind) result[k].keybind = keybind\r\n        if(includeSpellOrder && index) result[k].index = index\r\n        \r\n        return result\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nexport const exportSettings = (currentSettings) => {\r\n    let formattedAbilitySettings = formatAbilitySettingsForExport(currentSettings.abilitySettings)\r\n    let formattedAbilityConfig = formatAbilityConfig(currentSettings.abilities, true, true)\r\n\r\n    let combined =  {\r\n        abilitySettings: formattedAbilitySettings,\r\n        auraSettings: currentSettings.auraSettings,\r\n        abilityConfig: formattedAbilityConfig\r\n    }\r\n\r\n    let result = Base64.encode(JSON.stringify(combined))\r\n\r\n    return result\r\n}","import live from \"./live\"\r\nimport alpha from \"./alpha\"\r\nimport legionENVoidlord from \"./legionENVoidlord\"\r\nimport legionAntorus from \"./legionAntorus\"\r\nimport ryeshot from \"./ryeshot\"\r\nimport yvaelle from \"./yvaelle\"\r\n\r\nexport default {\r\n    live,\r\n    alpha,\r\n    legionENVoidlord,\r\n    legionAntorus,\r\n    ryeshot,\r\n    yvaelle\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Live\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-eruption\": {\r\n            ...defaultAbilitySettings[\"void-eruption\"],\r\n            casttime: 1500,\r\n            resource: 60,\r\n        },\r\n        \"mind-blast\": {\r\n            ...defaultAbilitySettings[\"mind-blast\"],\r\n            cooldown: 9000,\r\n            resource: 15,\r\n            charges: 2\r\n        },\r\n        \"shadow-word-death\": {\r\n            ...defaultAbilitySettings[\"shadow-word-death\"],\r\n            charges: 2\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": {},\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": { disabled: true },\r\n        \"void-torrent\": { disabled: true },\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": { disabled: true },\r\n        \"shadowfiend\": {}\r\n    }\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Shadowlands Alpha\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"mind-blast\": {\r\n            ...defaultAbilitySettings[\"mind-blast\"],\r\n            cooldown: 8000\r\n        },\r\n        \"shadow-word-death\": {\r\n            ...defaultAbilitySettings[\"shadow-word-death\"],\r\n            cooldown: 20000,\r\n            resource: 0,\r\n            hasted: true,\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": {},\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": {},\r\n        \"void-torrent\": { disabled: true },\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": {},\r\n        \"shadowfiend\": {}\r\n    }\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Legion: EN + Void Lord\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-eruption\": {\r\n            cooldown: 0,\r\n            type: \"cast\",\r\n            casttime: 2500,\r\n            resource: 90,\r\n            costsResource: true\r\n        },\r\n        \"void-torrent\": {\r\n            cooldown: 60000,\r\n            resource: 0,\r\n            type: \"channel\",\r\n            casttime: 4000,\r\n            staticCastTime: true,\r\n            ticks: 10,\r\n            requireVoidform: true\r\n        },\r\n        \"shadowfiend\": {\r\n            cooldown: 180000,\r\n            resource: 0,\r\n            type: \"instant\"\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings,\r\n        voidform: {\r\n            displayName: \"Voidform\",\r\n            drainStart: 6,\r\n            drainRate: .66,\r\n            hasteStart: 0,\r\n            hasteStack: .01,\r\n            maxStacks: 0\r\n        },\r\n        lingeringInsanity: {\r\n            displayName: \"Lingering Insanity\",\r\n            type: \"static\",\r\n            duration: 8000,\r\n            afterVoidformEntry: true,\r\n            hasteRetention: 1,\r\n            decayRate: 1000,\r\n            hasteDecay: .01\r\n        },\r\n        \"shadowfiend\": {\r\n            displayName: \"Shadowfiend\",\r\n            baseDuration: 15000,\r\n            ticks: 10,\r\n            resource: 0\r\n        }\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": {},\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": {},\r\n        \"void-torrent\": {},\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": { disabled: true }\r\n    }\r\n\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Legion: Antorus\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-eruption\": {\r\n            cooldown: 0,\r\n            type: \"cast\",\r\n            casttime: 1500,\r\n            resource: 65,\r\n            costsResource: true\r\n        },\r\n        \"mind-blast\": {\r\n            cooldown: 7500,\r\n            resource: 12,\r\n            hasted: true,\r\n            type: \"cast\",\r\n            casttime: 1500,\r\n            charges: 2,\r\n            cdr: 1500\r\n        },\r\n        \"void-torrent\": {\r\n            cooldown: 60000,\r\n            resource: 0,\r\n            type: \"channel\",\r\n            casttime: 4000,\r\n            staticCastTime: true,\r\n            ticks: 10,\r\n            requireVoidform: true\r\n        },\r\n        \"shadowfiend\": {\r\n            cooldown: 60000,\r\n            resource: 6,\r\n            type: \"instant\"\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings,\r\n        stats: {\r\n            displayName: \"Stats\",\r\n            haste: .4\r\n        },\r\n        voidform: {\r\n            displayName: \"Voidform\",\r\n            drainStart: 6,\r\n            drainRate: .66,\r\n            hasteStart: 0,\r\n            hasteStack: .01,\r\n            maxStacks: 0\r\n        },\r\n        lingeringInsanity: {\r\n            displayName: \"Lingering Insanity\",\r\n            type: \"decay\",\r\n            duration: 60000,\r\n            afterVoidformEntry: false,\r\n            hasteRetention: 1,\r\n            decayRate: 1000,\r\n            hasteDecay: .01\r\n        },\r\n        \"shadowfiend\": {\r\n            displayName: \"Shadowfiend\",\r\n            baseDuration: 24000,\r\n            ticks: 16,\r\n            resource: 6\r\n        }\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": { disabled: true },\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": {},\r\n        \"void-torrent\": {},\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": { disabled: true },\r\n        \"power-infusion\": { disabled: true }\r\n    }\r\n\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Ryeshot's Shadowlands\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-bolt\": {\r\n            ...defaultAbilitySettings[\"void-bolt\"],\r\n            resource: 15\r\n        },\r\n        \"mind-blast\": {\r\n            ...defaultAbilitySettings[\"mind-blast\"],\r\n            cooldown: 7500,\r\n            resource: 25,\r\n            charges: 2,\r\n            cdr: 0\r\n        },\r\n        \"shadow-word-death\": {\r\n            ...defaultAbilitySettings[\"shadow-word-death\"],\r\n            cooldown: 20000,\r\n            resource: 0,\r\n            hasted: true\r\n        },\r\n        \"devouring-plague\": {\r\n            ...defaultAbilitySettings[\"devouring-plague\"],\r\n            resource: 30\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings,\r\n        stats: {\r\n            ...defaultAuraSettings.stats,\r\n            haste: .15\r\n        },\r\n        voidform: {\r\n            ...defaultAuraSettings.voidform,\r\n            drainRate: .66,\r\n            hasteStart: .2,\r\n            hasteStack: .01\r\n        },\r\n        lingeringInsanity: {\r\n            ...defaultAuraSettings.lingeringInsanity,\r\n            type: \"static\",\r\n            duration: 0\r\n        },\r\n        \"devouring-plague\": {\r\n            ...defaultAuraSettings[\"devouring-plague\"],\r\n            ticks: 12,\r\n            resource: 3,\r\n            hasted: false\r\n        }\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": { disabled: true },\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": { disabled: true },\r\n        \"void-torrent\": { disabled: true },\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": {},\r\n        \"shadowfiend\": { disabled: true },\r\n        \"power-infusion\": { disabled: true }\r\n    }\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Yvaelle's Shadowlands\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-eruption\": {\r\n            ...defaultAbilitySettings[\"void-eruption\"],\r\n            resource: 0\r\n        },\r\n        \"mind-blast\": {\r\n            ...defaultAbilitySettings[\"mind-blast\"],\r\n            cooldown: 7500,\r\n            resource: 15,\r\n            charges: 2\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings,\r\n        stats: {\r\n            ...defaultAuraSettings.stats,\r\n            haste: .35\r\n        },\r\n        voidform: {\r\n            ...defaultAuraSettings.voidform,\r\n            drainStart: 5,\r\n            drainRate: 0,\r\n            hasteStart: .15,\r\n            hasteStack: 0,\r\n            gainInsanity: false\r\n        },\r\n        lingeringInsanity: {\r\n            ...defaultAuraSettings.lingeringInsanity,\r\n            type: \"static\",\r\n            duration: 0\r\n        }\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": { disabled: true },\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": { disabled: true },\r\n        \"void-torrent\": { disabled: true },\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": { disabled: true },\r\n        \"shadowfiend\": { disabled: true },\r\n        \"power-infusion\": { disabled: true }\r\n    }\r\n}","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\nimport { exportSettings, importSettings } from \"../../utils/importExport\"\r\nimport templates from \"../../lib/templates\"\r\nimport \"./Panel.css\"\r\n\r\nconst Templates = (props) => {\r\n\r\n    const {onChange, selected} = props\r\n\r\n    return (\r\n        <div style={{width: \"60%\"}}>\r\n            <select className=\"panel-dropdown\" value={selected} onChange={onChange}>\r\n                <option value={\"default\"} disabled>Choose a template...</option>\r\n                {Object.keys(templates).map(t => <option key={t} value={t}>{templates[t].displayName}</option>)}\r\n                <option key={\"custom\"} value={\"custom\"}>Custom</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ExportPanel = (props) => {\r\n\r\n    const {settings, onImport, currentPanel, onClick, closePanel} = props\r\n\r\n    const panel = \"export\"\r\n    const header = \"Import/Export Settings\"\r\n    const panelClass = \"left-panel\"\r\n    const placeholderText = \"Import settings here...\"\r\n    const exportTextAreaId = \"export-content\"\r\n    const defaultSelected = \"default\"\r\n    const rows = 20\r\n    const cols = 25\r\n\r\n    const [exportData, setExportData] = useState(\"\")\r\n    const [inputData, setInputData] = useState(\"\")\r\n    const [includeKeybinds, setIncludeKeybinds] = useState(false)\r\n    const [includeSpellOrder, setIncludeSpellOrder] = useState(false)\r\n    const [selectedTemplate, setSelectedTemplate] = useState(defaultSelected)\r\n\r\n    const handleImport = () => {\r\n        try {\r\n            const settings = importSettings(inputData, includeKeybinds, includeSpellOrder)\r\n            onImport(settings)\r\n        } catch (error) {\r\n            console.error(error)\r\n        }\r\n\r\n        setInputData(\"\")\r\n    }\r\n\r\n    const handleExport = () => {\r\n        const data = exportSettings(settings)\r\n\r\n        setExportData(data)\r\n    }\r\n\r\n    const handleTemplateChange = (e) => {\r\n        const key = e.target.value\r\n\r\n        setSelectedTemplate(key)\r\n\r\n        if(key === \"custom\") {\r\n            setInputData(\"\")\r\n            return\r\n        }\r\n\r\n        const {displayName, ...template} = templates[key]\r\n\r\n        const data = exportSettings({...template})\r\n\r\n        setInputData(data)\r\n    }\r\n\r\n    const copyToClipBoard = () => {\r\n        const textArea = document.getElementById(exportTextAreaId)\r\n\r\n        textArea.select()\r\n\r\n        try {\r\n            document.execCommand(\"copy\")\r\n\r\n        }\r\n        catch (err) {\r\n            //set the message\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        let data = e.target.value\r\n\r\n        setInputData(data)\r\n    }\r\n\r\n    const reset = () => {\r\n        setExportData(\"\")\r\n        setInputData(\"\")\r\n        setIncludeKeybinds(false)\r\n        setIncludeSpellOrder(false)\r\n        setSelectedTemplate(defaultSelected)\r\n    }\r\n\r\n    return (\r\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass} style={{transform: `translateX(${currentPanel === panel ? \"0px\": \"-350px\"})`}}>\r\n            <div className=\"vertical-panel-content\">\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Import Settings</div>\r\n                    <Templates selected={selectedTemplate} onChange={handleTemplateChange} />\r\n                    <textarea className=\"panel-text-area\" rows={rows} cols={cols} placeholder={placeholderText} value={inputData} onChange={handleInputChange}></textarea>\r\n                    <div className=\"panel-info-text-container\">\r\n                        <label>Include keybinds</label>\r\n                        <input type=\"checkbox\" onChange={() => setIncludeKeybinds(!includeKeybinds)} checked={includeKeybinds} />\r\n                    </div>\r\n                    <div className=\"panel-info-text-container\">\r\n                        <label>Include spell order</label>\r\n                        <input type=\"checkbox\" onChange={() => setIncludeSpellOrder(!includeSpellOrder)} checked={includeSpellOrder} />\r\n                    </div>\r\n                    <div className=\"panel-button-container\">\r\n                        <button className=\"panel-button panel-input-button\" onClick={handleImport} disabled={!inputData}>Import</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Export Settings</div>\r\n                    <textarea id={exportTextAreaId} className=\"panel-text-area\" rows={rows} cols={cols} value={exportData} readOnly={true}></textarea>\r\n                    <div className=\"panel-button-container\">\r\n                        <button className=\"panel-button panel-input-button\" onClick={handleExport}>Export</button>\r\n                        <button className=\"panel-button panel-input-button\" onClick={copyToClipBoard} disabled={!exportData}>Copy</button>\r\n                    </div>\r\n                </div>      \r\n            </div> \r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default ExportPanel","import React, { useState } from \"react\"\r\n\r\nconst TimeTextOption = (props) => {\r\n    const {value, onChange} = props\r\n\r\n    const [displayValue, setDisplayValue] = useState(value/1000)\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value) return\r\n        onChange(parseFloat(e.target.value)*1000)\r\n        setDisplayValue(e.target.value)\r\n    }\r\n    \r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={displayValue} min=\"0\" step=\".1\" onChange={handleChange} />sec</span>\r\n}\r\n\r\nconst NumberTextOption = (props) => {\r\n    const {value, onChange, unit} = props\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value) return\r\n        onChange(parseInt(e.target.value))\r\n    }\r\n    \r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={value} min=\"0\" onChange={handleChange} /> {unit}</span>\r\n}\r\n\r\nconst FloatTextOption = (props) => {\r\n    const {value, onChange, unit} = props\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value) return\r\n        onChange(parseFloat(e.target.value))\r\n    }\r\n    \r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={value} min=\"0\" step=\".01\" onChange={handleChange} /> {unit}</span>\r\n}\r\n\r\nconst PercentTextOption = (props) => {\r\n    const {value, onChange} = props\r\n\r\n    const [displayValue, setDisplayValue] = useState(value*100)\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value) return\r\n        onChange(parseFloat(e.target.value)/100)\r\n        setDisplayValue(e.target.value)\r\n    }\r\n\r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={displayValue} min=\"0\" step=\".5\" onChange={handleChange} />%</span>\r\n}\r\n\r\nconst BooleanOption = (props) => {\r\n    const {value, onChange} = props\r\n\r\n    const handleChange = (e) => {\r\n        onChange(e.target.checked)\r\n    }\r\n\r\n    return <input type=\"checkbox\" defaultChecked={value} onChange={handleChange} />\r\n}\r\n\r\nconst SelectOption = (props) => {\r\n    const {value, onChange, name, options} = props\r\n\r\n    const handleChange = (e) => {\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    return (\r\n        options.map(o => (\r\n            <div>\r\n                <input type=\"radio\" id={o.value} name={name} value={o.value} defaultChecked={o.value === value} onChange={handleChange} />\r\n                <label htmlFor={o.value}>{o.displayName}</label>\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Option = (type, value, onChange, key, name, rest) => {\r\n    switch(type) {\r\n        case \"time\":\r\n            return <TimeTextOption key={key} value={value} onChange={onChange} />\r\n        case \"number\":\r\n            return <NumberTextOption key={key} value={value} onChange={onChange} {...rest} />\r\n        case \"float\":\r\n            return <FloatTextOption key={key} value={value} onChange={onChange} {...rest} />\r\n        case \"percent\":\r\n            return <PercentTextOption key={key} value={value} onChange={onChange} />\r\n        case \"boolean\":\r\n            return <BooleanOption key={key} value={value} onChange={onChange} />\r\n        case \"select\":\r\n            return <SelectOption key={key} value={value} name={name} onChange={onChange} {...rest} />\r\n        default:\r\n            return null\r\n    }\r\n}","import React from \"react\"\r\nimport Option from \"./optionFactory\"\r\nimport \"./WhatIs.css\"\r\nimport \"./SettingOption.css\"\r\n\r\nconst SettingOption = (props) => {\r\n    const {value, name, type, whatIs, displayName, onChange, onHelp, closeHelp, parentKey, ...rest} = props\r\n\r\n    const handleInputChange = (v) => {\r\n        onChange(name, v)\r\n    }\r\n\r\n    const handleOnHelp = (e) => {\r\n        const pos = {\r\n            x: e.target.offsetLeft,\r\n            y: e.target.offsetTop\r\n        }\r\n        onHelp(displayName, whatIs, pos)\r\n    }\r\n\r\n    return (\r\n        <div className=\"setting-option\">\r\n            <div>\r\n                <i className=\"fa fa-question-circle what-is-icon\" onMouseEnter={handleOnHelp} onMouseLeave={closeHelp}></i>\r\n            </div>\r\n            <div className=\"setting-option-header\">{displayName}</div>\r\n            {Option(type, value, handleInputChange, parentKey + \"-input\", name, rest)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingOption","import React from \"react\"\r\nimport \"./WhatIs.css\"\r\n\r\nconst WhatIs = (props) => {\r\n    const {name, text, xPos, yPos} = props\r\n\r\n    //console.log(xPos, yPos)\r\n    const minimumHeight = 30\r\n\r\n    const style = {\r\n        left: `${xPos}px`,\r\n        top: `${yPos+minimumHeight}px`\r\n    }\r\n    \r\n    return (\r\n        <div className=\"what-is\" style={style}>\r\n            <div className=\"what-is-header\">What is... {name}?</div>\r\n            <div className=\"what-is-description\">{text}</div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatIs","import React, {useState} from \"react\"\r\nimport SettingOption from \"./SettingOption\"\r\nimport WhatIs from \"./WhatIs\"\r\nimport \"./Panel.css\"\r\n\r\nconst CustomizeSection = (props) => {\r\n\r\n    const {name, setting, options, onChange} = props\r\n\r\n    const [showWhatIs, setShowWhatIs] = useState(false)\r\n    const [whatIs, setWhatIs] = useState({})\r\n\r\n    const handleChange = (optionKey, option) => {\r\n        const newSetting = {...setting, [optionKey]: option}\r\n        onChange(newSetting, name)\r\n    }\r\n\r\n    const handleShowWhatIs = (name, text, pos) => {\r\n        setShowWhatIs(true)\r\n        setWhatIs({\r\n            name,\r\n            text,\r\n            xPos: pos.x,\r\n            yPos: pos.y\r\n        })    \r\n    }\r\n\r\n    const closeWhatIs = () => {\r\n        setShowWhatIs(false)\r\n        setWhatIs({})\r\n    }\r\n\r\n    return (\r\n        <div className=\"customize-section\">\r\n            <div className=\"customoze-section-header\">{setting.displayName}</div>\r\n            {options.map(o => {\r\n            return <SettingOption {...o} key={`${name}-${o.key}`} value={setting[o.key]} name={o.key} parentKey={`${name}-${o.key}`} onChange={handleChange} onHelp={handleShowWhatIs} closeHelp={closeWhatIs}/>\r\n            })}\r\n            {showWhatIs ? <WhatIs {...whatIs}/> : null}\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default CustomizeSection","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\nimport CustomizeSection from \"./CustomizeSection\"\r\nimport {abilityOptions, auraOptions} from \"../../lib/options\"\r\nimport \"./Panel.css\"\r\n\r\nconst SettingsPanel = (props) => {\r\n\r\n    const {settings, currentPanel, didReset, onAbilitySet, onAuraSet, onClick, closePanel} = props\r\n\r\n    const {abilities, auras} = settings\r\n\r\n    const panel = \"settings\"\r\n    const header= \"Custom Settings\"\r\n    const panelClass = \"right-panel\"\r\n\r\n    const abilityButtonText = \"Update Abilities\"\r\n    const auraButtonText = \"Update Auras\"\r\n\r\n    const changesPendingText =\r\n`Changes pending...\r\nClick the button below to apply your changes`\r\n\r\n    const [currentAbilities, setCurrentAbilities] = useState(abilities)\r\n    const [currentAuras, setCurrentAuras] = useState(auras)\r\n    const [activeAbilitySection, setActiveAbilitySection] = useState(null)\r\n    const [activeAuraSection, setActiveAuraSection] = useState(null)\r\n    const [abilityChangesPending, setAbilityChangesPending] = useState(false)\r\n    const [auraChangesPending, setAuraChangesPending] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCurrentAuras(auras)\r\n        setCurrentAbilities(abilities)\r\n    }, [didReset])\r\n\r\n    useEffect(() => {\r\n        if(currentPanel !== panel) return\r\n        setActiveAbilitySection(Object.keys(abilities)[0])\r\n        setActiveAuraSection(Object.keys(auras)[0])\r\n    }, [currentPanel])\r\n\r\n    const handleAbilitySettingChange = (setting, key) => {\r\n        const newAbilities = {...currentAbilities, [key]: setting}\r\n        setCurrentAbilities(newAbilities)\r\n        setAbilityChangesPending(true)\r\n    }\r\n\r\n    const handleAuraSettingChange = (setting, key) => {\r\n        const newAuras = {...currentAuras, [key]: setting}\r\n        setCurrentAuras(newAuras)\r\n        setAuraChangesPending(true)\r\n    }\r\n\r\n    const handleAbilitySet = () => {\r\n        onAbilitySet(currentAbilities)\r\n        setAbilityChangesPending(false)\r\n    }\r\n\r\n    const handleAuraSet = () => {\r\n        onAuraSet(currentAuras)\r\n        setAuraChangesPending(false)\r\n    }\r\n\r\n    const showAbilityOptions = (e) => {\r\n        const settingKey = e.target.getAttribute(\"setting\")\r\n        setActiveAbilitySection(settingKey)\r\n    }\r\n\r\n    const showAuraOptions = (e) => {\r\n        const settingKey = e.target.getAttribute(\"setting\")\r\n        setActiveAuraSection(settingKey)\r\n    }\r\n\r\n    const reset = () => {\r\n        setCurrentAuras(auras)\r\n        setCurrentAbilities(abilities)\r\n        setAbilityChangesPending(false)\r\n        setAuraChangesPending(false)\r\n        setTimeout(() => {\r\n            setActiveAbilitySection(null)\r\n            setActiveAuraSection(null)\r\n        }, 500)\r\n    }\r\n\r\n    return (\r\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass} style={{transform: `translateX(${currentPanel === panel ? \"0px\": \"350px\"}`}}>\r\n            <div className=\"vertical-panel-content\">\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Customize Abilities</div>\r\n                    <div className=\"settings-header-container\">\r\n                        {Object.keys(abilities)\r\n                        .filter(k => abilityOptions[k])\r\n                        .map(k => \r\n                            <div key={k} className={activeAbilitySection === k ? \"settings-header-active\" : \"settings-header\"} setting={k} onClick={showAbilityOptions}>{abilities[k].displayName}</div>    \r\n                        )}\r\n                    </div>\r\n                    {activeAbilitySection ? <CustomizeSection name={activeAbilitySection} setting={currentAbilities[activeAbilitySection]} options={abilityOptions[activeAbilitySection]} onChange={handleAbilitySettingChange}/> : null}\r\n                    <div className=\"panel-text-button-container\">\r\n                        <div className=\"panel-info-text-container\">\r\n                            {abilityChangesPending ? changesPendingText : null}\r\n                        </div>                  \r\n                        <div>\r\n                            <button className=\"panel-button\" onClick={handleAbilitySet}>{abilityButtonText}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Customize Auras</div>\r\n                        <div className=\"settings-header-container\">\r\n                            {Object.keys(auras)\r\n                            .filter(k => auraOptions[k])\r\n                            .map(k => \r\n                                <div key={k} className={activeAuraSection === k ? \"settings-header-active\" : \"settings-header\"} setting={k} onClick={showAuraOptions}>{auras[k].displayName}</div>    \r\n                            )}\r\n                        </div>\r\n                        {activeAuraSection ? <CustomizeSection name={activeAuraSection} setting={currentAuras[activeAuraSection]} options={auraOptions[activeAuraSection]} onChange={handleAuraSettingChange}/> : null}\r\n                        <div className=\"panel-text-button-container\">\r\n                            <div className=\"panel-info-text-container\">\r\n                                {auraChangesPending ? changesPendingText : null}    \r\n                            </div>\r\n                            <div>\r\n                                <button className=\"panel-button\" onClick={handleAuraSet}>{auraButtonText}</button>   \r\n                            </div>  \r\n                        </div>            \r\n                </div>\r\n            </div>\r\n        </Panel>      \r\n    )\r\n}\r\n\r\nexport default SettingsPanel","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\nimport {keybinds} from \"../../lib/constants\"\r\nimport \"./Panel.css\"\r\nimport \"./Tooltip.css\"\r\n\r\nconst AbilityIndex = (props) => {\r\n\r\n    const {name, count, onChange, value} = props\r\n\r\n    const handleChange = (e) => {\r\n        onChange(parseInt(e.target.value), name)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <select className=\"panel-dropdown\" value={value} onChange={handleChange}>\r\n                {[...Array(count).keys()].map(i => <option key={`${name}-index-${i}`} value={i+1}>{i+1}</option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AbilityKeybindsPanel = (props) => {\r\n\r\n    const {abilities, currentPanel, onKeybind, setOrder, onToggle, onClick, closePanel} = props\r\n\r\n    const panel = \"abilitykeybinds\"\r\n    const header = \"Ability and Keybinds\"\r\n    const panelClass = \"bottom-panel\"\r\n\r\n    const defaultState = {\r\n        tooltip: \"\",\r\n        keybindText: \"\",\r\n        currentAbility: \"\"\r\n    }\r\n\r\n    const [tooltip, setTooltip] = useState(defaultState.tooltip)\r\n    const [keybindText, setKeybindText] = useState(defaultState.keybindText)\r\n    const [currentAbility, setCurrentAbility] = useState(defaultState.currentAbility)\r\n    const [abilityCount] = useState(Object.keys(abilities).length-1)\r\n\r\n    const handleClose = () => {\r\n        setTooltip(defaultState.tooltip)\r\n        setKeybindText(defaultState.keybindText)\r\n        setCurrentAbility(defaultState.currentAbility)\r\n\r\n        closePanel()\r\n    }\r\n\r\n    const currentAbilityRef = useRef(currentAbility)\r\n    currentAbilityRef.current = currentAbility\r\n\r\n    const showToolTip = (e) => {\r\n        setTooltip(e.target.alt)\r\n    }\r\n\r\n    const hideToolTip = () => {\r\n        setTooltip(\"\")\r\n    }\r\n\r\n    const prepareToBindAbility = (e) => {\r\n        let ability = e.target.getAttribute(\"ability\")\r\n        setCurrentAbility(ability)\r\n\r\n        setKeybindText(`Press any key to bind to ${abilities[ability].displayName}`)\r\n\r\n        document.addEventListener(\"keydown\", handleKeyDown, {once: true})\r\n        document.addEventListener(\"keypress\", handleKeyPress, {once: true})\r\n    }\r\n\r\n    const handleKeyDown = (event) => {\r\n        //check to see if we prevent default or not\r\n        const {key} = event\r\n\r\n        if(!isKeydownKey(key)) return\r\n\r\n        event.preventDefault()\r\n        bindAbility(key)\r\n\r\n        //if keybind was found, prevent default and bind ability\r\n\r\n        //if keybind was not found, return\r\n    }\r\n\r\n    const handleKeyPress = (e) => bindAbility(e.key)\r\n\r\n    const isKeydownKey = (key) => {     \r\n        if(key.match(/F[1-9]{1,2}/)) return true\r\n\r\n        return false\r\n    }\r\n\r\n    const formKeybindFromKey = (key) => {\r\n        if(keybinds[key]) \r\n            return {key, keybindText: keybinds[key]}\r\n        if(key.match(/^[a-z]$/)) \r\n            return {key, keybindText: key.toUpperCase() }\r\n        if(key.match(/^[A-Z]$/)) \r\n            return {key, keybindText: \"S-\" + key }\r\n        \r\n        return {key, keybindText: key}\r\n    }\r\n\r\n    const bindAbility = (key) => {\r\n        document.removeEventListener(\"keypress\", handleKeyPress)\r\n        \r\n        const keybind = formKeybindFromKey(key)\r\n        \r\n        let ability = currentAbilityRef.current \r\n\r\n        onKeybind(keybind, ability)\r\n        setKeybindText(`${abilities[ability].displayName} successfuly bound to ${keybind.keybindText}`)\r\n    }\r\n\r\n    const reset = () => {\r\n        document.removeEventListener(\"keydown\", handleKeyDown)\r\n        document.removeEventListener(\"keypress\", handleKeyPress)\r\n        setTooltip(defaultState.tooltip)\r\n        setKeybindText(defaultState.keybindText)\r\n        setCurrentAbility(defaultState.currentAbility)\r\n    }\r\n\r\n    return (\r\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} header={header} style={{transform: `translateY(${currentPanel === panel ? \"0px\": \"250px\"}`}} panelClass={panelClass} handleClose={handleClose}>\r\n            <div className=\"horizontal-panel-content\">\r\n                <div className=\"panel-content-header\">Change Abilities and Keybinds</div>\r\n                <div className=\"tooltip\">\r\n                    <span className=\"tooltip-text\" visibility={(!!tooltip).toString()}>\r\n                        {tooltip}\r\n                    </span>\r\n                </div>\r\n                <div className=\"panel-abilities-content\">\r\n                    <div className=\"panel-abilities-header\">\r\n                        Spell Order\r\n                    </div>\r\n                    <div className=\"panel-abilities-container\">\r\n                        {Object.keys(abilities).map(k => {\r\n                            if(k === \"void-eruption\") return\r\n                            return <div className=\"panel-ability-container\" key={k}>\r\n                                <img  \r\n                                    className=\"hover-pointer\" \r\n                                    alt={abilities[k].displayName}\r\n                                    ability={k} \r\n                                    onMouseOver={showToolTip}\r\n                                    onMouseOut={hideToolTip}\r\n                                    onClick={prepareToBindAbility}\r\n                                    src={abilities[k].icon}\r\n                                    height={50}\r\n                                    width={50}\r\n                                />\r\n                                <button className={`${abilities[k].disabled ? \"panel-button-secondary\" : \"panel-button\"}`} onClick={() => onToggle(k)}>{abilities[k].disabled ? \"Enable\" : \"Disable\"}</button>\r\n                                <AbilityIndex name={k} count={abilityCount} value={abilities[k].index} onChange={setOrder} />\r\n                            </div>\r\n                    })}\r\n                    </div>\r\n                </div>\r\n                <div>{keybindText ? keybindText : null}</div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default AbilityKeybindsPanel","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\n\r\nimport \"./Panel.css\"\r\n\r\nconst AboutPanel = (props) => {\r\n    const {currentPanel, onClick, closePanel} = props\r\n\r\n    const panel = \"about\"\r\n    const header= \"About\"\r\n    const panelClass = \"middle-panel\"\r\n\r\n    return (\r\n        <Panel panel={panel} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass}\r\n            style={{transform: `translateY(${currentPanel === panel ? \"0px\": \"min(-685px,-70vh)\"}`}}\r\n        >\r\n            <div className=\"middle-panel-content\">\r\n                <div className=\"panel-content-header\">About</div>\r\n                <div className=\"medium-text left-text panel-text-content\">\r\n                    <p>\r\n                    Voidform Optimizer is a thought experiment I had.\r\n                    </p>\r\n                    <p>\r\n                    I am convinced that many, although not all, players' grievances with Voidform are caused by the\r\n                    implementations of Voidform they have experienced, and not by the design of Voidform itself. Therefore I have made it my mission to allow others\r\n                    to experience Voidform in a myriad of ways; in hope that they realize it isn't inherently flawed, find what they most enjoy about it, and \r\n                    share those findings with others. Then, just maybe, as a community we can come to an agreement on how to <b>#savevoidform</b>.\r\n                    </p>\r\n                    <p>\r\n                    If you have any questions, feedback, or bugs to report, please feel free to DM me on Discord at Shot#1711.\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        </Panel>      \r\n    )\r\n}\r\n\r\nexport default AboutPanel","export default [\r\n    {\r\n        header: \"New Template: Yvaelle's Shadowlands\",\r\n        description: \"Yvaelle had an interesting proposal for a static Voidform, so I decided to include support for it and created a template \\\r\n        based on their proposal.\"\r\n    },\r\n    {\r\n        header: \"New Ability: Bloodlust!\",\r\n        description: \"Let's be honest, it's hard to determine how Shadow truly feels until you feel it under lust. Luckily, Bloodlust has now \\\r\n        been added so you can have the true Shadow experience. The ability works the same way on live (without the debuff), and is not customizable.\"\r\n    },\r\n    {\r\n        header: \"New Template: Ryeshot's Shadowlands\",\r\n        description: \"This template reflects what I think the healthiest version of baseline Shadow looks like going into Shadowlands. \\\r\n        It will be updated regularly as I refine my beliefs on what is best for the spec.\"\r\n    },\r\n    {\r\n        header: \"Void Bolt Rank Two Removed!\",\r\n        description: \"Void Bolt rank two has been removed from the alpha, and therefore is no longer part of the alpha template or a \\\r\n        customizable option for Void Bolt. Good riddance.\"\r\n    },\r\n    {\r\n        header: \"New Domain!\",\r\n        description: \"Voidform Optimizer is now registered at voidform-optimizer.com.\"\r\n    },\r\n    {\r\n        header: \"Function Key Binding\",\r\n        description: \"Due to popular demand, function keys are now a valid keybind option. Just make sure to unbind should you wish to \\\r\n        perform any browser function key events (such as refreshing the page), since the settings will override that default behavior.\"\r\n    },\r\n    {\r\n        header: \"Spell Ordering!\",\r\n        description: \"You can now manually set the order of spells shown through the keybinds panel. You can also preserve these changes \\\r\n        by toggling include spell order while importing a template.\"\r\n    },\r\n    {\r\n        header: \"Power Infusion!\",\r\n        description: \"Customizable Power Infusion ability has been added! The ability's cooldown may be changed \\\r\n        and the aura's duration and resource generation can be changed. If desired, you can create alpha StM, Lucid, \\\r\n        and Legion Power Infusion from these settings.\"\r\n    },\r\n    {\r\n        header: \"Legion Templates!\",\r\n        description: \"New templates to satiate your Legion nostalgia. More to come in the future.\"\r\n    },\r\n    {\r\n        header: \"Shadowfiend\",\r\n        description: \"Customizable Shadowfiend ability has been added!\"\r\n    },\r\n    {\r\n        header: \"Templates\",\r\n        description: \"Premade templates may now be selected on import panel!\"\r\n    },\r\n    {\r\n        header: \"Devouring Plague\",\r\n        description: \"The recent Shadowlands Devouring Plague addition is now available to try out!\"\r\n    },\r\n    {\r\n        header: \"What's New?\",\r\n        description: \"Added a what's new dialogue to inform about recent changes to Voidform Optimizer.\"\r\n    }\r\n]","import React, {useState} from 'react';\r\nimport \"../forms/Form.css\"\r\nimport \"./Panel.css\"\r\nimport whatsNew from \"../../lib/whatsNew\"\r\n\r\nconst containerStyle = {\r\n    textAlign: \"left\",\r\n    marginBottom: \"20px\"\r\n}\r\n\r\nconst smallText = {\r\n    fontSize: \"15px\"\r\n}\r\n\r\nconst mediumText = {\r\n    fontSize: \"20px\"\r\n}\r\n\r\nconst WhatsNew = (props) => {\r\n    const title = \"What's New\"\r\n\r\n    const {onClose} = props\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content panel\">\r\n                <div className=\"form-title\">\r\n                    {title}\r\n                </div>           \r\n                <div>\r\n                    {whatsNew.map(item => \r\n                        <div style={containerStyle}>\r\n                            <b style={mediumText}>{item.header}</b>\r\n                            <div style={smallText}>\r\n                                {item.description}\r\n                            </div>\r\n                        </div>)}\r\n                </div>\r\n                <div>\r\n                    <button className=\"panel-button\" onClick={onClose}>Got it!</button>\r\n                </div>\r\n                <button className=\"panel-button panel-exit-button\" onClick={onClose}>x</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WhatsNewPanel = () => {\r\n\r\n    const header = \"What's New\"\r\n\r\n    const [showWhatsNew, setShowWhatsNew] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel-header hover-pointer\" onClick={() => setShowWhatsNew(true)}>{header}</div>\r\n            {showWhatsNew ? <WhatsNew onClose={() => setShowWhatsNew(false)} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatsNewPanel","const defaultAbilities = {\r\n    \"mind-flay\": {\r\n        displayName: \"Mind Flay\",\r\n        index: 1,\r\n        keybind: {\r\n            key: \"1\",\r\n            keybindText: \"1\"\r\n        },\r\n        icon: \"images/mind-flay.jpg\"\r\n    },\r\n    \"mind-sear\": {\r\n        displayName: \"Mind Sear\",\r\n        index: 2,\r\n        keybind: {\r\n            key: \"2\",\r\n            keybindText: \"2\"\r\n        },\r\n        icon: \"images/mind-sear.jpg\"\r\n    },\r\n    \"mind-blast\": {\r\n        displayName: \"Mind Blast\",\r\n        index: 3,\r\n        keybind: {\r\n            key: \"3\",\r\n            keybindText: \"3\"\r\n        },\r\n        icon: \"images/mind-blast.jpg\"\r\n    },\r\n    \"void-bolt\": {\r\n        displayName: \"Void Bolt\",\r\n        index: 4,\r\n        keybind: {\r\n            key: \"4\",\r\n            keybindText: \"4\"\r\n        },\r\n        icon: \"images/void-bolt.jpg\"\r\n    },\r\n    \"void-eruption\": {\r\n        displayName: \"Void Eruption\",\r\n        index: 4,\r\n        keybind: {\r\n            key: \"4\",\r\n            keybindText: \"4\"\r\n        },\r\n        icon: \"images/void-eruption.jpg\"\r\n    },\r\n    \"shadow-word-death\": {\r\n        displayName: \"Shadow Word: Death\",\r\n        index: 5,\r\n        keybind: {\r\n            key: \"5\",\r\n            keybindText: \"5\"\r\n        },\r\n        icon: \"images/shadow-word-death.jpg\"\r\n    },\r\n    \"void-torrent\": {\r\n        displayName: \"Void Torrent\",\r\n        index: 6,\r\n        keybind: {\r\n            key: \"6\",\r\n            keybindText: \"6\"\r\n        },\r\n        icon: \"images/void-torrent.jpg\"\r\n    },\r\n    \"shadow-word-pain\": {\r\n        displayName: \"Shadow Word: Pain\",\r\n        index: 7,\r\n        keybind: {\r\n            key: \"7\",\r\n            keybindText: \"7\"\r\n        },\r\n        icon: \"images/shadow-word-pain.jpg\"\r\n    },\r\n    \"vampiric-touch\": {\r\n        displayName: \"Vampiric Touch\",\r\n        index: 8,\r\n        keybind: {\r\n            key: \"8\",\r\n            keybindText: \"8\"\r\n        },\r\n        icon: \"images/vampiric-touch.jpg\"\r\n    },\r\n    \"devouring-plague\": {\r\n        displayName: \"Devouring Plague\",\r\n        index: 9,\r\n        keybind: {\r\n            key: \"9\",\r\n            keybindText: \"9\"\r\n        },\r\n        icon: \"images/devouring-plague.jpg\"\r\n    },\r\n    \"shadowfiend\": {\r\n        displayName: \"Shadowfiend\",\r\n        index: 10,\r\n        keybind: {\r\n            key: \"0\",\r\n            keybindText: \"0\"\r\n        },\r\n        icon: \"images/shadowfiend.jpg\"\r\n    },\r\n    \"power-infusion\": {\r\n        displayName: \"Power Infusion\",\r\n        index: 11,\r\n        keybind: {\r\n            key: \"-\",\r\n            keybindText: \"-\"\r\n        },\r\n        icon: \"images/power-infusion.jpg\"\r\n    },\r\n    \"bloodlust\": {\r\n        displayName: \"Bloodlust\",\r\n        index: 12,\r\n        keybind: {\r\n            key: \"=\",\r\n            keybindText: \"=\"\r\n        },\r\n        icon: \"images/bloodlust.jpg\"\r\n    }\r\n}\r\n\r\nexport default defaultAbilities","import React from \"react\"\r\n\r\nconst FormTextAreaField = (props) => {\r\n\r\n    const {value, id, label, className, placeHolder, onChange} = props\r\n\r\n    const handleChange = (e) => onChange(id, e.target.value)\r\n\r\n    return (\r\n        <div className={`form-field ${className}`}>\r\n            <label htmlFor={id}>{label}</label>\r\n            <div>\r\n                <textarea className=\"panel-text-area form-input-container\" id={id} value={value} placeholder={placeHolder} required={true} onChange={handleChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormTextAreaField","import React from \"react\"\r\n\r\nconst FormTextField = (props) => {\r\n\r\n    const {value, id, label, placeHolder, onChange, required} = props\r\n\r\n    const handleChange = (e) => onChange(id, e.target.value)\r\n\r\n    return (\r\n        <div className=\"form-field\">\r\n            <label className=\"form-input-title\" htmlFor={id}>{label}</label>\r\n            <input className=\"panel-text-area form-input\" type=\"text\" id={id} value={value} placeholder={placeHolder} required={required} onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormTextField","const email = window.Email\r\n\r\nconst formatBugReportContent = (body) => {\r\n    const appHeader = \"<h1>Bug Report for Voidform Optimizer</h1>\\n\"\r\n    const descriptionHeader = \"<h3>Give a brief description of the issue</h3>\"\r\n    //const reproductionHeader = \"### How can this issue be reproduced?\"\r\n    const expectedBehaviorHeader = \"<h3>What is the expected behavior?</h3>\"\r\n    const actualBehaviorHeader = \"<h3>What is the actual behavior?</h3>\"\r\n    const contactHeader = \"<h3>Contact Information</h3>\"\r\n\r\n    const headers = [descriptionHeader, expectedBehaviorHeader, actualBehaviorHeader, contactHeader]\r\n\r\n    const userContent = Object.keys(body).reduce((content, key, i) => {\r\n        if(!body[key]) return content\r\n        return content.concat([headers[i], body[key]])\r\n    }, []).join(\"\\n\")\r\n\r\n    return appHeader + userContent\r\n}\r\n\r\nconst sendBugReport = async (title, content) => {\r\n    const data = {\r\n        SecureToken: process.env.REACT_APP_SMTP_ACCESS_TOKEN,\r\n        From: process.env.REACT_APP_SENDER_GMAIL_USER,\r\n        To: process.env.REACT_APP_RECEIVER_GMAIL_USER,\r\n        Subject: title,\r\n        Body: content\r\n    }\r\n\r\n    const result = await email.send(data)\r\n\r\n    if(result !== \"OK\") throw new Error(result)\r\n}\r\n\r\nexport const submitBugReport = async (data, onSuccess, onFail) => {\r\n\r\n    const {title, ...body} = data\r\n\r\n    const content = formatBugReportContent(body)\r\n\r\n    try {\r\n        await sendBugReport(`[BUG] ${title}`, content)\r\n        onSuccess()\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n        onFail()\r\n    }\r\n}\r\n\r\nexport const createPendingTextTimer = (text, setText) => {\r\n    const dot = \".\"\r\n    let i = 1\r\n\r\n    setText(text)\r\n    \r\n    const timer = setInterval(() => {\r\n        const count = i % 4\r\n\r\n        setText(`${text}${dot.repeat(count)}`)\r\n\r\n        i++\r\n    }, 500);\r\n\r\n    return timer\r\n}\r\n","import React, {useState} from \"react\"\r\nimport Form from \"./Form\"\r\nimport FormTextAreaField from \"./FormTextAreaField\"\r\nimport FormTextField from \"./FormTextField\"\r\nimport {submitBugReport, createPendingTextTimer} from \"../../utils/bugreport\"\r\n\r\nconst fields = [{\r\n    id: \"bug-report-description\",\r\n    label: \"Description\",\r\n    className: \"form-field-small\"\r\n    // placeHolder: \"Enter a description of the bug...\"\r\n},\r\n{\r\n    id: \"bug-report-expected\",\r\n    label: \"Expected Behavior\",\r\n    className: \"form-field-medium\"\r\n    // placeHolder: \"Enter the expected behavior...\"\r\n},\r\n{\r\n    id: \"bug-report-actual\",\r\n    label: \"Actual Behavior\",\r\n    className: \"form-field-medium\"\r\n    // placeHolder: \"Enter the actual behavior...\"\r\n}]\r\n\r\nconst titleField = {\r\n    id: \"title\",\r\n    label: \"Title\"\r\n}\r\n\r\nconst contactField = {\r\n    id: \"contact\",\r\n    label: \"Contact (Optional)\"\r\n}\r\n\r\nconst formTitle = \"Bug Report\"\r\n\r\nconst formInfo = \"If the issue is UI related, please update your browser \\\r\nto the latest version before submitting.\"\r\n\r\nconst submitPending = \"Submitting\"\r\nconst submitSuccess = \"Bug report successfully submitted!\"\r\nconst submitFail = \"Failed to submit bug report\"\r\n\r\nconst BugReport = (props) => {\r\n\r\n    const {closeForm} = props\r\n    const [data, setData] = useState({})\r\n    const [canSubmit, setCanSubmit] = useState(true)\r\n    const [submitMessage, setSubmitMessage] = useState(\"\")\r\n\r\n    const onChange = (id, value) => {\r\n        setData({...data, [id]: value})\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const timer = createPendingTextTimer(submitPending, setSubmitMessage)\r\n\r\n        const onSuccess = () => {\r\n            clearInterval(timer)\r\n            setSubmitMessage(submitSuccess)\r\n        }\r\n        const onFail = () => {\r\n            clearInterval(timer)\r\n            setSubmitMessage(submitFail)\r\n        }\r\n\r\n        submitBugReport(data, onSuccess, onFail)\r\n        setCanSubmit(false)\r\n    }\r\n\r\n    return <div className=\"modal\">\r\n        <div className=\"modal-content panel\">\r\n            <div className=\"form-title\">\r\n                {formTitle}\r\n            </div>\r\n            <form className=\"form\" onSubmit={onSubmit}>\r\n                <div className=\"form-info\">\r\n                    {formInfo}\r\n                </div>\r\n                <FormTextField value={data.title} {...titleField} required={true} onChange={onChange} />\r\n                {fields.map(f => <FormTextAreaField key={f.id} value={data[f.id]} {...f} onChange={onChange} />)}\r\n                <FormTextField value={data.contact} {...contactField} required={false} onChange={onChange} />\r\n                <div>\r\n                    <input className=\"panel-button\" type=\"submit\" value=\"Submit\" disabled={!canSubmit} />\r\n                </div>\r\n            </form>\r\n            <div>\r\n                {submitMessage}\r\n            </div>\r\n            <button className=\"panel-button panel-exit-button\" onClick={closeForm}>x</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default BugReport","import React, {useState} from \"react\"\r\nimport Form from \"./Form\"\r\nimport FormTextAreaField from \"./FormTextAreaField\"\r\nimport FormTextField from \"./FormTextField\"\r\n\r\nconst fields = []\r\n\r\nconst submitSuccess = \"Feature request successfully submitted!\"\r\nconst submitFail = \"Failed to submit feature request\"\r\n\r\nconst FeatureRequest = (props) => {\r\n\r\n    const {closeForm} = props\r\n\r\n    return <div className=\"modal\">\r\n        <div className=\"modal-content panel\">\r\n            Coming soon!\r\n            <button className=\"panel-button panel-exit-button\" onClick={closeForm}>x</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default FeatureRequest","import React, {useState} from \"react\"\r\nimport BugReport from \"./BugReport\"\r\nimport FeatureRequest from \"./FeatureRequest\"\r\nimport \"./Form.css\"\r\nimport \"../panels/Panel.css\"\r\nimport \"../panels/SettingOption.css\"\r\n\r\nconst Forms = (props) => {\r\n\r\n    const {pauseKeyEvents} = props\r\n\r\n    const [showBugReport, setShowBugReport] = useState(false)\r\n    const [showFeatureRequest, setShowFeatureRequest] = useState(false)\r\n\r\n    const handleFormClick = (setShow, show) => {\r\n        pauseKeyEvents(show)\r\n        setShow(show)\r\n    }\r\n\r\n    return (\r\n        <div className=\"forms-container\">\r\n            <div>\r\n                <button className=\"panel-button\" onClick={() => handleFormClick(setShowBugReport, true)}>Report a Bug</button>\r\n                <button className=\"panel-button\" onClick={() => handleFormClick(setShowFeatureRequest, true)}>Request a Feature</button>\r\n            </div>\r\n                {showBugReport ? <BugReport closeForm={() => handleFormClick(setShowBugReport, false)} /> : null} \r\n                {showFeatureRequest ? <FeatureRequest closeForm={() => handleFormClick(setShowFeatureRequest, false)} /> : null} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forms","import React, {useState, useEffect, useReducer} from 'react';\r\nimport './App.css';\r\nimport ResourceBar from \"./components/ResourceBar\"\r\nimport AbilityBar from \"./components/AbilityBar\"\r\nimport AuraBar from \"./components/auras/AuraBar\"\r\nimport ExportPanel from \"./components/panels/ExportPanel\"\r\nimport SettingsPanel from \"./components/panels/SettingsPanel\"\r\nimport AbilityKeybindsPanel from \"./components/panels/AbilityKeybindsPanel\"\r\nimport AboutPanel from \"./components/panels/AboutPanel\"\r\nimport WhatsNewPanel from \"./components/panels/WhatsNewPanel\"\r\nimport defaultAbilities from \"./lib/abilities\"\r\nimport defaultAbilitySettings from \"./lib/abilitySettings\"\r\nimport defaultAuraSettings from \"./lib/auraSettings\"\r\nimport Forms from \"./components/forms/Forms\"\r\n\r\nconst defaultState = {\r\n  resource: 0,\r\n  auras: {\r\n    stats: {\r\n      haste: 0\r\n    },\r\n    voidform: {\r\n      active: false,\r\n      stacks: 0,\r\n      haste: 0,\r\n      paused: false,\r\n    },\r\n    lingeringInsanity: {\r\n      active: false,\r\n      stacks: 0,\r\n      haste: 0\r\n    },\r\n    \"shadow-word-pain\": {\r\n      active: false\r\n    },\r\n    \"vampiric-touch\": {\r\n      active: false\r\n    },\r\n    \"devouring-plague\": {\r\n      active: false\r\n    },\r\n    \"shadowfiend\": {\r\n      active: false\r\n    },\r\n    \"power-infusion\": {\r\n      active: false,\r\n      haste: 0\r\n    },\r\n    \"bloodlust\": {\r\n      active: false,\r\n      haste: 0\r\n    }\r\n  },\r\n  abilities: {\r\n    \"void-eruption\": {\r\n      unusable: true\r\n    },\r\n    \"devouring-plague\": {\r\n      unusable: true\r\n    },\r\n    \"void-torrent\": {\r\n      unusable: defaultAbilitySettings[\"void-torrent\"].requireVoidform\r\n    }\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n\r\n  const [panel, setPanel] = useState()\r\n  const [abilitySettings, setAbilitySettings] = useState(defaultAbilitySettings)\r\n  const [abilities, setAbilities] = useState(defaultAbilities)\r\n  const [auraSettings, setAuraSettings] = useState(defaultAuraSettings)\r\n  const [keyEventsPaused, setKeyEventsPaused] = useState(false)\r\n  const [reset, setReset] = useState(false)\r\n  const [abilityReset, setAbilityReset] = useState(false)\r\n  const [haste, setHaste] = useState(0)\r\n\r\n  const handleAuraPandemic = (aura, baseDuration, now) => {\r\n    const endTime = aura.startTime + aura.maxDuration\r\n    const remaining = endTime - now\r\n    const pandemicDuration = Math.min(.3 * baseDuration, remaining)\r\n\r\n    aura.maxDuration = baseDuration + pandemicDuration\r\n    aura.startTime = now\r\n  }\r\n\r\n  const [state, updateState] = useReducer((state, action) => {\r\n\r\n    let event = action.type\r\n    let newState = JSON.parse(JSON.stringify(state))\r\n\r\n    const voidform = newState.auras.voidform\r\n    const lingeringInsanity = newState.auras.lingeringInsanity\r\n    const powerInfusion = newState.auras[\"power-infusion\"]\r\n\r\n    switch(event) {\r\n      case \"RESET\":\r\n        return defaultState\r\n      case \"RESET_ABILITIES\":\r\n        return {...defaultState, auras: state.auras}\r\n      case \"RESET_AURAS\":\r\n        return {...newState, auras: {...defaultState.auras, stats: state.auras.stats} }\r\n      case \"UPDATE_ABILITY_STATE\":\r\n        newState.abilities[\"void-torrent\"].unusable = abilitySettings[\"void-torrent\"].requireVoidform\r\n        break\r\n      case \"HASTE_SET\":\r\n        var {source, haste} = action.payload\r\n        newState.auras[source].haste = haste\r\n        break\r\n      case \"HASTE_UPDATE\":\r\n        var {source, haste} = action.payload\r\n        newState.auras[source].haste += haste\r\n        break\r\n      case \"HASTE_RESET\":\r\n        var {source} = action.payload\r\n        newState.auras[source].haste = 0\r\n        break\r\n      case \"VOIDFORM_UPDATE\":\r\n        voidform.stacks++\r\n        voidform.haste += action.payload\r\n        break;\r\n      case \"VOIDFORM_START\":\r\n        voidform.active = true\r\n        voidform.stacks = 1\r\n        var voidTorrent = abilitySettings[\"void-torrent\"]\r\n        if(voidTorrent.requireVoidform)\r\n          newState.abilities[\"void-torrent\"].unusable = false\r\n        break;\r\n      case \"VOIDFORM_END\":\r\n        var {time, startingHaste} = action.payload\r\n        lingeringInsanity.active = true\r\n        lingeringInsanity.stacks = voidform.stacks\r\n        lingeringInsanity.haste = Math.round((voidform.haste - startingHaste)*1000)/1000\r\n        lingeringInsanity.startTime = time\r\n        voidform.stacks = 0\r\n        voidform.haste = 0\r\n        newState.abilities[\"void-eruption\"].unusable = true\r\n        newState.abilities[\"void-torrent\"].unusable = abilitySettings[\"void-torrent\"].requireVoidform\r\n        break;\r\n      case \"LINGERING_INSANITY_START\":\r\n        var {haste, stacks} = action.payload\r\n        lingeringInsanity.haste = haste\r\n        lingeringInsanity.stacks = stacks\r\n        break;\r\n      case \"LINGERING_INSANITY_UPDATE\":\r\n        lingeringInsanity.haste += action.payload\r\n        lingeringInsanity.stacks--\r\n        if(lingeringInsanity.haste <= 0) lingeringInsanity.haste = 0\r\n        break;\r\n      case \"LINGERING_INSANITY_END\":\r\n        lingeringInsanity.active = false\r\n        lingeringInsanity.stacks = 0\r\n        lingeringInsanity.haste = 0\r\n        lingeringInsanity.startTime = 0\r\n        break;\r\n      case \"RESOURCE_UPDATE\":\r\n        var {name, resource, costsResource} = action.payload\r\n        let targetCount = name === \"mind-sear\" ? abilitySettings[name].targetCount : 1\r\n\r\n        resource = (resource * (costsResource && -1 || 1)) * targetCount\r\n\r\n        if(voidform.active && !auraSettings.voidform.gainInsanity && resource > 0)\r\n          resource = 0\r\n\r\n        if(powerInfusion.active && resource > 0)\r\n          resource += (resource * auraSettings[\"power-infusion\"].resourceGen)\r\n\r\n        resource = Math.max(Math.min(newState.resource + resource, 100), 0)\r\n        newState.resource = resource\r\n        if(resource <= 0 && voidform.active) {\r\n          voidform.active = false\r\n        }\r\n        //whenever we get resource need to calculate if an ability is usable or not\r\n        Object.keys(abilitySettings).forEach(k => {\r\n          const ability = abilitySettings[k]\r\n          if(!ability.costsResource) return\r\n          newState.abilities[k].unusable = resource < ability.resource\r\n        })\r\n        break;\r\n      case \"INSANITY_DRAIN_PAUSE_START\":\r\n        voidform.paused = true\r\n        break\r\n      case \"INSANITY_DRAIN_PAUSE_END\":\r\n        voidform.paused = false\r\n        break\r\n      case \"AURA_START\":\r\n        var {name, time} = action.payload\r\n        var aura = newState.auras[name]\r\n\r\n        aura.active ? handleAuraPandemic(aura, auraSettings[name].baseDuration, time) : aura.active = true\r\n        break\r\n      case \"AURA_BEGIN\":\r\n        var {name, time, duration} = action.payload\r\n        newState.auras[name].startTime = time\r\n        newState.auras[name].maxDuration = duration\r\n        break\r\n      case \"AURA_REFRESH\":\r\n        var {name, time} = action.payload\r\n        newState.auras[name].startTime = time\r\n        break\r\n      case \"AURA_END\":\r\n        var {name} = action.payload\r\n        newState.auras[name].active = false\r\n        newState.auras[name].startTime = 0\r\n        break\r\n      case \"DOT_EXTEND\":\r\n        const extension = abilitySettings[\"void-bolt\"].extension\r\n        const dots = [\"shadow-word-pain\", \"vampiric-touch\"]\r\n        dots.forEach(d => {\r\n          const dot = newState.auras[d]\r\n          if(!dot.active) return\r\n          dot.maxDuration += extension\r\n        })\r\n        break\r\n    }\r\n\r\n    return newState\r\n  }, defaultState)\r\n\r\n  useEffect(() => {\r\n    setHaste(calculateHaste)\r\n  }, [state.auras.stats.haste,\r\n    state.auras.voidform.haste,\r\n    state.auras.lingeringInsanity.haste,\r\n    state.auras[\"power-infusion\"].haste,\r\n    state.auras[\"bloodlust\"].haste])\r\n\r\n  const enterVoidform = () => {\r\n    updateState({\r\n      type: \"VOIDFORM_START\"\r\n    })\r\n  }\r\n\r\n  const gainInsanity = () => {\r\n    updateState({\r\n      type: \"RESOURCE_UPDATE\",\r\n      payload: {\r\n        resource: 10\r\n      }\r\n    })\r\n  }\r\n\r\n  const calculateHaste = () => {\r\n    const auras = state.auras\r\n    return Object.keys(auras).reduce((haste, aura) => {\r\n      if(!auras[aura].haste) return haste\r\n      return haste * (1+auras[aura].haste)\r\n    }, 1)\r\n  }\r\n\r\n  const handlePanelHeaderClick = (panel) => {\r\n    setKeyEventsPaused(true)\r\n    setPanel(panel)\r\n  }\r\n\r\n  const handlePanelClose = () => {\r\n    setKeyEventsPaused(false)\r\n    setPanel(null)\r\n  }\r\n\r\n  const handleAbilityToggle = (ability) => {\r\n    let newSettings = JSON.parse(JSON.stringify(abilities))\r\n\r\n    newSettings[ability].disabled = !newSettings[ability].disabled\r\n    if(ability === \"void-bolt\") newSettings[\"void-eruption\"].disabled = newSettings[ability].disabled\r\n\r\n    setAbilities(newSettings)\r\n  }\r\n\r\n  const setKeyBind = (keybind, ability) => {\r\n    let state = JSON.parse(JSON.stringify(abilities))\r\n    let key = keybind.key\r\n    let voidBoltOrEruption = ability === \"void-bolt\" || ability === \"void-eruption\"\r\n    Object.keys(state).forEach(k => {\r\n      let abilityKeybind = state[k].keybind\r\n      if(abilityKeybind.key === key) state[k].keybind = { keybindText: \"--\"}\r\n    })\r\n    if(voidBoltOrEruption) {\r\n      state[\"void-bolt\"].keybind = {...keybind}\r\n      state[\"void-eruption\"].keybind = {...keybind}\r\n    }\r\n    else {\r\n      state[ability].keybind = {...keybind}\r\n    }\r\n\r\n    setAbilities(state)\r\n  }\r\n\r\n  const setAbilityOrder = (index, name) => {\r\n    const state = JSON.parse(JSON.stringify(abilities))\r\n    const ability = state[name]\r\n    const abilityIndex = ability.index\r\n    const shift = index < abilityIndex ? \"right\" : \"left\"\r\n\r\n    let voidBoltOrEruption = name === \"void-bolt\" || name === \"void-eruption\"\r\n\r\n    Object.keys(state).forEach(k => {\r\n      const currentIndex = state[k].index\r\n\r\n      if(shift === \"right\" && (currentIndex >= index && currentIndex < abilityIndex)) state[k].index++\r\n      if(shift === \"left\" && (currentIndex <= index && currentIndex > abilityIndex)) state[k].index--\r\n    })\r\n    \r\n    if(voidBoltOrEruption) {\r\n      state[\"void-bolt\"].index = index\r\n      state[\"void-eruption\"].index = index\r\n    }\r\n    else {\r\n      ability.index = index\r\n    }\r\n\r\n    setAbilities(state)\r\n  }\r\n\r\n  const handleImport = (settings) => {\r\n    setAllAbilities(settings.abilityConfig)\r\n    handleAbilitySet(settings.abilitySettings)\r\n    handleAuraSet(settings.auraSettings)\r\n    handleReset()\r\n  }\r\n\r\n  const setAllAbilities = (importedAbilities) => {\r\n    let state = Object.keys(abilities).reduce((state, ability) => {\r\n      state[ability] = {...abilities[ability], ...importedAbilities[ability]}\r\n      return state\r\n    }, {})\r\n\r\n    setAbilities(state)\r\n  }\r\n\r\n  const mergeAbilities = () => {\r\n    return Object.keys(abilities).reduce((merged, a) => {\r\n      merged[a] = {...abilities[a], ...state.abilities[a]}\r\n      return merged\r\n    }, {})\r\n  }\r\n\r\n  const abilitySettingsWithDisplayName = () => {\r\n    return Object.keys(abilitySettings).reduce((merged, a) => {\r\n      merged[a] = {...abilitySettings[a], displayName: defaultAbilities[a].displayName}\r\n      return merged\r\n    }, {}) \r\n  }\r\n\r\n  const handleAuraSet = (auraSettings) => {\r\n    setAuraSettings(auraSettings)\r\n    handleAuraReset()\r\n    const haste = auraSettings.stats.haste\r\n    updateState({\r\n      type: \"HASTE_SET\",\r\n      payload: {\r\n        source: \"stats\",\r\n        haste\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleAbilitySet = (abilitySettings) => {\r\n    setAbilitySettings(abilitySettings)\r\n    handleAbilityReset()\r\n  }\r\n\r\n  const handleAbilityReset = () => {\r\n    updateState({\r\n      type: \"RESET_ABILITIES\"\r\n    })\r\n    updateState({\r\n      type: \"RESOURCE_UPDATE\",\r\n      payload: {\r\n        resource: 0\r\n      }\r\n    })\r\n    updateState({\r\n      type: \"UPDATE_ABILITY_STATE\"\r\n    })\r\n    setAbilityReset(!abilityReset)\r\n  }\r\n\r\n  const handleAuraReset = () => {\r\n    updateState({\r\n      type: \"RESET_AURAS\"\r\n    })\r\n\r\n    setTimeout(() => {\r\n      updateState({\r\n        type: \"LINGERING_INSANITY_END\"\r\n      })\r\n    }, 0)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    handleAuraReset()\r\n    handleAbilityReset()\r\n    setReset(!reset)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header header-panel\">\r\n        <div className=\"App-title\">\r\n          <div className=\"App-title-text\">\r\n            Voidform Optimizer\r\n          </div>\r\n        </div>\r\n        <div className=\"panel-container\">\r\n          <SettingsPanel settings={{abilities: abilitySettingsWithDisplayName(), auras: auraSettings}} didReset={reset} onAbilitySet={handleAbilitySet} onAuraSet={handleAuraSet} currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\r\n          <AbilityKeybindsPanel abilities={abilities} currentPanel={panel} onKeybind={setKeyBind} setOrder={setAbilityOrder} onToggle={handleAbilityToggle} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\r\n          <ExportPanel settings={{abilitySettings, auraSettings, abilities}} onImport={handleImport} currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose}/>\r\n          <AboutPanel currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\r\n          <WhatsNewPanel />\r\n        </div>\r\n        <Forms pauseKeyEvents={setKeyEventsPaused} />\r\n      </header>\r\n      <div className=\"App-content\">\r\n        <AuraBar auras={state.auras} settings={auraSettings} haste={haste} triggerEvent={updateState} />\r\n        <ResourceBar current={state.resource} max={100}/>\r\n        <AbilityBar abilitySettings={abilitySettings} abilities={mergeAbilities()} haste={haste} inVoidform={state.auras.voidform.active} triggerEvent={updateState} keyEventsPaused={keyEventsPaused} reset={abilityReset} />\r\n        <button className=\"panel-button\" onClick={handleReset}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport dotenv from \"dotenv\"\r\n\r\ndotenv.config()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}