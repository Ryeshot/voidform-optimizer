{"version":3,"sources":["components/ResourceBar.js","components/CooldownSweep.js","lib/events.js","lib/abilityEvents.js","lib/auraEvents.js","utils/eventHandler.js","lib/constants.js","utils/ability.js","components/ProgressAbility.js","components/GlobalCooldown.js","components/CastBar.js","components/AbilityBar.js","components/auras/Aura.js","components/auras/LingeringInsanity.js","components/auras/Buff.js","components/auras/Voidform.js","components/auras/DamageOverTime.js","lib/options.js","components/auras/AuraBar.js","components/panels/Panel.js","utils/hooks.js","lib/abilitySettings.js","lib/auraSettings.js","lib/effectSettings.js","utils/importExport.js","lib/templates/index.js","lib/templates/live.js","lib/templates/bfa.js","lib/templates/legionENVoidlord.js","lib/templates/legionAntorus.js","lib/templates/ryeshot.js","lib/templates/yvaelle.js","components/panels/ExportPanel.js","components/panels/optionFactory.js","components/panels/SettingOption.js","components/panels/WhatIs.js","components/panels/CustomizeSection.js","components/panels/SettingsPanel.js","components/panels/AbilityKeybindsPanel.js","components/panels/AboutPanel.js","lib/whatsNew.js","components/panels/WhatsNewPanel.js","lib/abilities.js","components/forms/FormTextAreaField.js","components/forms/FormTextField.js","utils/bugreport.js","components/forms/BugReport.js","components/forms/FeatureRequest.js","components/forms/Forms.js","lib/articles/designPhilosophy.js","components/articles/Article.js","components/articles/DesignPhilosophy.js","lib/articles/ramp.js","components/articles/Ramp.js","utils/reducers/abilitiesReducer.js","utils/reducers/aurasReducer.js","utils/reducers/effectsReducer.js","utils/reducers/defaultState.js","lib/effects.js","utils/reducers/index.js","lib/eventEffects.js","utils/featureToggle.js","utils/effects.js","utils/effectHandler.js","VoidformOptimizer.js","App.js","serviceWorker.js","index.js"],"names":["ResourceBar","props","max","current","voidform","className","toFixed","style","width","CooldownSweep","size","progress","inverse","stroke","normalizedRadius","circumference","Math","PI","height","fill","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","cx","cy","r","events","abilityEvents","onEvent","auraEvents","EventHandler","eventTrigger","name","effectHandler","this","source","payload","map","e","type","category","includes","event","prepareEvents","transformEvents","forEach","addEventCategory","auraEventHandler","trigger","keybinds","Ability","initialState","updateFn","onExecute","eventHandler","state","updateState","ignoreGcd","charges","maxCharges","currentState","Object","keys","k","value","subState","k2","value2","now","Date","startTime","cooldown","duration","getCurrentState","cooldownTimer","setInterval","remaining","console","log","handleEvent","min","clearInterval","startCooldown","time","resource","resourceCost","costType","currentlyOnCooldown","displayName","cast","castTimer","setTimeout","endTime","channel","baseDuration","baseTicks","ticks","gcd","globalCooldown","pandemicTime","currentTicks","channelTimer","previousChannelRemaining","maximumTicks","floor","channelFrequency","round","tickResourceModifier","baseChannelTime","globalCooldownTimer","disabled","unusable","clearTimeout","constructEventHandler","InstantAbility","CastAbility","ChannelAbility","canExecute","casting","startCast","startChannel","ProgressAbility","abilityState","cooldownState","settings","globalCooldownStartTime","casttime","subscribe","unsubscribe","onClick","dispatch","show","reset","useState","setState","castStartTime","castEndTime","currentCharges","icon","keybind","key","keybindText","startTimeRef","useRef","cooldownRef","castStartTimeRef","castEndTimeRef","casttimeRef","castingRef","baseChannelTimeRef","ticksRef","chargesRef","maxChargesRef","undefined","globalCooldownRef","globalCooldownStartTimeRef","unusableRef","disabledRef","ability","useEffect","create","execute","notify","beginGlobalCooldown","getRemainingCooldown","ignoresGcd","remove","src","GlobalCooldown","start","triggerEvent","CastBar","direction","setCurrent","timeRef","durationRef","timer","AbilityBar","abilitySettings","abilities","haste","inVoidform","keyEventsPaused","hasteRef","inVoidformRef","spellQueueTimer","observers","setObservers","observersRef","hasReset","setHasReset","getAbilityCooldown","cdr","cooldowns","document","addEventListener","handleKeyPress","removeEventListener","o","preventDefault","abilityCooldownRemaining","globalCooldownRemaining","queueAbility","handleClick","calculateCooldown","triggerGlobalCooldown","gcdLength","observer","obs","filter","hasted","getAbilityCastTime","staticCastTime","find","disabledAbilities","showAbility","sort","k1","index","buildAbilityBar","onAbilityUpdate","Aura","maxDuration","stacks","children","LingeringInsanity","setMaxDuration","setDuration","stacksRef","initialize","afterVoidformEntry","hasteRetention","currentMaxDuration","ceil","voidformEntered","calculateDecayStacks","voidformHaste","hasteDecay","startStatic","decayRate","i","startDecay","startBuff","maxStacks","_","Buff","setting","Voidform","drainRate","drainStart","hasteStack","hasteStart","paused","active","setStacks","pausedRef","n","frequency","drain","interval","startingHaste","DamageOverTime","maxDurationRef","calculateNextTickTime","tickTime","whatIs","commonOptions","unit","resourceCast","resourceChannel","cost","castTime","channelTime","auraDuration","auraTicks","auraResource","abilityOptions","options","auraOptions","dots","buffs","AuraBar","auras","lingeringInsanity","dot","buff","Panel","panel","currentPanel","handleClose","header","panelClass","target","cleanup","ref","useCleanup","targetCount","rankTwo","extension","requireVoidform","requireNoVoidform","defaultAuraSettings","stats","startingInsanity","gainInsanity","enbaled","resourceGen","procChance","parseAbilitySettings","result","a","abilitySetting","reduce","obj","userSetting","Error","parseAbility","parseAuraSettings","auraSettings","aura","auraSetting","parseAura","formatAbilitySettingsForExport","formattedAbility","formatAbilityConfig","includeKeybinds","includeSpellOrder","exportSettings","currentSettings","formattedAbilitySettings","formattedAbilityConfig","combined","abilityConfig","effectSettings","Base64","encode","JSON","stringify","live","defaultAbilitySettings","defaultEffectSettings","bfa","legionENVoidlord","legionAntorus","ryeshot","yvaelle","Templates","onChange","selected","templates","t","ExportPanel","onImport","closePanel","exportData","setExportData","inputData","setInputData","setIncludeKeybinds","setIncludeSpellOrder","selectedTemplate","setSelectedTemplate","transform","template","data","rows","cols","placeholder","checked","parsedSettings","parse","decode","message","importSettings","queryParams","URLSearchParams","set","window","history","replaceState","title","toString","addTemplateToQueryString","error","id","readOnly","getElementById","select","execCommand","err","TimeTextOption","displayValue","setDisplayValue","step","parseFloat","NumberTextOption","parseInt","FloatTextOption","PercentTextOption","BooleanOption","defaultChecked","SelectOption","handleChange","htmlFor","Option","rest","SettingOption","onHelp","closeHelp","parentKey","onMouseEnter","pos","x","offsetLeft","y","offsetTop","onMouseLeave","v","WhatIs","text","xPos","yPos","left","top","CustomizeSection","showWhatIs","setShowWhatIs","setWhatIs","optionKey","option","newSetting","handleShowWhatIs","closeWhatIs","SettingsPanel","didReset","onAbilitySet","onAuraSet","changesPendingText","currentAbilities","setCurrentAbilities","currentAuras","setCurrentAuras","activeAbilitySection","setActiveAbilitySection","activeAuraSection","setActiveAuraSection","abilityChangesPending","setAbilityChangesPending","auraChangesPending","setAuraChangesPending","showAbilityOptions","settingKey","getAttribute","showAuraOptions","newAbilities","newAuras","AbilityIndex","count","Array","AbilityKeybindsPanel","onKeybind","setOrder","onToggle","defaultState","tooltip","setTooltip","setKeybindText","currentAbility","setCurrentAbility","length","abilityCount","currentAbilityRef","showToolTip","alt","hideToolTip","prepareToBindAbility","handleKeyDown","once","isKeydownKey","bindAbility","match","toUpperCase","formKeybindFromKey","visibility","onMouseOver","onMouseOut","AboutPanel","description","containerStyle","textAlign","marginBottom","smallText","fontSize","mediumText","WhatsNew","onClose","whatsNew","item","WhatsNewPanel","showWhatsNew","setShowWhatsNew","FormTextAreaField","label","placeHolder","required","FormTextField","email","Email","formatBugReportContent","body","headers","content","concat","join","sendBugReport","SecureToken","process","REACT_APP_SMTP_ACCESS_TOKEN","From","REACT_APP_SENDER_GMAIL_USER","To","REACT_APP_RECEIVER_GMAIL_USER","Subject","Body","send","submitBugReport","onSuccess","onFail","fields","titleField","contactField","BugReport","closeForm","setData","canSubmit","setCanSubmit","submitMessage","setSubmitMessage","onSubmit","setText","repeat","createPendingTextTimer","f","contact","FeatureRequest","Forms","pauseKeyEvents","showBugReport","setShowBugReport","showFeatureRequest","setShowFeatureRequest","handleFormClick","setShow","ArticleLink","url","to","Article","sections","s","DesignPhilosophyLink","DesignPhilosophy","RampLink","Ramp","action","newState","pandemicDuration","handleAuraPandemic","currentStacks","effect","defaultAbilities","effects","updateAbilitiesAfterResourceChange","abilitiesReducer","aurasReducer","effectReducer","globalEffects","auraEffects","abilityEffects","effectTargets","effectTriggered","chance","original","targets","effectEvents","effectTime","stack","effectEvent","toggle","currentChance","sum","mindblast","auraState","push","update","castingAbility","EffectHandler","sourceEffects","eventEffects","getGlobalEffects","addEventEffects","handleEffectTrigger","handleEffectRemove","handleEffectUpdate","handleEffectActivate","handleEffectDeactivate","effectNames","VoidformOptimizer","setPanel","setAbilitySettings","toggled","toggledAbilities","setAbilities","setAuraSettings","setEffectSettings","setKeyEventsPaused","setReset","abilityReset","setAbilityReset","setHaste","useReducer","rootReducer","stateRef","forAbility","abilityEffectHandler","forAura","auraEffectHandler","calculateHaste","location","search","get","templateSettings","handleImport","handlePanelHeaderClick","handlePanelClose","setAllAbilities","handleAbilitySet","handleAuraSet","handleEffectSet","importedAbilities","handleAuraReset","handleAbilityReset","handleEffectReset","merged","voidBoltOrEruption","abilityIndex","shift","currentIndex","newSettings","path","Boolean","hostname","dotenv","config","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5ddda3f9.chunk.js","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport \"./ResourceBar.css\"\n\nconst ResourceBar = (props) => {\n    const {max, current, voidform} = props\n\n    return (\n        <div className=\"progress-bar-container\">\n            <div className=\"progress-text\">{(current/max*100).toFixed(0)}</div> \n            <div className=\"progress-bar resource-bar\" \n                style={{\n                    width: `${(current/max*100).toFixed(2)}%`\n            }}>\n            </div>\n        </div>\n    )\n}\n\nexport default ResourceBar","import React, {useState, useEffect, useRef} from 'react';\n\nimport \"./CooldownSweep.css\"\n\nconst CooldownSweep = (props) => {\n\n    const {size, progress, inverse} = props\n\n    const radius = size * 2\n    const stroke = size * 2\n\n    const normalizedRadius = radius - (stroke/2)\n    const circumference = normalizedRadius * 2 * Math.PI\n\n    return (\n        <svg width={size} height={size}>\n            <circle\n                fill=\"transparent\"\n                strokeWidth={stroke}\n                strokeOpacity={.7}\n                strokeDasharray={circumference + \" \" + circumference}\n                strokeDashoffset={inverse ? ((!progress ? circumference : 0) + (progress || 0) * circumference) : (circumference + (progress || 0) * circumference)}\n                stroke={\"rgb(0,0,0)\"}\n                cx={size/2}\n                cy={size/2}\n                r={normalizedRadius} />\n        </svg>\n    )\n}\n\nexport default CooldownSweep","const events = {\n    \"SPELL\": [\n        \"ABILITY_CAST_SUCCESS\",\n        \"ABILITY_COOLDOWN_START\",\n        \"ABILITY_COOLDOWN_END\",\n        \"ABILITY_CAST_START\",\n        \"ABILITY_CHANNEL_START\",\n        \"ABILITY_CHANNEL_UPDATE\",\n        \"ABILITY_CHANNEL_END\",\n        \"ABILITY_CHARGE_UPDATE\"\n    ],\n    \"RESOURCE\": [\n        \"RESOURCE_UPDATE\"\n    ],\n    \"AURA\": [\n        \"VOIDFORM_START\",\n        \"VOIDFORM_UPDATE\",\n        \"VOIDFORM_END\",\n        \"INSANITY_DRAIN_PAUSE_START\",\n        \"INSANITY_DRAIN_PAUSE_END\",\n        \"LINGERING_INSANITY_START\",\n        \"LINGERING_INSANITY_UPDATE\",\n        \"LINGERING_INSANITY_END\",\n        \"AURA_START\",\n        \"AURA_BEGIN\",\n        \"AURA_END\",\n        \"AURA_REFRESH\",\n        \"AURA_STACK_UPDATE\"\n    ],\n    \"STAT\": [\n        \"HASTE_UPDATE\", \n        \"HASTE_RESET\"\n    ],\n    \"EFFECT\": [\n        \"EFFECT_ACTIVATE\",\n        \"EFFECT_DEACTIVATE\"\n    ]\n}\n\nexport default events","const abilityEvents = {\n    \"void-bolt\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\", \"DOT_EXTEND\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"]\n        }\n    },\n    \"mind-flay\": {\n        onEvent: {\n            \"COOLDOWN_START\": [],\n            \"COOLDOWN_END\": [],\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\"],\n            \"CHANNEL_UPDATE\": [\"ABILITY_CHANNEL_UPDATE\", \"RESOURCE_UPDATE\"],\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\"]\n        }\n    },\n    \"mind-sear\": {\n        onEvent: {\n            \"COOLDOWN_START\": [],\n            \"COOLDOWN_END\": [],\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\"],\n            \"CHANNEL_UPDATE\": [\"ABILITY_CHANNEL_UPDATE\", \"RESOURCE_UPDATE\"],\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\"]\n        }\n    },\n    \"void-eruption\": {\n        onEvent: {\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"VOIDFORM_START\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"],\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"]\n        }\n    },\n    \"mind-blast\": {\n        onEvent: {\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"],\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"]\n        }\n    },\n    \"shadow-word-death\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"]\n        }\n    },\n    \"void-torrent\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\", \"INSANITY_DRAIN_PAUSE_START\"],\n            \"CHANNEL_UPDATE\": [\"RESOURCE_UPDATE\"],\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\", \"INSANITY_DRAIN_PAUSE_END\"]\n        }\n    },\n    \"shadow-word-pain\": {\n        onEvent: {\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\n        }\n    },\n    \"vampiric-touch\": {\n        onEvent: {\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\n        }\n    },\n    \"devouring-plague\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\n        }\n    },\n    \"shadowfiend\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"]\n        }\n    },\n    \"power-infusion\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"]\n        }\n    },\n    \"fae-blessings\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"]\n        }\n    },\n    \"bloodlust\": {\n        onEvent: {\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\"],\n            \"CHARGES_UPDATE\": [\"ABILITY_CHARGE_UPDATE\"]\n        }\n    }\n}\n\nexport default abilityEvents","const auraEvents = {\n    \"voidform\": {\n        onEvent: {\n            \"AURA_START\": [\"AURA_BEGIN\", \"HASTE_UPDATE\"],\n            \"AURA_UPDATE\": [],\n            \"AURA_TIME_UPDATE\": [],\n            \"AURA_END\": [\"AURA_END\"]\n        }\n    },\n    \"lingeringInsanity\": {\n        onEvent: {\n            \"AURA_START\": [],\n            \"AURA_UPDATE\": [],\n            \"AURA_TIME_UPDATE\": [],\n            \"AURA_END\": []\n        }\n    },\n    \"shadow-word-pain\": {\n        onEvent: {\n            \"AURA_START\": [],\n            \"AURA_UPDATE\": [],\n            \"AURA_TIME_UPDATE\": [],\n            \"AURA_END\": []\n        }\n    },\n    \"vampiric-touch\": {\n        onEvent: {\n            \"AURA_START\": [],\n            \"AURA_UPDATE\": [],\n            \"AURA_TIME_UPDATE\": [],\n            \"AURA_END\": []\n        }\n    },\n    \"power-infusion\": {\n        onEvent: {\n            \"AURA_START\": [\"AURA_BEGIN\", \"HASTE_UPDATE\"],\n            \"AURA_END\": [\"AURA_END\", \"HASTE_RESET\"]\n        }\n    },\n    \"fae-blessings\": {\n        onEvent: {\n            \"AURA_START\": [\"AURA_BEGIN\"],\n            \"AURA_END\": [\"AURA_END\"]   \n        }\n    },\n    \"bloodlust\": {\n        onEvent: {\n            \"AURA_START\": [\"AURA_BEGIN\", \"HASTE_UPDATE\"],\n            \"AURA_END\": [\"AURA_END\", \"HASTE_RESET\"]\n        }\n    },\n    \"dark-thoughts\": {\n        onEvent: {\n            \"AURA_START\": [\"AURA_BEGIN\"],\n            \"AURA_END\": [\"AURA_END\"]\n        }\n    },\n}\n\nexport default auraEvents","import events from \"../lib/events\"\nimport abilityEvents from \"../lib/abilityEvents\"\nimport auraEvents from \"../lib/auraEvents\"\n\nclass EventHandler {\n    //add event prefixes\n\n    constructor(eventTrigger, events, name, effectHandler) {\n        this.eventTrigger = eventTrigger\n        this.events = events\n        this.effectHandler = effectHandler\n        this.source = name\n    }\n\n    prepareEvents(events, payload){\n        return events.map(e => ({type: e, payload}))\n    }\n\n    addEventCategory(type){\n        for(let category in events){\n            if(events[category].includes(type)) return category\n        }\n        return \"\"\n    }\n\n    handleEvent(event, payload) {\n        if(!this.events[event]) return\n        let events = this.prepareEvents(this.events[event], payload)\n        events = this.effectHandler.transformEvents(this.source, event, {events, payload})\n        events.forEach(e => this.eventTrigger({category: this.addEventCategory(e.type), ...e}))\n    }\n}\n\nexport const constructEventHandler = (name, trigger, effectHandler) => {\n    return new EventHandler(trigger, abilityEvents[name].onEvent, name, effectHandler)\n}\n\nexport const auraEventHandler = (name, trigger, effectHandler) => {\n    return new EventHandler(trigger, auraEvents[name].onEvent, name, effectHandler)\n}","export const interval = 20\nexport const lag = 50\nexport const spellQueueWindow = 250\nexport const keybinds = {\n    \"!\": \"S-1\",\n    \"@\": \"S-2\",\n    \"#\": \"S-3\",\n    \"$\": \"S-4\",\n    \"%\": \"S-5\",\n    \"^\": \"S-6\",\n    \"&\": \"S-7\",\n    \"*\": \"S-8\",\n    \"(\": \"S-9\",\n    \")\": \"S-0\",\n    \" \": \"SPC\"\n}","import {constructEventHandler} from \"./eventHandler\"\nimport {interval, lag} from \"../lib/constants\"\n\nclass Ability {\n    constructor(initialState, updateFn, onExecute, eventHandler) {\n        this.state = initialState\n        this.updateState = updateFn\n        this.onExecute = initialState.ignoreGcd ? () => {} : onExecute\n        this.eventHandler = eventHandler\n        this.updateState({\n            progress: 0,\n            charges: initialState.charges.maxCharges || 1\n        })       \n    }\n\n    static create(type, initialState, updateFn, onExecute, trigger, effectHandler) {\n        const eventHandler = constructEventHandler(initialState.name, trigger, effectHandler)\n        switch(type) {\n            case \"instant\":\n                return new InstantAbility(initialState, updateFn, onExecute, eventHandler)\n            case \"cast\":\n                return new CastAbility(initialState, updateFn, onExecute, eventHandler)\n            case \"channel\":\n                return new ChannelAbility(initialState, updateFn, onExecute, eventHandler)\n        }\n    }\n\n    getCurrentState() {\n        const currentState = {}\n        let state = this.state\n\n        Object.keys(state).forEach(k => {\n            let value = state[k]\n            if(typeof value !== \"object\") {\n                currentState[k] = value\n                return\n            }\n\n            const subState = {}\n            Object.keys(value).forEach(k2 => {\n                let value2 = value[k2]\n                if(value2 === \"undefined\") return\n                subState[k2] =  typeof value2 !== \"object\" ? value2 : value2.current\n            })\n            currentState[k] = subState\n        })\n\n        return currentState\n    }\n\n    getRemainingCooldown() {\n        const name = this.state.name\n        const now = Date.now()\n        const startTime = this.state.cooldown.startTime.current\n        const duration = startTime ? this.state.cooldown.duration.current : 0\n        const charges = this.state.charges.current.current\n        const remaining = charges == 0 ? ((startTime || now) + duration) - now : 0\n        return remaining\n    }\n\n    startCooldown() {\n        let state = this.getCurrentState()\n        const {name} = state\n\n        this.cooldownTimer = setInterval(() => {\n            let now = Date.now()\n            let duration = this.state.cooldown.duration.current\n            let startTime = this.state.cooldown.startTime.current || now\n            let charges = this.state.charges.current.current\n            let maxCharges = this.state.charges.maxCharges.current\n            let remaining = (startTime + duration) - now\n            console.log(maxCharges)\n\n            if(remaining <= interval) {\n                if(maxCharges) {\n                    this.eventHandler.handleEvent(\"CHARGES_UPDATE\", {\n                        name,\n                        charges: Math.min(charges + 1, maxCharges)\n                    })\n                }\n                clearInterval(this.cooldownTimer)\n\n                if(maxCharges && charges < maxCharges - 1) {\n                    this.startCooldown()\n                    return\n                }\n\n                this.eventHandler.handleEvent(\"COOLDOWN_END\", {name})\n\n                this.updateState(state => {\n                    return {...state, progress: 0}\n                })\n\n                return\n            }\n            this.updateState(state => {\n                return {...state, progress: remaining/duration}\n            })\n\n        }, interval)\n\n        this.eventHandler.handleEvent(\"COOLDOWN_START\", {\n            name,\n            time: Date.now()\n        })\n    }\n\n    cast() {\n        let state = this.getCurrentState()\n        const {name, resource, resourceCost, costType} = state\n\n        this.eventHandler.handleEvent(\"CAST_SUCCESS\", {\n            name,\n            resource,\n            resourceCost,\n            costType,\n            time: Date.now()\n        })\n\n        let cooldown = this.state.cooldown.duration.current\n        let currentlyOnCooldown = this.state.cooldown.startTime.current\n        let charges = this.state.charges.current.current\n\n        if(cooldown) {\n            this.eventHandler.handleEvent(\"CHARGES_UPDATE\", {\n                name,\n                charges: charges-1\n            })\n            if(currentlyOnCooldown) return               \n            this.startCooldown()\n        }\n    }\n\n    startCast() {\n        let state = this.getCurrentState()\n        const {name, displayName} = state\n        const {duration} = state.cast\n\n        if(duration) {\n            this.eventHandler.handleEvent(\"CAST_START\", {\n                name,\n                displayName,\n                duration,\n                time: Date.now()\n            })\n        }\n\n        this.castTimer = setTimeout(() => this.cast(), duration)\n    }\n\n    startChannel() {\n        let state = this.getCurrentState()\n        const {startTime, endTime, duration} = state.cast\n        const {baseDuration, baseTicks, ticks} = state.channel\n        const {name, displayName, resource} = state\n        const gcd = state.globalCooldown.duration\n\n        let now = Date.now()\n        let pandemicTime = 0\n        let currentTicks = baseTicks\n\n        if(startTime) {\n            clearInterval(this.channelTimer)\n            const previousChannelTime = endTime - startTime\n            const previousChannelRemaining = previousChannelTime - (now - startTime)\n            const maximumTicks = Math.floor(baseTicks * ((baseDuration - gcd)/baseDuration))      \n            pandemicTime = Math.min(previousChannelRemaining, baseDuration * .3)\n\n            const remainingTicks = Math.min(ticks, maximumTicks)\n\n            currentTicks += remainingTicks\n        }\n\n        let channelFrequency = Math.round((duration+pandemicTime)/currentTicks)\n\n        this.channelTimer = setInterval(() => {\n\n            let now = Date.now()\n            let endTime = this.state.cast.endTime.current\n            let lastTick = this.state.channel.ticks.current === 1\n            let tickResourceModifier = lastTick ? (pandemicTime && .3 || 1) : 1\n\n            //another cast has stopped this channel, don't update\n            if(!endTime) {\n                clearInterval(this.channelTimer)\n\n                this.eventHandler.handleEvent(\"CHANNEL_END\", {\n                    name\n                })\n                return\n            }\n\n            this.eventHandler.handleEvent(\"CHANNEL_UPDATE\", {\n                resource: (resource/baseTicks) * tickResourceModifier,\n                name\n            })\n\n            if(now >= endTime) {\n                clearInterval(this.channelTimer)\n\n                this.eventHandler.handleEvent(\"CHANNEL_END\", {\n                    name\n                })\n                return\n            }\n\n        }, channelFrequency)\n\n        this.eventHandler.handleEvent(\"CHANNEL_START\", {\n            name,\n            displayName,\n            duration: duration + pandemicTime,\n            time: now,\n            baseChannelTime: duration,\n            currentTicks\n        })\n    }\n\n    beginGlobalCooldown() {\n        let state = this.getCurrentState()\n        const {duration, startTime} = state.globalCooldown\n        const {current, maxCharges} = state.charges\n\n        if(state.ignoreGcd) return\n\n        if(state.cooldown.startTime) {\n            if(maxCharges && current < maxCharges - 1) return\n            let remaining = (state.cooldown.startTime + state.cooldown.duration) - startTime\n            if(remaining > duration) return\n        }\n\n        this.globalCooldownTimer = setInterval(() => {\n            let now = Date.now()\n            let remaining = (startTime + duration) - now\n            if(remaining <= interval) {\n                clearInterval(this.globalCooldownTimer)\n                this.updateState(state => {\n                    return {...state, progress: 0}\n                })\n                             \n                return\n            }\n\n            if(this.state.cooldown.startTime.current) return\n            this.updateState(state => {\n                return {...state, progress: remaining/duration}\n            })\n        }, interval)\n    }\n\n    canExecute() {\n        if(this.state.disabled.current) return false\n        if(this.state.unusable.current) return false\n        return true\n    }\n\n    remove() {\n        clearInterval(this.cooldownTimer)\n        clearInterval(this.globalCooldownTimer)\n        clearInterval(this.channelTimer)\n        clearTimeout(this.castTimer)\n    }\n}\n\nclass InstantAbility extends Ability {\n\n    execute() {\n        if(!this.canExecute()) return\n        if(this.state.cast.casting.current) return\n        let state = this.getCurrentState()\n        const {name, resource, resourceCost} = state\n        const {startTime} = state.cooldown\n        const {maxCharges, current} = state.charges\n\n        if(startTime && current === 0) return      \n\n        this.onExecute()\n        this.cast()\n        //if(maxCharges && current < maxCharges) return\n        //this.startCooldown()\n    }\n}\n\nclass CastAbility extends Ability {\n\n    execute() {\n        if(!this.canExecute()) return\n        if(this.state.cast.casting.current) return\n        let state = this.getCurrentState()\n        const {startTime} = state.cast\n        const {current} = state.charges\n        if(startTime || current === 0) return\n        this.startCast()\n        this.onExecute()\n    }\n}\n\nclass ChannelAbility extends Ability {\n\n    execute() {\n        if(!this.canExecute()) return\n        if(this.state.cast.casting.current) return\n        let state = this.getCurrentState()\n        const {duration, startTime} = state.cooldown\n\n        if(startTime) return\n        this.startChannel()\n        if(duration) {\n            this.startCooldown()\n        }\n        this.onExecute()\n    }\n}\n\nexport default Ability","import React, {useState, useEffect, useRef} from 'react';\nimport \"./ProgressAbility.css\"\nimport CooldownSweep from \"./CooldownSweep\"\nimport Ability from \"../utils/ability\"\n\nconst ProgressAbility = (props) => {\n\n    const {name, abilityState, cooldownState, settings, cooldown, globalCooldown, globalCooldownStartTime, \n        casttime, casting, subscribe, unsubscribe, onExecute, onClick, dispatch, effectHandler, show, reset} = props\n\n    const size = 50\n\n    const [state, setState] = useState({})\n\n    const {type, resource, resourceCost, costType, charges, ticks, ignoreGcd} = settings\n    const {startTime, castStartTime, castEndTime, baseChannelTime, currentTicks, currentCharges} = cooldownState\n    const {unusable, displayName, icon, keybind} = abilityState\n    const {key, keybindText} = keybind\n\n    //cooldown states\n    const startTimeRef = useRef(startTime)\n    const cooldownRef = useRef(cooldown)\n\n    startTimeRef.current = startTime\n    cooldownRef.current = cooldown\n\n    //cast states\n    const castStartTimeRef = useRef(castStartTime)\n    const castEndTimeRef = useRef(castEndTime)\n    const casttimeRef = useRef(casttime)\n    const castingRef = useRef(casting)\n\n    castStartTimeRef.current = castStartTime\n    castEndTimeRef.current = castEndTime\n    casttimeRef.current = casttime\n    castingRef.current = casting\n\n    //channel states\n    const baseChannelTimeRef = useRef(baseChannelTime)\n    const ticksRef = useRef(currentTicks)\n\n    baseChannelTimeRef.current = baseChannelTime\n    ticksRef.current = currentTicks\n\n    //charge states\n    const chargesRef = useRef(charges || 1)\n    const maxChargesRef = useRef(charges || 1)\n    chargesRef.current = currentCharges !== undefined ? currentCharges : charges\n    maxChargesRef.current = charges\n\n    //gcd states\n    const globalCooldownRef = useRef(globalCooldown)\n    const globalCooldownStartTimeRef = useRef(globalCooldownStartTime)\n\n    globalCooldownRef.current = globalCooldown\n    globalCooldownStartTimeRef.current = globalCooldownStartTime\n\n    //other states\n    const unusableRef = useRef(unusable)\n    unusableRef.current = unusable\n\n    const disabledRef = useRef(!show)\n    disabledRef.current = !show\n\n    const ability = useRef()\n\n    useEffect(() => {\n        const initialState = {\n            name,\n            displayName,\n            resource,\n            resourceCost,\n            costType,\n            unusable: unusableRef,\n            disabled: disabledRef,\n            ignoreGcd,\n            cooldown: {\n                duration: cooldownRef,\n                startTime: startTimeRef\n            },\n            cast: {\n                duration: casttimeRef,\n                startTime: castStartTimeRef,\n                endTime: castEndTimeRef,\n                casting: castingRef\n            },\n            channel: {\n                baseDuration: baseChannelTimeRef,\n                baseTicks: ticks,\n                ticks: ticksRef\n            },\n            charges: {\n                maxCharges: maxChargesRef,\n                current: chargesRef\n            },\n            globalCooldown: {\n                duration: globalCooldownRef,\n                startTime: globalCooldownStartTimeRef\n            }\n        }\n\n        ability.current = Ability.create(type, initialState, setState, onExecute, dispatch, effectHandler)\n        \n        subscribe({\n            source: name,\n            keybind: key,\n            execute: () => ability.current.execute(),\n            notify: () => ability.current.beginGlobalCooldown(),\n            getRemainingCooldown: () => ability.current.getRemainingCooldown(),\n            canExecute: () => ability.current.canExecute(),\n            ignoresGcd: !!ignoreGcd\n        })\n\n        return () => {\n            ability.current.remove()\n            unsubscribe(name)\n        }\n    }, [key, reset])\n\n    const handleClick = () => {\n        onClick(name, () => ability.current.getRemainingCooldown(), () => ability.current.execute(), () => ability.current.canExecute(), !!ignoreGcd)\n    }\n\n    return (\n        show ? <div className=\"progress-ability-container\">\n            <div className=\"progress-ability hover-pointer\" onClick={handleClick}>\n                <img\n                    className={!unusable && ((chargesRef.current > 0 && charges) || (!startTimeRef.current)) ? \"colored\" : \"desaturated\"}\n                    src={icon}\n                    width={size}\n                    height={size}\n                />\n                <div className=\"charge-text\">{chargesRef.current > 1 ? chargesRef.current : \"\"}</div>\n                {startTimeRef.current || globalCooldownRef.current ? \n                <CooldownSweep size={size} progress={state.progress}/>\n                : null}\n            </div>\n            <div>{keybindText}</div>\n        </div>\n        : null\n    )\n}\n\nexport default ProgressAbility;","const GlobalCooldown = {\n\n    start: (duration, triggerEvent) => {\n        triggerEvent({\n            type: \"GLOBAL_COOLDOWN_START\",\n            payload: {\n                gcd: duration,\n                time: Date.now()\n\n            }\n        })\n\n        setTimeout(() => {\n            triggerEvent({\n                type: \"GLOBAL_COOLDOWN_END\"\n            })    \n        }, duration);\n    }\n}\n\nexport default GlobalCooldown","import React, {useState, useEffect, useRef} from 'react';\nimport \"./CastBar.css\"\n\nconst CastBar = (props) => {\n\n    const {time, name, displayName, duration, direction} = props\n\n    const sec = 1000\n    const interval = 50\n\n    const [current, setCurrent] = useState(0)\n\n    const timeRef = useRef(time)\n    const durationRef = useRef(time)\n\n    timeRef.current = time\n    durationRef.current = duration\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            let now = Date.now()\n            setCurrent(current => now - timeRef.current)\n        }, interval)\n\n        return () => {\n            clearInterval(timer)\n            setCurrent(current => 0)\n        }\n    }, [name])\n\n    return (\n        <div className=\"progress-bar-container\">\n            <div className=\"cast-bar-text-container\">\n                <div className=\"progress-text cast-bar-text\">{displayName}</div>\n                <div className=\"progress-text cast-bar-text\">{direction \n                ? `${(current/sec).toFixed(1)}/${((duration/sec).toFixed(1))}`\n                : `${((durationRef.current-current)/sec).toFixed(1)}/${((durationRef.current/sec).toFixed(1))}`}sec\n                </div> \n            </div>\n            <div className=\"progress-bar cast-bar\" \n                style={{\n                    width: direction \n                    ? `${(current/durationRef.current*100).toFixed(2)}%`\n                    : `${((durationRef.current-current)/durationRef.current*100).toFixed(2)}%`\n            }}>\n            </div>\n        </div>\n    )\n}\n\nexport default CastBar","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport ProgressAbility from \"./ProgressAbility\"\nimport GlobalCooldown from \"./GlobalCooldown\"\nimport CastBar from \"./CastBar\"\nimport {spellQueueWindow} from \"../lib/constants\"\nimport \"./AbilityBar.css\"\n\nconst AbilityBar = (props) => {\n\n    const gcdLength = 1500\n    const {state, abilitySettings, abilities, effectHandler, haste, inVoidform, dispatch, keyEventsPaused, reset} = props\n\n    const hasteRef = useRef(haste)\n    hasteRef.current = haste\n\n    const inVoidformRef = useRef(inVoidform)\n    inVoidformRef.current = inVoidform \n\n    const spellQueueTimer = useRef()\n\n    const [observers, setObservers] = useState([])\n\n    const observersRef = useRef(observers)\n    observersRef.current = observers\n\n    const [hasReset, setHasReset] = useState(reset)\n\n    useEffect(() => {\n        dispatch({\n            type: \"RESET\"\n        })\n\n        return () => setHasReset(reset)\n    }, [reset])\n\n    useEffect(() => {\n        const name = \"mind-blast\"\n        const ability = abilitySettings[name]\n        const duration = getAbilityCooldown(name)\n        let cdr = ability.cdr * (inVoidform && -1 || 1)\n        ability.cooldown += cdr\n\n        const startTime = state.cooldowns[name].startTime\n        if(!startTime || hasReset === reset) return\n        cdr = getAbilityCooldown(name) - duration\n        const now = Date.now()\n        const remaining = (startTime + duration) - now\n        const remainingPercent = remaining/duration\n        const remainingCdr = remainingPercent * cdr\n\n        dispatch({\n            type: \"ABILITY_COOLDOWN_START\",\n            payload: {\n                name,\n                time: startTime + remainingCdr - cdr\n            }\n        })\n\n    }, [inVoidform])\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeyPress)\n        document.addEventListener(\"keypress\", handleKeyPress)\n\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyPress)\n            document.removeEventListener(\"keypress\", handleKeyPress)\n        }\n    }, [keyEventsPaused])\n\n    const globalCooldownRef = useRef(state.globalCooldown)\n    globalCooldownRef.current = state.globalCooldown\n\n    const globalCooldownStartTimeRef = useRef(state.globalCooldownStartTime)\n    globalCooldownStartTimeRef.current = state.globalCooldownStartTime\n\n    const handleKeyPress = (e) => {\n        if(keyEventsPaused) return\n\n        const now = Date.now()\n\n        observersRef.current.forEach(o => {\n            if(o.keybind === e.key) {\n                e.preventDefault()\n                const abilityCooldownRemaining = o.getRemainingCooldown()\n                const globalCooldownRemaining = globalCooldownRef.current ? globalCooldownRef.current - (now - globalCooldownStartTimeRef.current) : 0\n                const remaining = o.ignoresGcd ? 0 : Math.max(abilityCooldownRemaining, globalCooldownRemaining)\n\n                if(remaining > spellQueueWindow) return\n                if(!o.canExecute()) return\n\n                queueAbility(o.source, o.execute, remaining + 15)\n            }\n        })\n    }\n\n    const handleClick = (name, getRemainingCooldown, execute, canExecute, ignoresGcd) => {\n        const now = Date.now()\n        const abilityCooldownRemaining = getRemainingCooldown()\n        const globalCooldownRemaining = globalCooldownRef.current ? globalCooldownRef.current - (now - globalCooldownStartTimeRef.current) : 0\n        const remaining = ignoresGcd ? 0 : Math.max(abilityCooldownRemaining, globalCooldownRemaining)\n        if(remaining > spellQueueWindow) return\n        if(!canExecute()) return\n\n        queueAbility(name, execute, remaining + 15)\n    }\n\n    const calculateCooldown = (cooldown) => {\n        return cooldown/hasteRef.current\n    }\n\n    const triggerGlobalCooldown = () => {\n        let gcd = Math.max(calculateCooldown(gcdLength), gcdLength/2)\n\n        GlobalCooldown.start(gcd, dispatch)\n\n        setTimeout(() => {\n            observersRef.current.forEach(o => o.notify())\n        }, 0)\n    }\n\n    const subscribe = (observer) => {\n        setObservers(o => [...o, observer])\n    }\n\n    const unsubscribe = (source) => {\n        setObservers(obs => obs.filter(o => o.source !== source))\n    }\n\n    const getAbilityCooldown = (k) => {\n        const ability = abilitySettings[k]\n        const cooldown = ability.cooldown\n\n        return ability.hasted ? calculateCooldown(cooldown) : cooldown\n    }\n\n    const getAbilityCastTime = (k) => {\n        const ability = abilitySettings[k]\n        const casttime = ability.casttime\n\n        return ability.staticCastTime ? casttime : calculateCooldown(casttime)\n    }\n\n    const queueAbility = (name, execute, remaining) => {\n\n        clearTimeout(spellQueueTimer.current)\n\n        spellQueueTimer.current = setTimeout(() => {\n            if(!observersRef.current.find(o => o.source === name)) return\n            execute()\n        }, remaining)\n    }\n\n    const makeGroupChunks = (size) => (chunks, curr, i) => {\n        const index = Math.floor(i/size)\n        chunks[index] = [...chunks[index] || [], curr]\n        return chunks\n    }\n\n    const disabledAbilities = (k) => {\n        if(!abilities[k]) return false\n        if(abilities[k].disabled) return false\n        return true\n    }\n\n    const showAbility = (k) => {\n        if(k === \"void-bolt\" && !inVoidformRef.current) return false\n        if(k === \"void-eruption\" && inVoidformRef.current) return false\n\n        return true\n    }\n\n    const buildAbilityBar = (abilities) => {\n        return Object.keys(abilities)\n            .filter(disabledAbilities)\n            .sort((k1, k2) => abilities[k1].index - abilities[k2].index)\n            //.reduce(makeGroupChunks(8), [])\n    }\n\n    return (\n    <div className=\"ability-bar-container\">\n        <div className=\"progress-bar-container\">\n            {state.casting ? <CastBar {...state.casting}/> : null}\n        </div>\n        <div className=\"ability-bar\">\n            {buildAbilityBar(state.cooldowns)\n            .map(k => {\n                return <ProgressAbility\n                    name={k}\n                    key={`ability-${k}`}\n                    abilityState={abilities[k]}\n                    cooldownState={state.cooldowns[k]}\n                    settings={abilitySettings[k]}\n                    cooldown={getAbilityCooldown(k)}\n                    globalCooldown={state.globalCooldown}\n                    globalCooldownStartTime={state.globalCooldownStartTime}\n                    casttime={getAbilityCastTime(k)}\n                    casting={state.casting && state.casting.time && state.casting.direction}\n                    subscribe={subscribe}\n                    unsubscribe={unsubscribe}\n                    onExecute={triggerGlobalCooldown}\n                    onAbilityUpdate={dispatch}\n                    onClick={handleClick}\n                    dispatch={dispatch}\n                    effectHandler={effectHandler}\n                    show={showAbility(k)}\n                    reset={reset}\n                    />\n                })}\n        </div>        \n    </div>\n    )\n}\n\nexport default AbilityBar","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport CooldownSweep from \"../CooldownSweep\"\nimport \"./Aura.css\"\n\nconst Aura = (props) => {\n\n    const {icon, displayName, duration, maxDuration, stacks} = props\n\n    const size = 30\n    const progress = duration && ((maxDuration-duration)/maxDuration)\n\n    return (\n        <div className=\"aura\">\n            <img\n                src={icon}\n                width={size}\n                height={size}\n            >\n            </img>\n            <div className=\"aura-text\">{stacks > 0 ? stacks : \"\"}</div>\n            {duration ? <CooldownSweep size={30} progress={progress} inverse={true}/> : null}\n            {props.children}\n        </div>\n    )\n}\n\nexport default Aura","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport Aura from \"./Aura\"\n\nconst LingeringInsanity = (props) => {\n\n    const { type, startTime, haste, stacks, inVoidform, triggerEvent, ...settings} = props\n\n    const interval = 100\n    const name = \"lingeringInsanity\"\n    const displayName = \"Lingering Insanity\"\n    const icon = \"images/lingering-insanity.jpg\"\n    const defaultMaxDuration = 60000\n\n    const [maxDuration, setMaxDuration] = useState(defaultMaxDuration)\n    const [duration, setDuration] = useState(0)\n\n    const stacksRef = useRef(stacks)\n    stacksRef.current = stacks\n\n    const inVoidformRef = useRef(inVoidform)\n    inVoidformRef.current = inVoidform\n\n    const startTimeRef = useRef(startTime)\n    startTimeRef.current = startTime\n\n    const hasteRef = useRef(haste)\n    hasteRef.current = haste\n\n    const initialize = (afterVoidformEntry, hasteRetention, stacks, duration) => {\n        let currentMaxDuration = afterVoidformEntry ? defaultMaxDuration : duration\n        let voidformEntered = false\n\n        setMaxDuration(maxDuration => currentMaxDuration)\n\n        triggerEvent({\n            category: \"AURA\",\n            type: \"LINGERING_INSANITY_START\",\n            payload: {\n                haste: hasteRef.current * hasteRetention,\n                stacks: Math.ceil(stacks * hasteRetention)\n            }\n        })\n\n        return {\n            currentMaxDuration,\n            voidformEntered\n        }\n\n    }\n\n    const startStatic = () => {\n\n        const { duration, afterVoidformEntry, hasteRetention } = settings\n        \n        let state = initialize(afterVoidformEntry, hasteRetention, stacksRef.current, duration)\n\n        const timer = setInterval(() => {\n\n            const now = Date.now()\n\n            //just left voidform\n            if(state.voidformEntered && !inVoidformRef.current) {\n                state = initialize(afterVoidformEntry, hasteRetention, stacksRef.current, duration)\n\n                return\n            }\n\n            //timed out\n            if(now >= startTimeRef.current + state.currentMaxDuration) {\n                clearInterval(timer)\n                triggerEvent({\n                    category: \"AURA\",\n                    type: \"LINGERING_INSANITY_END\"\n                })\n\n                return\n            }\n\n            if(!state.voidformEntered && inVoidformRef.current) \n            {\n                state.voidformEntered = true\n\n                if(afterVoidformEntry) {\n                    triggerEvent({\n                        category: \"AURA\",\n                        type: \"AURA_REFRESH\",\n                        payload: {\n                            name,\n                            time: now\n                        }\n                    })\n                    setMaxDuration(maxDuration => duration)\n                    state.currentMaxDuration = duration\n                    setDuration(duration => 0)\n                    return\n                }\n           }            \n\n            setDuration(duration => now - startTimeRef.current)\n\n        }, interval)\n\n        return timer\n    }\n\n    const calculateDecayStacks = (voidformHaste, hasteDecay) => {\n        return Math.ceil(voidformHaste/hasteDecay)\n    }\n\n    const startDecay = () => {\n\n        const { decayRate, hasteDecay } = settings\n\n        let i = 0\n\n        let state = initialize(true, 1, calculateDecayStacks(hasteRef.current, hasteDecay))\n\n        const timer = setInterval(() => {\n\n            i += interval\n\n            const now = Date.now()\n\n            if(state.voidformEntered && !inVoidformRef.current) {\n                state = initialize(true, 1, calculateDecayStacks(hasteRef.current, hasteDecay))\n                i = 0\n\n                return\n            }\n\n            if(stacksRef.current <= 0) {\n                clearInterval(timer)\n                triggerEvent({\n                    category: \"AURA\",\n                    type: \"LINGERING_INSANITY_END\"\n                })\n\n                return\n            }\n\n            //lose stack\n            if(i % decayRate === 0) {\n                triggerEvent({\n                    category: \"AURA\",\n                    type: \"LINGERING_INSANITY_UPDATE\",\n                    payload: hasteDecay * -1\n                })\n            }\n\n            if(!state.voidformEntered && inVoidformRef.current) state.voidformEntered = true\n\n            setDuration(duration => now - startTimeRef.current)\n\n        }, interval)\n\n        return timer\n    }\n\n    useEffect(() => {\n        let timer\n\n        switch(type) {\n            case \"static\":\n                timer = startStatic()\n                break\n            case \"decay\":\n                timer = startDecay()\n                break\n        }\n\n        return () => clearInterval(timer)\n\n    }, [])\n\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={maxDuration} stacks={stacks}/>\n}\n\nexport default LingeringInsanity","import React, {useState, useEffect, useRef} from 'react';\nimport Aura from \"./Aura\"\nimport {auraEventHandler} from \"../../utils/eventHandler\"\n\nconst interval = 100\n\nconst startBuff = (setDuration, startTimeRef, baseDuration, stacks, eventHandler, payload) => {\n    const {name, maxStacks} = payload\n    const timer = setInterval(() => {\n        const now = Date.now()\n        if(now >= startTimeRef.current + baseDuration || (maxStacks && stacks.current <= 0)) {\n            clearInterval(timer)\n            eventHandler.handleEvent(\"AURA_END\", {\n                name,\n                source: name\n            })\n            return\n        }\n        setDuration(_ => now - startTimeRef.current)\n    }, interval)\n\n    return timer\n}\n\nconst Buff = (props) => {\n    const {icon, name, displayName, startTime, stacks, setting, triggerEvent, effectHandler} = props\n    const {baseDuration, maxStacks} = setting\n    const [duration, setDuration] = useState(0)\n    const startTimeRef = useRef(startTime)\n    startTimeRef.current = startTime\n    const stacksRef = useRef(stacks)\n    stacksRef.current = stacks\n    useEffect(() => {\n        const eventHandler = auraEventHandler(name, triggerEvent, effectHandler)\n        const start = Date.now()\n        eventHandler.handleEvent(\"AURA_START\", {\n            name,\n            source: name,\n            duration: baseDuration,\n            time: start,\n            ...setting\n        })\n\n        const timer = startBuff(setDuration, startTimeRef, baseDuration, stacksRef, eventHandler, {name, maxStacks})\n\n        return () => clearInterval(timer)\n    }, [])\n\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={baseDuration} stacks={stacks} />\n}\n\nexport default Buff\nexport {startBuff}","import React, { useState, useEffect, useRef } from 'react';\nimport Aura from \"./Aura\"\nimport {startBuff} from \"./Buff\"\nimport {auraEventHandler} from \"../../utils/eventHandler\"\n\nconst Voidform = (props) => {\n\n    const { type, startTime, drainRate, drainStart, hasteStack, hasteStart, maxStacks, baseDuration, paused, active, triggerEvent, effectHandler } = props\n    const interval = 100\n    const displayName = \"Voidform\"\n    const name = \"voidform\"\n    const icon = \"images/voidform.jpg\"\n\n    const [stacks, setStacks] = useState(type === \"insanity\" ? 1 : 0)\n    const [duration, setDuration] = useState(0)\n\n    const pausedRef = useRef(paused)\n    pausedRef.current = paused\n\n    const startTimeRef = useRef(startTime)\n    startTimeRef.current = startTime\n\n    const start = () => {\n        let n = 0\n        let frequency = Math.round(1000 / interval)\n\n        let i = 0\n\n        triggerEvent({\n            type: \"HASTE_UPDATE\",\n            payload: {\n                source: name,\n                haste: hasteStart + hasteStack\n            }\n        })\n\n        const timer = setInterval(() => {\n            let sec = interval / 1000\n            let drain = (drainStart + drainRate * n) * sec\n\n            i++\n\n            if (!pausedRef.current) {\n                n += sec\n                triggerEvent({\n                    type: \"RESOURCE_UPDATE\",\n                    payload: {\n                        resource: drain * -1\n                    }\n                })\n            }\n\n            if (i % frequency === 0 && (!maxStacks || i / frequency < maxStacks)) {\n                //gain a stack of vf\n                triggerEvent({\n                    category: \"AURA\",\n                    type: \"VOIDFORM_UPDATE\",\n                    payload: hasteStack\n                })\n                setStacks(stacks => stacks + 1)\n            }\n\n        }, interval)\n\n        return timer\n    }\n\n    useEffect(() => {\n        let timer\n\n        switch(type) {\n            case \"insanity\":\n                timer = start()\n                break\n            case \"static\":\n                const time = Date.now()\n                const eventHandler = auraEventHandler(name, triggerEvent, effectHandler)\n\n                eventHandler.handleEvent(\"AURA_START\", {\n                    name,\n                    source: name,\n                    duration: baseDuration,\n                    time,\n                    haste: hasteStart\n                })\n\n                timer = startBuff(setDuration, startTimeRef, baseDuration, 0, eventHandler, {name})\n            default:\n        }\n\n        return () => {\n            clearInterval(timer)\n\n            triggerEvent({\n                type: \"VOIDFORM_END\",\n                payload: {\n                    time: Date.now(),\n                    startingHaste: hasteStart\n                }\n            })\n\n            triggerEvent({\n                type: \"RESOURCE_UPDATE\",\n                payload: {\n                    resource: 0\n                }\n            })\n        }\n    }, [active])\n\n    return <Aura icon={icon} displayName={displayName} stacks={stacks} duration={duration} maxDuration={baseDuration} />\n}\n\nexport default Voidform","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport Aura from \"./Aura\"\n\nconst DamageOverTime = (props) => {\n\n    const {icon, name, displayName, startTime, baseDuration, maxDuration, ticks, resource, haste, hasted, triggerEvent} = props\n\n    const interval = 100\n\n    const [duration, setDuration] = useState(0)\n\n    const startTimeRef = useRef(startTime)\n    startTimeRef.current = startTime\n\n    const maxDurationRef = useRef(maxDuration)\n    maxDurationRef.current = maxDuration\n\n    const hasteRef = useRef(haste)\n    hasteRef.current = haste\n\n    const calculateNextTickTime = (now) => {\n        //console.log(\"Haste: \" + hasteRef.current)\n        return (baseDuration/ticks)/(hasted && hasteRef.current || 1) + now\n\n    }\n\n    useEffect(() => {\n        let start = Date.now()\n        let tickTime = calculateNextTickTime(start)\n\n        triggerEvent({\n            category: \"AURA\",\n            type: \"AURA_BEGIN\",\n            payload: {\n                name,\n                duration: baseDuration,\n                time: start,\n                tickTime\n            }\n        })\n\n        const timer = setInterval(() => {\n\n            const now = Date.now()\n\n            if(now >= startTimeRef.current + maxDurationRef.current) {\n                clearInterval(timer)\n                triggerEvent({\n                    type: \"RESOURCE_UPDATE\",\n                    payload: {\n                        resource\n                    }\n                })\n                triggerEvent({\n                    category: \"AURA\",\n                    type: \"AURA_END\",\n                    payload: {\n                        name\n                    }\n                })\n                return\n            }\n\n            if(now >= tickTime) {\n                const endTime = startTimeRef.current + maxDurationRef.current\n                tickTime = Math.min(calculateNextTickTime(now), endTime)\n\n                triggerEvent({\n                    type: \"RESOURCE_UPDATE\",\n                    payload: {\n                        resource\n                    }\n                })\n                triggerEvent({\n                    type: \"AURA_TICK\",\n                    payload: {\n                        name,\n                        tickTime\n                    }\n                })\n            }\n\n            setDuration(duration => now - startTimeRef.current)\n\n        }, interval)\n\n        return () => clearInterval(timer)\n    }, [])\n\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={maxDurationRef.current}/>\n}\n\nexport default DamageOverTime","const whatIs = {\n    cooldown: \"The amount of time, in seconds, it takes for an ability to be able to be recast.\",\n    charges: \"The number of times an ability may be cast while it is on cooldown.\",\n    abilityHasted: \"An ability that is hasted has its cooldown reduced by haste.\",\n    auraHasted: \"An aura that is hasted has its period reduced by haste.\",\n    resourceCast: \"The amount of resource an ability will generate upon a successful cast.\",\n    resourceChannel: \"The amount of resource an ability will generate over its complete channel period.\",\n    resourceAura: \"The amount of resource an aura will generate every time its effect triggers.\",\n    resourceGeneration: \"Increases the amount of resource generated from abilities while an aura is active.\",\n    cost: \"The amount of resource required to cast an ability. Casting the ability will spend the resource cost.\",\n    resourceCostType: \"Resource cost has two types.\\nStatic - A static amount of resource is required to cast the ability.\\nDump - Casting the ability spends all resource up to the amount specified by its cost.\",\n    castTime: \"The amount of time, in seconds, it takes for an ability to be executed.\",\n    channelTime: \"The amount of time, in seconds, it takes for an ability's channel to complete.\",\n    ticks: \"The number of times a channel generates resources over its duration.\",\n    mindSearTargetCount: \"The number of targets Mind Sear will hit. Mind Sear generates more resource per additional target.\",\n    voidBoltRankTwo: \"An extra rank coming to Void Bolt in Shadowlands. It allows Void Bolt to be cast during Mind Flay, without canceling it.\",\n    voidBoltExtension: \"The amount of time, in seconds, that Shadow Word: Pain and Vampiric Touch are extended when Void Bolt is cast.\",\n    voidformThreshold: \"The amount of Insanity that is required to cast Void Eruption out of Voidform.\",\n    voidformCooldownReduction: \"The amount of time, in seconds, that Mind Blast's cooldown is reduced while in Voidform.\",\n    requireVoidform: \"Must be in Voidform in order to cast the ability.\",\n    requireNoVoidform: \"Must be out of Voidform in order to cast the ability.\",\n    haste: \"Increases the rate at which spells cast and the global cooldown, and certain spell cooldowns, regenerate.\",\n    startingInsanity: \"The amount of Insanity provided out of combat.\",\n    voidformType: \"Voidform has two types.\\nInsanity - Insanity will drain and the aura will end when insanity reaches zero.\\nStatic - The aura has a fixed duration.\",\n    voidformStartingDrain: \"The starting amount of Insanity being drained every second while in Voidform.\",\n    voidformDrainRate: \"The amount of increasing Insanity drained every second while in Voidform.\",\n    voidformStartingHaste: \"The amount of haste, in percent, that is granted at the start of Voidform.\",\n    voidformHasteStack: \"The amount of haste, in percent, that every stack of Voidform grants.\",\n    voidformMaximumStacks: \"The maximum number of Voidform stacks. Note that reaching the maximum does not stop drain from increasing.\",\n    voidformGainInsanity: \"While in Voidform, if enabled spells will generate insanity, otherwise they won't.\",\n    lingeringInsanityType: \"Lingering Insanity has two types.\\nStatic - The length of the aura and haste from stacks are constant.\\nDecay - Haste stacks are lost over the aura's duration at a certain rate.\",\n    lingeringInsanityDuration: \"An option for type 'Static'. This is the amount of time, in seconds, that the aura will last.\",\n    lingeringInsanityAfterVoidformEntry: \"An option for type 'Static'. If enabled, then the duration for Lingering Insanity will only start after entering Voidform.\",\n    lingeringInsanityHasteRetention: \"An option for type 'Static. The amount of haste, in percent, that is retained from the final stacks of the previous Voidform.\",\n    lingeringInsanityDecayRate: \"An option for type 'Decay'. The amount of time, in seconds it takes for one stack of the aura to be lost.\",\n    lingeringInsanityHasteDecay: \"An option for type 'Decay'. The amount of haste, in percent, that is removed every time the aura loses a stack.\",\n    auraDuration: \"The amount of time, in seconds, that an aura's effect will last.\",\n    auraTicks: \"The number of times an aura will trigger its effect over its duration.\",\n    auraHaste: \"The amount of haste, in percent, that is granted while an aura is active\",\n    darkThoughtsMaxStacks: \"The maximum number of Dark Thoughts stacks.\",\n}\n\nconst commonOptions = {\n    cooldown: {\n        key: \"cooldown\",\n        displayName: \"Cooldown\",\n        type: \"time\",\n        whatIs: whatIs.cooldown,\n        unit: \"sec\"\n    },\n    charges: {\n        key: \"charges\",\n        displayName: \"Charges\",\n        type: \"number\",\n        whatIs: whatIs.charges\n    },\n    hasted: {\n        key: \"hasted\",\n        displayName: \"Hasted\",\n        type: \"boolean\",\n        whatIs: whatIs.abilityHasted\n    },\n    resourceCast: {\n        key: \"resource\",\n        displayName: \"Resource\",\n        type: \"number\",\n        whatIs: whatIs.resourceCast,\n        unit: \"insanity\"\n    },\n    resourceChannel: {\n        key: \"resource\",\n        displayName: \"Resource\",\n        type: \"number\",\n        whatIs: whatIs.resourceChannel,\n        unit: \"insanity\"\n    },\n    cost: {\n        key: \"resourceCost\",\n        displayName: \"Cost\",\n        type: \"number\",\n        whatIs: whatIs.cost,\n        unit: \"insanity\"\n    },\n    castTime: {\n        key: \"casttime\",\n        displayName: \"Cast Time\",\n        type: \"time\",\n        whatIs: whatIs.castTime,\n        unit: \"sec\"\n    },\n    channelTime: {\n        key: \"casttime\",\n        displayName: \"Channel Time\",\n        type: \"time\",\n        whatIs: whatIs.channelTime,\n        unit: \"sec\"\n    },\n    ticks: {\n        key: \"ticks\",\n        displayName: \"Ticks\",\n        type: \"number\",\n        whatIs: whatIs.ticks\n    },\n    auraDuration: {\n        key: \"baseDuration\",\n        displayName: \"Duration\",\n        type: \"time\",\n        whatIs: whatIs.auraDuration\n    },\n    auraTicks: {\n        key: \"ticks\",\n        displayName: \"Ticks\",\n        type: \"number\",\n        whatIs: whatIs.auraTicks\n    },\n    auraResource: {\n        key: \"resource\",\n        displayName: \"Resource\",\n        type: \"number\",\n        whatIs: whatIs.resourceAura\n    }\n}\n\n\nexport const abilityOptions = {\n    \"void-bolt\": [\n        commonOptions.cooldown,\n        commonOptions.hasted,\n        commonOptions.charges,\n        commonOptions.resourceCast,\n        {\n            key: \"extension\",\n            displayName: \"DoT Extension\",\n            type: \"time\",\n            whatIs: whatIs.voidBoltExtension\n        }\n    ],\n    \"void-eruption\": [\n        commonOptions.cooldown,\n        commonOptions.castTime,\n        {\n            key: \"resourceCost\",\n            displayName: \"Insanity Threshold\",\n            type: \"number\",\n            whatIs: whatIs.voidformThreshold\n        }\n    ],\n    \"mind-flay\": [\n        commonOptions.channelTime,\n        commonOptions.resourceChannel,\n        commonOptions.ticks\n    ],\n    \"mind-sear\": [\n        commonOptions.channelTime,\n        commonOptions.resourceChannel,\n        commonOptions.ticks,\n        {\n            key: \"targetCount\",\n            displayName: \"Target Count\",\n            type: \"number\",\n            whatIs: whatIs.mindSearTargetCount\n        }\n    ],\n    \"mind-blast\": [\n        commonOptions.cooldown,\n        commonOptions.charges,\n        commonOptions.castTime,\n        commonOptions.hasted,\n        commonOptions.resourceCast,\n        {\n            key: \"cdr\",\n            displayName: \"Voidform Cooldown Reduction\",\n            type: \"time\",\n            whatIs: whatIs.voidformCooldownReduction\n        }\n    ],\n    \"shadow-word-death\": [\n        commonOptions.cooldown,\n        commonOptions.charges,\n        commonOptions.hasted,\n        commonOptions.resourceCast\n    ],\n    \"void-torrent\": [\n        commonOptions.cooldown,\n        commonOptions.channelTime,\n        commonOptions.resourceChannel,\n        commonOptions.ticks,\n        {\n            key: \"requireVoidform\",\n            displayName: \"Require Voidform\",\n            type: \"boolean\",\n            whatIs: whatIs.requireVoidform\n        }\n    ],\n    \"shadow-word-pain\": [\n        commonOptions.resourceCast\n    ],\n    \"vampiric-touch\": [\n        commonOptions.castTime,\n        commonOptions.resourceCast\n    ],\n    \"devouring-plague\": [\n        {\n            key: \"costType\",\n            displayName: \"Cost Type\",\n            type: \"select\",\n            options: [{\n                value: \"static\",\n                displayName: \"Static\"\n            },{\n                value: \"dump\",\n                displayName: \"Dump\"\n            }],\n            whatIs: whatIs.resourceCostType\n        },\n        commonOptions.cooldown,\n        commonOptions.cost,\n        commonOptions.resourceCast,\n        {\n            key: \"requireNoVoidform\",\n            displayName: \"Require No Voidform\",\n            type: \"boolean\",\n            whatIs: whatIs.requireNoVoidform\n        }\n    ],\n    \"shadowfiend\": [\n        commonOptions.cooldown,\n        commonOptions.resourceCast\n    ],\n    \"power-infusion\": [\n        commonOptions.cooldown\n    ]\n}\n\nexport const auraOptions = {\n    \"stats\": [\n        {\n            key: \"haste\",\n            displayName: \"Haste\",\n            type: \"percent\",\n            whatIs: whatIs.haste\n        },\n        {\n            key: \"startingInsanity\",\n            displayName: \"Starting Insanity\",\n            type: \"number\",\n            whatIs: whatIs.startingInsanity\n        }\n    ],\n    \"voidform\": [\n        {\n            key: \"type\",\n            displayName: \"Aura Type\",\n            type: \"select\",\n            options: [{\n                value: \"insanity\",\n                displayName: \"Insanity\"\n            },{\n                value: \"static\",\n                displayName: \"Static\"\n            }],\n            whatIs: whatIs.voidformType\n        },\n        {\n            key: \"drainStart\",\n            displayName: \"Starting Insanity Drain\",\n            type: \"float\",\n            unit: \"/sec\",\n            whatIs: whatIs.voidformStartingDrain,\n        },\n        {\n            key: \"drainRate\",\n            displayName: \"Insanity Drain Rate\",\n            type: \"float\",\n            unit: \"/sec\",\n            whatIs: whatIs.voidformDrainRate\n        },\n        {\n            key: \"hasteStart\",\n            displayName: \"Voidform Starting Haste\",\n            type: \"percent\",\n            whatIs: whatIs.voidformStartingHaste\n        },\n        {\n            key: \"hasteStack\",\n            displayName: \"Voidform Haste Per Stack\",\n            type: \"percent\",\n            whatIs: whatIs.voidformHasteStack\n        },\n        {\n            key: \"maxStacks\",\n            displayName: \"Maximum Voidform Stacks\",\n            type: \"number\",\n            whatIs: whatIs.voidformMaximumStacks\n        },\n        {\n            key: \"gainInsanity\",\n            displayName: \"Gain Insanity\",\n            type: \"boolean\",\n            whatIs: whatIs.voidformGainInsanity\n        },\n        {\n            ...commonOptions.auraDuration,\n            whatIs: `An option for type 'Static'. ${whatIs.auraDuration}`\n        }\n    ],\n    \"lingeringInsanity\": [\n        {\n            key: \"type\",\n            displayName: \"Aura Type\",\n            type: \"select\",\n            options: [{\n                value: \"static\",\n                displayName: \"Static\"\n            },{\n                value: \"decay\",\n                displayName: \"Decay\"\n            }],\n            whatIs: whatIs.lingeringInsanityType\n        },\n        {\n            key: \"duration\",\n            displayName: \"Aura Duration\",\n            type: \"time\",\n            whatIs: whatIs.lingeringInsanityDuration\n        },\n        {\n            key: \"afterVoidformEntry\",\n            displayName: \"After Voidform Entry\",\n            type: \"boolean\",\n            whatIs: whatIs.lingeringInsanityAfterVoidformEntry\n        },\n        {\n            key: \"hasteRetention\",\n            displayName: \"Haste Retained\",\n            type: \"percent\",\n            whatIs: whatIs.lingeringInsanityHasteRetention\n        },\n        {\n            key: \"decayRate\",\n            displayName: \"Stack Decay Rate\",\n            type: \"time\",\n            whatIs: whatIs.lingeringInsanityDecayRate\n        },\n        {\n            key: \"hasteDecay\",\n            displayName: \"Haste Decay Amount\",\n            type: \"percent\",\n            whatIs: whatIs.lingeringInsanityHasteDecay\n        }\n    ],\n    \"shadow-word-pain\": [\n        commonOptions.auraDuration,\n        commonOptions.auraTicks,\n        commonOptions.auraResource\n    ],\n    \"vampiric-touch\": [\n        commonOptions.auraDuration,\n        commonOptions.auraTicks,\n        commonOptions.auraResource\n    ],\n    \"devouring-plague\": [\n        commonOptions.auraDuration,\n        commonOptions.auraTicks,\n        commonOptions.auraResource,\n        {\n            key: \"hasted\",\n            displayName: \"Hasted\",\n            type: \"boolean\",\n            whatIs: whatIs.auraHasted\n        }\n    ],\n    \"shadowfiend\": [\n        commonOptions.auraResource\n    ],\n    \"power-infusion\": [\n        commonOptions.auraDuration,\n        {\n            key: \"haste\",\n            displayName: \"Haste\",\n            type: \"percent\",\n            whatIs: whatIs.auraHaste\n        },\n        {\n            key: \"resourceGen\",\n            displayName: \"Resource Generation\",\n            type: \"percent\",\n            whatIs: whatIs.resourceGeneration\n        }\n    ],\n    \"dark-thoughts\": [\n        commonOptions.auraDuration,\n        {\n            key: \"maxStacks\",\n            displayName: \"Maximum Dark Thoughts Stacks\",\n            type: \"number\",\n            whatIs: whatIs.darkThoughtsMaxStacks\n\n        }\n    ]\n}","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport LingeringInsanity from \"./LingeringInsanity\"\nimport Voidform from \"./Voidform\"\nimport DamageOverTime from './DamageOverTime';\nimport Buff from \"./Buff\"\nimport { auraOptions } from '../../lib/options';\n\nconst dots = [\n  {\n    name: \"shadow-word-pain\",\n    icon: \"images/shadow-word-pain.jpg\",\n    displayName: \"Shadow Word: Pain\"\n  },\n  {\n    name: \"vampiric-touch\",\n    icon: \"images/vampiric-touch.jpg\",\n    displayName: \"Vampiric Touch\"\n  },\n  {\n    name: \"devouring-plague\",\n    icon: \"images/devouring-plague.jpg\",\n    displayName: \"Devouring Plague\"\n  },\n  {\n    name: \"shadowfiend\",\n    icon: \"images/shadowfiend.jpg\",\n    displayName: \"Shadowfiend\"\n  }\n]\n\nconst buffs = [\n  {\n    name: \"power-infusion\",\n    icon: \"images/power-infusion.jpg\",\n    displayName: \"Power Infusion\"\n  },\n  {\n    name: \"fae-blessings\",\n    icon: \"images/fae-blessings.jpg\",\n    displayName: \"Fae Blessings\"\n  },\n  {\n    name: \"bloodlust\",\n    icon: \"images/bloodlust.jpg\",\n    displayName: \"Bloodlust\"\n  },\n  {\n    name: \"dark-thoughts\",\n    icon: \"images/dark-thoughts.jpg\",\n    displayName: \"Dark Thoughts\"\n  }\n]\n\nconst AuraBar = (props) => {\n    const {auras, triggerEvent, settings, effectHandler, haste} = props\n    const {lingeringInsanity, voidform} = settings \n\n    return (\n        <div className=\"aura-container\">\n          {auras.voidform.active \n          ? <Voidform \n            {...voidform}\n            {...auras.voidform}\n            triggerEvent={triggerEvent}\n            effectHandler={effectHandler} /> \n          : null}\n          {auras.lingeringInsanity.active\n          ? <LingeringInsanity \n            {...lingeringInsanity}\n            {...auras.lingeringInsanity} \n            inVoidform={auras.voidform.active} \n            triggerEvent={triggerEvent}\n            effectHandler={effectHandler} />\n          : null}\n          {dots.map(dot => \n            auras[dot.name].active\n            ? <DamageOverTime\n                key={`dot-${dot.name}`}\n                {...dot}\n                {...auras[dot.name]}\n                {...settings[dot.name]}\n                haste={haste}\n                triggerEvent={triggerEvent}\n                effectHandler={effectHandler} />\n            : null\n          )}\n          {buffs.map(buff => \n            auras[buff.name].active\n            ? <Buff\n                key={`buff-${buff.name}`}\n                {...buff}\n                {...auras[buff.name]}\n                setting={settings[buff.name]}\n                triggerEvent={triggerEvent}\n                effectHandler={effectHandler} />\n            : null\n          )}\n        </div>       \n    )\n}\n\nexport default AuraBar\n\n\n","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport {useCleanup} from \"../../utils/hooks\"\n\nimport \"./Panel.css\"\n\nconst Panel = (props) => {\n\n    const {panel, currentPanel, reset, onClick, handleClose, header, panelClass, style} = props\n\n    useCleanup(panel, currentPanel, reset)\n\n    return (\n        <div>\n            <div className=\"panel-header hover-pointer\" onClick={() => onClick(panel)}>{header}</div>\n            <div className={`panel ${panelClass}`} style={style}>\n                <button className=\"panel-button panel-exit-button\" onClick={handleClose}>x</button>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Panel","import {useEffect, useRef} from \"react\"\n\nexport const useCleanup = (target, value, cleanup) => {\n    const ref = useRef()\n\n    useEffect(() => {\n        if(ref.current === target) {\n            cleanup()\n        }       \n        ref.current = value\n    }, [value])\n}","export default {\n    \"mind-flay\": {\n        cooldown: 0,\n        resource: 18,\n        hasted: true,\n        casttime: 4500,\n        ticks: 6,\n        type: \"channel\",\n    },\n    \"mind-sear\": {\n        cooldown: 0,\n        resource: 6,\n        hasted: true,\n        casttime: 4500,\n        ticks: 6,\n        targetCount: 1,\n        type: \"channel\",\n    },\n    \"void-bolt\": {\n        cooldown: 4500,\n        resource: 12,\n        hasted: true,\n        rankTwo: false,\n        type: \"instant\",\n        charges: 1,\n        extension: 3000\n    },\n    \"void-eruption\": {\n        cooldown: 90000,\n        type: \"cast\",\n        casttime: 1500,\n        resourceCost: 0,\n    },\n    \"mind-blast\": {\n        cooldown: 7500,\n        resource: 8,\n        hasted: true,\n        type: \"cast\",\n        casttime: 1500,\n        charges: 1,\n        cdr: 0\n    },\n    \"shadow-word-death\": {\n        cooldown: 20000,\n        resource: 0,\n        hasted: true,\n        type: \"instant\",\n        charges: 1,\n    },\n    \"void-torrent\": {\n        cooldown: 30000,\n        resource: 60,\n        type: \"channel\",\n        casttime: 3000,\n        staticCastTime: true,\n        ticks: 4,\n        requireVoidform: false\n    },\n    \"shadow-word-pain\": {\n        cooldown: 0,\n        resource: 4,\n        type: \"instant\"\n    },\n    \"vampiric-touch\": {\n        cooldown: 0,\n        resource: 5,\n        type: \"cast\",\n        casttime: 1500\n    },\n    \"devouring-plague\": {\n        costType: \"static\",\n        cooldown: 0,\n        resource: 0,\n        resourceCost: 50,\n        requireNoVoidform: false,\n        type: \"instant\"\n    },\n    \"shadowfiend\": {\n        cooldown: 180000,\n        resource: 3,\n        type: \"instant\"\n    },\n    \"power-infusion\": {\n        cooldown: 120000,\n        type: \"instant\"\n    },\n    \"fae-blessings\": {\n        cooldown: 90000,\n        type: \"instant\"\n    },\n    \"bloodlust\": {\n        cooldown: 300000,\n        ignoreGcd: true,\n        type: \"instant\"\n    }\n}","const defaultAuraSettings = {\n    stats: {\n        displayName: \"Passive\",\n        haste: 0,\n        startingInsanity: 0\n    },\n    voidform: {\n        displayName: \"Voidform\",\n        type: \"static\",\n        drainStart: 0,\n        drainRate: 0,\n        hasteStart: 0,\n        hasteStack: 0,\n        maxStacks: 0,\n        gainInsanity: true,\n        baseDuration: 15000\n    },\n    lingeringInsanity: {\n        displayName: \"Lingering Insanity\",\n        type: \"static\",\n        duration: 0,\n        afterVoidformEntry: false,\n        hasteRetention: 1,\n        decayRate: 3000,\n        hasteDecay: .01,\n        enbaled: false\n    },\n    \"shadow-word-pain\": {\n        displayName: \"Shadow Word: Pain\",\n        baseDuration: 16000,\n        ticks: 8,\n        resource: 0,\n        hasted: true,\n        type: \"pandemic\"\n    },\n    \"vampiric-touch\": {\n        displayName: \"Vampiric Touch\",\n        baseDuration: 21000,\n        ticks: 7,\n        resource: 0,\n        hasted: true,\n        type: \"pandemic\"\n    },\n    \"devouring-plague\": {\n        displayName: \"Devouring Plague\",\n        baseDuration: 6000,\n        ticks: 2,\n        resource: 0,\n        hasted: true,\n        type: \"rolling\"\n    },\n    \"shadowfiend\": {\n        displayName: \"Shadowfiend\",\n        baseDuration: 15000,\n        ticks: 10,\n        resource: 3\n    },\n    \"power-infusion\": {\n        displayName: \"Power Infusion\",\n        baseDuration: 20000,\n        haste: .25,\n        resourceGen: 0\n    },\n    \"fae-blessings\": {\n        displayName: \"Fae Blessings\",\n        baseDuration: 60000,\n        maxStacks: 10\n    },\n    \"bloodlust\": {\n        displayName: \"Bloodlust\",\n        baseDuration: 40000,\n        haste: .3\n    },\n    \"dark-thoughts\": {\n        displayName: \"Dark Thoughts\",\n        baseDuration: 15000,\n        maxStacks: 5\n    }\n}\n\nexport default defaultAuraSettings","export default {\n    \"dark-thoughts\": {\n        displayName: \"Dark Thoughts\",\n        procChance: .2\n    }\n}","import {Base64} from \"js-base64\"\nimport abilitySettings from \"../lib/abilitySettings\"\nimport auraSettings from \"../lib/auraSettings\"\nimport effectSettings from \"../lib/effectSettings\"\n\nconst parseAbility = (ability, key) => {\n    let abilitySetting = abilitySettings[key]\n    let result = Object.keys(abilitySetting).reduce((obj, k) => {\n        let userSetting = ability[k]\n        //might want to look at options\n        let setting = abilitySetting[k]\n\n        //if(userSetting === null || userSetting === undefined) throw new Error(\"Missing ability setting in input \" + k)\n\n        if(userSetting && typeof userSetting !== typeof setting) throw new Error(\"Ability setting has invalid format\")\n        \n        obj[k] = userSetting !== undefined ? userSetting : setting\n\n        return obj\n    }, {})\n\n    return result\n}\n\nconst parseAbilitySettings = (abilities) => {\n    let result = {}\n\n    Object.keys(abilitySettings).forEach(a => {\n        let ability = abilities[a] || abilitySettings[a]\n\n        result[a] = parseAbility(ability, a)\n    })\n\n    return result\n}\n\nconst parseAura = (aura, key) => {\n    let auraSetting = auraSettings[key]\n\n    let result = Object.keys(auraSetting).reduce((obj, k) => {\n        let userSetting = aura[k]\n        let setting = auraSetting[k]\n\n        //if(userSetting === null || auraSetting === undefined) throw new Error(\"Missing aura setting in input \" + k)\n        if(userSetting && typeof userSetting !== typeof setting) throw new Error(`Aura setting has invalid format`)\n\n        obj[k] = userSetting !== undefined ? userSetting : setting\n\n        return obj\n    }, {})\n\n    return result\n}\n\nconst parseAuraSettings = (auras) => {\n    let result = {}\n    Object.keys(auraSettings).forEach(a => {\n        let aura = auras[a] || auraSettings[a]\n\n        //if(!aura) throw new Error(\"Missing aura in input\")\n\n        result[a] = parseAura(aura, a)\n    })\n\n    return result\n}\n\nexport const importSettings = (settings, includeKeybinds, includeSpellOrder) => {\n\n    try {\n        let parsedSettings = JSON.parse(Base64.decode(settings))\n\n        let abilitySettings = parseAbilitySettings(parsedSettings.abilitySettings)\n        let auraSettings = parseAuraSettings(parsedSettings.auraSettings)\n        let abilityConfig = formatAbilityConfig(parsedSettings.abilityConfig, includeKeybinds, includeSpellOrder)\n\n        return {\n            abilitySettings,\n            auraSettings,\n            abilityConfig,\n            effectSettings: parsedSettings.effectSettings || {}\n        }\n    }\n\n    catch(e) {\n        throw new Error(\"An error occurred while parsing input data.\\nReason: \" + e.message)\n    }\n}\n\nconst formatSingleAbilitySetting = (setting) => {\n    let result = Object.keys(setting).reduce((obj, k) => {\n        obj[k] = setting[k]\n        return obj\n    }, {})\n\n    return result\n}\n\nconst formatAbilitySettingsForExport = (settings) => {\n    let result = Object.keys(settings).reduce((obj, k) => {\n        let ability = settings[k]\n        let formattedAbility = formatSingleAbilitySetting(ability)\n        obj[k] = formattedAbility\n        return obj\n    }, {})\n\n    return result\n}\n\nconst formatAbilityConfig = (settings, includeKeybinds, includeSpellOrder) => {\n    let result = Object.keys(settings).reduce((result, k) => {\n        let {keybind, disabled, index} = settings[k]\n\n        result[k] = {disabled: !!disabled}\n        if(includeKeybinds && keybind) result[k].keybind = keybind\n        if(includeSpellOrder && index) result[k].index = index\n        \n        return result\n    }, {})\n\n    return result\n}\n\nexport const exportSettings = (currentSettings) => {\n    let formattedAbilitySettings = formatAbilitySettingsForExport(currentSettings.abilitySettings)\n    let formattedAbilityConfig = formatAbilityConfig(currentSettings.abilities, true, true)\n\n    let combined =  {\n        abilitySettings: formattedAbilitySettings,\n        auraSettings: currentSettings.auraSettings,\n        abilityConfig: formattedAbilityConfig,\n        effectSettings: currentSettings.effectSettings\n    }\n\n    let result = Base64.encode(JSON.stringify(combined))\n\n    return result\n}","import live from \"./live\"\nimport bfa from \"./bfa\"\nimport legionENVoidlord from \"./legionENVoidlord\"\nimport legionAntorus from \"./legionAntorus\"\nimport ryeshot from \"./ryeshot\"\nimport yvaelle from \"./yvaelle\"\n\nexport default {\n    live,\n    bfa,\n    legionENVoidlord,\n    legionAntorus,\n    ryeshot,\n    yvaelle\n}","import defaultAbilitySettings from \"../abilitySettings\"\nimport defaultAuraSettings from \"../auraSettings\"\nimport defaultEffectSettings from \"../effectSettings\"\n\nexport default {\n    displayName: \"Shadowlands\",\n    abilitySettings: {\n        ...defaultAbilitySettings,\n    },\n    auraSettings: {\n        ...defaultAuraSettings,\n        \"dark-thoughts\": {\n            displayName: \"Dark Thoughts\",\n            baseDuration: 15000,\n            maxStacks: 5\n        }\n    },\n    effectSettings: {\n        ...defaultEffectSettings\n    },\n    abilities: {\n        \"mind-flay\": {},\n        \"mind-sear\": {},\n        \"void-bolt\": {},\n        \"void-eruption\": {},\n        \"mind-blast\": {},\n        \"shadow-word-death\": {},\n        \"void-torrent\": { disabled: true },\n        \"shadow-word-pain\": {},\n        \"vampiric-touch\": {},\n        \"devouring-plague\": {},\n        \"shadowfiend\": {}\n    }\n}","import defaultAbilitySettings from \"../abilitySettings\"\nimport defaultAuraSettings from \"../auraSettings\"\n\nexport default {\n    displayName: \"Battle for Azeroth\",\n    abilitySettings: {\n        ...defaultAbilitySettings,\n        \"void-eruption\": {\n            ...defaultAbilitySettings[\"void-eruption\"],\n            casttime: 1500,\n            resourceCost: 60,\n        },\n        \"mind-blast\": {\n            ...defaultAbilitySettings[\"mind-blast\"],\n            cooldown: 9000,\n            resource: 15,\n            charges: 2\n        },\n        \"vampiric-touch\": {\n            ...defaultAbilitySettings[\"vampiric-touch\"],\n            resource: 5\n        },\n        \"void-bolt\": {\n            ...defaultAbilitySettings[\"void-bolt\"],\n            resource: 15\n        },\n        \"mind-flay\": {\n            ...defaultAbilitySettings[\"mind-flay\"],\n            casttime: 4500,\n            ticks: 6,\n            resource: 18\n        },\n        \"mind-sear\": {\n            ...defaultAbilitySettings[\"mind-sear\"],\n            casttime: 4500,\n            ticks: 6,\n            resource: 7.5\n        },\n        \"mind-blast\": {\n            ...defaultAbilitySettings[\"mind-blast\"],\n            cooldown: 7500,\n            resource: 8\n        },\n        \"shadow-word-death\": {\n            ...defaultAbilitySettings[\"shadow-word-death\"],\n            charges: 2\n        }\n    },\n    auraSettings: {\n        ...defaultAuraSettings,\n        \"voidform\": {\n            ...defaultAuraSettings[\"voidform\"],\n            hasteStack: 0,\n        },\n        \"devouring-plague\": {\n            ...defaultAuraSettings[\"devouring-plague\"],\n            displayName: \"Devouring Plague\",\n            baseDuration: 6000,\n            ticks: 2\n        }\n    },\n    abilities: {\n        \"mind-flay\": {},\n        \"mind-sear\": {},\n        \"void-bolt\": {},\n        \"void-eruption\": {},\n        \"mind-blast\": {},\n        \"shadow-word-death\": { disabled: true },\n        \"void-torrent\": { disabled: true },\n        \"shadow-word-pain\": {},\n        \"vampiric-touch\": {},\n        \"devouring-plague\": { disabled: true },\n        \"shadowfiend\": {},\n        \"power-infusion\": { disabled: true }\n    }\n}","import defaultAbilitySettings from \"../abilitySettings\"\nimport defaultAuraSettings from \"../auraSettings\"\n\nexport default {\n    displayName: \"Legion: EN + Void Lord\",\n    abilitySettings: {\n        ...defaultAbilitySettings,\n        \"void-eruption\": {\n            ...defaultAbilitySettings[\"void-eruption\"],\n            casttime: 2500,\n            resourceCost: 90,\n        },\n        \"void-torrent\": {\n            cooldown: 60000,\n            resource: 0,\n            type: \"channel\",\n            casttime: 4000,\n            staticCastTime: true,\n            ticks: 10,\n            requireVoidform: true\n        },\n        \"shadowfiend\": {\n            cooldown: 180000,\n            resource: 0,\n            type: \"instant\"\n        }\n    },\n    auraSettings: {\n        ...defaultAuraSettings,\n        voidform: {\n            displayName: \"Voidform\",\n            drainStart: 6,\n            drainRate: .66,\n            hasteStart: 0,\n            hasteStack: .01,\n            maxStacks: 0\n        },\n        lingeringInsanity: {\n            displayName: \"Lingering Insanity\",\n            type: \"static\",\n            duration: 8000,\n            afterVoidformEntry: true,\n            hasteRetention: 1,\n            decayRate: 1000,\n            hasteDecay: .01\n        },\n        \"shadowfiend\": {\n            displayName: \"Shadowfiend\",\n            baseDuration: 15000,\n            ticks: 10,\n            resource: 0\n        }\n    },\n    abilities: {\n        \"mind-flay\": {},\n        \"mind-sear\": {},\n        \"void-bolt\": {},\n        \"void-eruption\": {},\n        \"mind-blast\": {},\n        \"shadow-word-death\": {},\n        \"void-torrent\": {},\n        \"shadow-word-pain\": {},\n        \"vampiric-touch\": {},\n        \"devouring-plague\": { disabled: true },\n        \"power-infusion\": { disabled: true }\n    }\n\n}","import defaultAbilitySettings from \"../abilitySettings\"\nimport defaultAuraSettings from \"../auraSettings\"\n\nexport default {\n    displayName: \"Legion: Antorus\",\n    abilitySettings: {\n        ...defaultAbilitySettings,\n        \"void-eruption\": {\n            ...defaultAbilitySettings[\"void-eruption\"],\n            casttime: 1500,\n            resourceCost: 65\n        },\n        \"mind-blast\": {\n            cooldown: 7500,\n            resource: 12,\n            hasted: true,\n            type: \"cast\",\n            casttime: 1500,\n            charges: 2,\n            cdr: 1500\n        },\n        \"void-torrent\": {\n            cooldown: 60000,\n            resource: 0,\n            type: \"channel\",\n            casttime: 4000,\n            staticCastTime: true,\n            ticks: 10,\n            requireVoidform: true\n        },\n        \"shadowfiend\": {\n            cooldown: 60000,\n            resource: 6,\n            type: \"instant\"\n        }\n    },\n    auraSettings: {\n        ...defaultAuraSettings,\n        stats: {\n            ...defaultAuraSettings.stats,\n            displayName: \"Stats\",\n            haste: .4\n        },\n        voidform: {\n            displayName: \"Voidform\",\n            drainStart: 6,\n            drainRate: .66,\n            hasteStart: 0,\n            hasteStack: .01,\n            maxStacks: 0\n        },\n        lingeringInsanity: {\n            displayName: \"Lingering Insanity\",\n            type: \"decay\",\n            duration: 60000,\n            afterVoidformEntry: false,\n            hasteRetention: 1,\n            decayRate: 1000,\n            hasteDecay: .01\n        },\n        \"shadowfiend\": {\n            displayName: \"Shadowfiend\",\n            baseDuration: 24000,\n            ticks: 16,\n            resource: 6\n        }\n    },\n    abilities: {\n        \"mind-flay\": {},\n        \"mind-sear\": { disabled: true },\n        \"void-bolt\": {},\n        \"void-eruption\": {},\n        \"mind-blast\": {},\n        \"shadow-word-death\": {},\n        \"void-torrent\": {},\n        \"shadow-word-pain\": {},\n        \"vampiric-touch\": {},\n        \"devouring-plague\": { disabled: true },\n        \"power-infusion\": { disabled: true }\n    }\n}","import defaultAbilitySettings from \"../abilitySettings\"\nimport defaultAuraSettings from \"../auraSettings\"\n\nexport default {\n    displayName: \"Ryeshot's Shadowlands\",\n    abilitySettings: {\n        ...defaultAbilitySettings,\n        \"void-bolt\": {\n            ...defaultAbilitySettings[\"void-bolt\"],\n            resource: 15\n        },\n        \"void-eruption\": {\n            ...defaultAbilitySettings[\"void-eruption\"],\n            cooldown: 0,\n            resourceCost: 90,\n        },\n        \"mind-blast\": {\n            ...defaultAbilitySettings[\"mind-blast\"],\n            cooldown: 7500,\n            resource: 25,\n            charges: 2,\n            cdr: 0\n        },\n        \"shadow-word-death\": {\n            ...defaultAbilitySettings[\"shadow-word-death\"],\n            cooldown: 20000,\n            resource: 0,\n            hasted: true\n        },\n        \"vampiric-touch\": {\n            ...defaultAbilitySettings[\"vampiric-touch\"],\n            resource: 6\n        },\n        \"devouring-plague\": {\n            ...defaultAbilitySettings[\"devouring-plague\"],\n            costType: \"dump\",\n            resourceCost: 100\n        }\n    },\n    auraSettings: {\n        ...defaultAuraSettings,\n        stats: {\n            ...defaultAuraSettings.stats,\n            haste: .15,\n            startingInsanity: 30\n        },\n        voidform: {\n            ...defaultAuraSettings.voidform,\n            type: \"insanity\",\n            drainStart: 6,\n            drainRate: .66,\n            hasteStart: .1,\n            hasteStack: .01\n        },\n        lingeringInsanity: {\n            ...defaultAuraSettings.lingeringInsanity,\n            type: \"static\",\n            duration: 0\n        },\n        \"devouring-plague\": {\n            ...defaultAuraSettings[\"devouring-plague\"],\n            baseDuration: 6000,\n            ticks: 6,\n            resource: 5,\n            hasted: false\n        }\n    },\n    abilities: {\n        \"mind-flay\": {},\n        \"mind-sear\": { disabled: true },\n        \"void-bolt\": {},\n        \"void-eruption\": {},\n        \"mind-blast\": {},\n        \"shadow-word-death\": { disabled: true },\n        \"void-torrent\": { disabled: true },\n        \"shadow-word-pain\": {},\n        \"vampiric-touch\": {},\n        \"devouring-plague\": {},\n        \"shadowfiend\": { disabled: true },\n        \"power-infusion\": { disabled: true }\n    }\n}","import defaultAbilitySettings from \"../abilitySettings\"\nimport defaultAuraSettings from \"../auraSettings\"\n\nexport default {\n    displayName: \"Yvaelle's Shadowlands\",\n    abilitySettings: {\n        ...defaultAbilitySettings,\n        \"void-eruption\": {\n            ...defaultAbilitySettings[\"void-eruption\"],\n            resourceCost: 0\n        },\n        \"mind-blast\": {\n            ...defaultAbilitySettings[\"mind-blast\"],\n            cooldown: 7500,\n            resource: 15,\n            charges: 2\n        }\n    },\n    auraSettings: {\n        ...defaultAuraSettings,\n        stats: {\n            ...defaultAuraSettings.stats,\n            haste: .35\n        },\n        voidform: {\n            ...defaultAuraSettings.voidform,\n            drainStart: 5,\n            drainRate: 0,\n            hasteStart: .15,\n            hasteStack: 0,\n            gainInsanity: false\n        },\n        lingeringInsanity: {\n            ...defaultAuraSettings.lingeringInsanity,\n            type: \"static\",\n            duration: 0\n        }\n    },\n    abilities: {\n        \"mind-flay\": {},\n        \"mind-sear\": { disabled: true },\n        \"void-bolt\": {},\n        \"void-eruption\": {},\n        \"mind-blast\": {},\n        \"shadow-word-death\": { disabled: true },\n        \"void-torrent\": { disabled: true },\n        \"shadow-word-pain\": {},\n        \"vampiric-touch\": {},\n        \"devouring-plague\": { disabled: true },\n        \"shadowfiend\": { disabled: true },\n        \"power-infusion\": { disabled: true }\n    }\n}","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport Panel from \"./Panel\"\nimport { exportSettings, importSettings } from \"../../utils/importExport\"\nimport templates from \"../../lib/templates\"\nimport \"./Panel.css\"\n\nconst addTemplateToQueryString = (template) => {\n    const queryParams = new URLSearchParams()\n    queryParams.set(\"template\", template)\n    window.history.replaceState(null, window.document.title, `?${queryParams.toString()}`)\n}\n\nconst Templates = (props) => {\n\n    const {onChange, selected} = props\n\n    return (\n        <div style={{width: \"60%\"}}>\n            <select className=\"panel-dropdown\" value={selected} onChange={onChange}>\n                <option value={\"default\"} disabled>Choose a template...</option>\n                {Object.keys(templates).map(t => <option key={t} value={t}>{templates[t].displayName}</option>)}\n                <option key={\"custom\"} value={\"custom\"}>Custom</option>\n            </select>\n        </div>\n    )\n}\n\nconst ExportPanel = (props) => {\n\n    const {settings, onImport, currentPanel, onClick, closePanel} = props\n\n    const panel = \"export\"\n    const header = \"Import/Export Settings\"\n    const panelClass = \"left-panel\"\n    const placeholderText = \"Import settings here...\"\n    const exportTextAreaId = \"export-content\"\n    const defaultSelected = \"default\"\n    const rows = 20\n    const cols = 25\n\n    const [exportData, setExportData] = useState(\"\")\n    const [inputData, setInputData] = useState(\"\")\n    const [includeKeybinds, setIncludeKeybinds] = useState(false)\n    const [includeSpellOrder, setIncludeSpellOrder] = useState(false)\n    const [selectedTemplate, setSelectedTemplate] = useState(defaultSelected)\n\n    const handleImport = () => {\n        try {\n            const settings = importSettings(inputData, includeKeybinds, includeSpellOrder)\n            if(selectedTemplate) addTemplateToQueryString(selectedTemplate)\n            onImport(settings)\n        } catch (error) {\n            console.error(error)\n        }\n\n        setInputData(\"\")\n    }\n\n    const handleExport = () => {\n        const data = exportSettings(settings)\n\n        setExportData(data)\n    }\n\n    const handleTemplateChange = (e) => {\n        const key = e.target.value\n\n        setSelectedTemplate(key)\n\n        if(key === \"custom\") {\n            setInputData(\"\")\n            return\n        }\n\n        const {displayName, ...template} = templates[key]\n\n        const data = exportSettings({...template})\n\n        setInputData(data)\n    }\n\n    const copyToClipBoard = () => {\n        const textArea = document.getElementById(exportTextAreaId)\n\n        textArea.select()\n\n        try {\n            document.execCommand(\"copy\")\n\n        }\n        catch (err) {\n            //set the message\n        }\n    }\n\n    const handleInputChange = (e) => {\n        let data = e.target.value\n\n        setInputData(data)\n    }\n\n    const reset = () => {\n        setExportData(\"\")\n        setInputData(\"\")\n        setIncludeKeybinds(false)\n        setIncludeSpellOrder(false)\n        setSelectedTemplate(defaultSelected)\n    }\n\n    return (\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass} style={{transform: `translateX(${currentPanel === panel ? \"0px\": \"-350px\"})`}}>\n            <div className=\"vertical-panel-content\">\n                <div className=\"panel-content-container\">\n                    <div className=\"panel-content-header\">Import Settings</div>\n                    <Templates selected={selectedTemplate} onChange={handleTemplateChange} />\n                    <textarea className=\"panel-text-area\" rows={rows} cols={cols} placeholder={placeholderText} value={inputData} onChange={handleInputChange}></textarea>\n                    <div className=\"panel-info-text-container\">\n                        <label>Include keybinds</label>\n                        <input type=\"checkbox\" onChange={() => setIncludeKeybinds(!includeKeybinds)} checked={includeKeybinds} />\n                    </div>\n                    <div className=\"panel-info-text-container\">\n                        <label>Include spell order</label>\n                        <input type=\"checkbox\" onChange={() => setIncludeSpellOrder(!includeSpellOrder)} checked={includeSpellOrder} />\n                    </div>\n                    <div className=\"panel-button-container\">\n                        <button className=\"panel-button panel-input-button\" onClick={handleImport} disabled={!inputData}>Import</button>\n                    </div>\n                </div>\n                <div className=\"panel-content-container\">\n                    <div className=\"panel-content-header\">Export Settings</div>\n                    <textarea id={exportTextAreaId} className=\"panel-text-area\" rows={rows} cols={cols} value={exportData} readOnly={true}></textarea>\n                    <div className=\"panel-button-container\">\n                        <button className=\"panel-button panel-input-button\" onClick={handleExport}>Export</button>\n                        <button className=\"panel-button panel-input-button\" onClick={copyToClipBoard} disabled={!exportData}>Copy</button>\n                    </div>\n                </div>      \n            </div> \n        </Panel>\n    )\n}\n\nexport default ExportPanel","import React, { useState } from \"react\"\n\nconst TimeTextOption = (props) => {\n    const {value, onChange} = props\n\n    const [displayValue, setDisplayValue] = useState(value/1000)\n\n    const handleChange = (e) => {\n        if(!e.target.value) return\n        onChange(parseFloat(e.target.value)*1000)\n        setDisplayValue(e.target.value)\n    }\n    \n    return <span><input className=\"setting-option-input\" type=\"number\" value={displayValue} min=\"0\" step=\".1\" onChange={handleChange} />sec</span>\n}\n\nconst NumberTextOption = (props) => {\n    const {value, onChange, unit} = props\n\n    const handleChange = (e) => {\n        if(!e.target.value) return\n        onChange(parseInt(e.target.value))\n    }\n    \n    return <span><input className=\"setting-option-input\" type=\"number\" value={value} min=\"0\" onChange={handleChange} /> {unit}</span>\n}\n\nconst FloatTextOption = (props) => {\n    const {value, onChange, unit} = props\n\n    const handleChange = (e) => {\n        if(!e.target.value) return\n        onChange(parseFloat(e.target.value))\n    }\n    \n    return <span><input className=\"setting-option-input\" type=\"number\" value={value} min=\"0\" step=\".01\" onChange={handleChange} /> {unit}</span>\n}\n\nconst PercentTextOption = (props) => {\n    const {value, onChange} = props\n\n    const [displayValue, setDisplayValue] = useState(value*100)\n\n    const handleChange = (e) => {\n        if(!e.target.value) return\n        onChange(parseFloat(e.target.value)/100)\n        setDisplayValue(e.target.value)\n    }\n\n    return <span><input className=\"setting-option-input\" type=\"number\" value={displayValue} min=\"0\" step=\".5\" onChange={handleChange} />%</span>\n}\n\nconst BooleanOption = (props) => {\n    const {value, onChange} = props\n\n    const handleChange = (e) => {\n        onChange(e.target.checked)\n    }\n\n    return <input type=\"checkbox\" defaultChecked={value} onChange={handleChange} />\n}\n\nconst SelectOption = (props) => {\n    const {value, onChange, name, options} = props\n\n    const handleChange = (e) => {\n        onChange(e.target.value)\n    }\n\n    return (\n        options.map(o => (\n            <div>\n                <input type=\"radio\" id={o.value} name={name} value={o.value} defaultChecked={o.value === value} onChange={handleChange} />\n                <label htmlFor={o.value}>{o.displayName}</label>\n            </div>\n        ))\n    )\n}\n\nexport default Option = (type, value, onChange, key, name, rest) => {\n    switch(type) {\n        case \"time\":\n            return <TimeTextOption key={key} value={value} onChange={onChange} />\n        case \"number\":\n            return <NumberTextOption key={key} value={value} onChange={onChange} {...rest} />\n        case \"float\":\n            return <FloatTextOption key={key} value={value} onChange={onChange} {...rest} />\n        case \"percent\":\n            return <PercentTextOption key={key} value={value} onChange={onChange} />\n        case \"boolean\":\n            return <BooleanOption key={key} value={value} onChange={onChange} />\n        case \"select\":\n            return <SelectOption key={key} value={value} name={name} onChange={onChange} {...rest} />\n        default:\n            return null\n    }\n}","import React from \"react\"\nimport Option from \"./optionFactory\"\nimport \"./WhatIs.css\"\nimport \"./SettingOption.css\"\n\nconst SettingOption = (props) => {\n    const {value, name, type, whatIs, displayName, onChange, onHelp, closeHelp, parentKey, ...rest} = props\n\n    const handleInputChange = (v) => {\n        onChange(name, v)\n    }\n\n    const handleOnHelp = (e) => {\n        const pos = {\n            x: e.target.offsetLeft,\n            y: e.target.offsetTop\n        }\n        onHelp(displayName, whatIs, pos)\n    }\n\n    return (\n        <div className=\"setting-option\">\n            <div>\n                <i className=\"fa fa-question-circle what-is-icon\" onMouseEnter={handleOnHelp} onMouseLeave={closeHelp}></i>\n            </div>\n            <div className=\"setting-option-header\">{displayName}</div>\n            {Option(type, value, handleInputChange, parentKey + \"-input\", name, rest)}\n        </div>\n    )\n}\n\nexport default SettingOption","import React from \"react\"\nimport \"./WhatIs.css\"\n\nconst WhatIs = (props) => {\n    const {name, text, xPos, yPos} = props\n\n    //console.log(xPos, yPos)\n    const minimumHeight = 30\n\n    const style = {\n        left: `${xPos}px`,\n        top: `${yPos+minimumHeight}px`\n    }\n    \n    return (\n        <div className=\"what-is\" style={style}>\n            <div className=\"what-is-header\">What is... {name}?</div>\n            <div className=\"what-is-description\">{text}</div> \n        </div>\n    )\n}\n\nexport default WhatIs","import React, {useState} from \"react\"\nimport SettingOption from \"./SettingOption\"\nimport WhatIs from \"./WhatIs\"\nimport \"./Panel.css\"\n\nconst CustomizeSection = (props) => {\n\n    const {name, setting, options, onChange} = props\n\n    const [showWhatIs, setShowWhatIs] = useState(false)\n    const [whatIs, setWhatIs] = useState({})\n\n    const handleChange = (optionKey, option) => {\n        const newSetting = {...setting, [optionKey]: option}\n        onChange(newSetting, name)\n    }\n\n    const handleShowWhatIs = (name, text, pos) => {\n        setShowWhatIs(true)\n        setWhatIs({\n            name,\n            text,\n            xPos: pos.x,\n            yPos: pos.y\n        })    \n    }\n\n    const closeWhatIs = () => {\n        setShowWhatIs(false)\n        setWhatIs({})\n    }\n\n    return (\n        <div className=\"customize-section\">\n            <div className=\"customoze-section-header\">{setting.displayName}</div>\n            {options.map(o => {\n            return <SettingOption {...o} key={`${name}-${o.key}`} value={setting[o.key]} name={o.key} parentKey={`${name}-${o.key}`} onChange={handleChange} onHelp={handleShowWhatIs} closeHelp={closeWhatIs}/>\n            })}\n            {showWhatIs ? <WhatIs {...whatIs}/> : null}\n        </div>\n            \n    )\n}\n\nexport default CustomizeSection","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport Panel from \"./Panel\"\nimport CustomizeSection from \"./CustomizeSection\"\nimport {abilityOptions, auraOptions} from \"../../lib/options\"\nimport \"./Panel.css\"\n\nconst SettingsPanel = (props) => {\n\n    const {settings, currentPanel, didReset, onAbilitySet, onAuraSet, onClick, closePanel} = props\n\n    const {abilities, auras} = settings\n\n    const panel = \"settings\"\n    const header= \"Custom Settings\"\n    const panelClass = \"right-panel\"\n\n    const abilityButtonText = \"Update Abilities\"\n    const auraButtonText = \"Update Auras\"\n\n    const changesPendingText =\n`Changes pending...\nClick the button below to apply your changes`\n\n    const [currentAbilities, setCurrentAbilities] = useState(abilities)\n    const [currentAuras, setCurrentAuras] = useState(auras)\n    const [activeAbilitySection, setActiveAbilitySection] = useState(null)\n    const [activeAuraSection, setActiveAuraSection] = useState(null)\n    const [abilityChangesPending, setAbilityChangesPending] = useState(false)\n    const [auraChangesPending, setAuraChangesPending] = useState(false)\n\n    useEffect(() => {\n        setCurrentAuras(auras)\n        setCurrentAbilities(abilities)\n    }, [didReset])\n\n    useEffect(() => {\n        if(currentPanel !== panel) return\n        setActiveAbilitySection(Object.keys(abilities)[0])\n        setActiveAuraSection(Object.keys(auras)[0])\n    }, [currentPanel])\n\n    const handleAbilitySettingChange = (setting, key) => {\n        const newAbilities = {...currentAbilities, [key]: setting}\n        setCurrentAbilities(newAbilities)\n        setAbilityChangesPending(true)\n    }\n\n    const handleAuraSettingChange = (setting, key) => {\n        const newAuras = {...currentAuras, [key]: setting}\n        setCurrentAuras(newAuras)\n        setAuraChangesPending(true)\n    }\n\n    const handleAbilitySet = () => {\n        onAbilitySet(currentAbilities)\n        setAbilityChangesPending(false)\n    }\n\n    const handleAuraSet = () => {\n        onAuraSet(currentAuras)\n        setAuraChangesPending(false)\n    }\n\n    const showAbilityOptions = (e) => {\n        const settingKey = e.target.getAttribute(\"setting\")\n        setActiveAbilitySection(settingKey)\n    }\n\n    const showAuraOptions = (e) => {\n        const settingKey = e.target.getAttribute(\"setting\")\n        setActiveAuraSection(settingKey)\n    }\n\n    const reset = () => {\n        setCurrentAuras(auras)\n        setCurrentAbilities(abilities)\n        setAbilityChangesPending(false)\n        setAuraChangesPending(false)\n        setTimeout(() => {\n            setActiveAbilitySection(null)\n            setActiveAuraSection(null)\n        }, 500)\n    }\n\n    return (\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass} style={{transform: `translateX(${currentPanel === panel ? \"0px\": \"350px\"}`}}>\n            <div className=\"vertical-panel-content\">\n                <div className=\"panel-content-container\">\n                    <div className=\"panel-content-header\">Customize Abilities</div>\n                    <div className=\"settings-header-container\">\n                        {Object.keys(abilities)\n                        .filter(k => abilityOptions[k])\n                        .map(k => \n                            <div key={k} className={activeAbilitySection === k ? \"settings-header-active\" : \"settings-header\"} setting={k} onClick={showAbilityOptions}>{abilities[k].displayName}</div>    \n                        )}\n                    </div>\n                    {activeAbilitySection ? <CustomizeSection name={activeAbilitySection} setting={currentAbilities[activeAbilitySection]} options={abilityOptions[activeAbilitySection]} onChange={handleAbilitySettingChange}/> : null}\n                    <div className=\"panel-text-button-container\">\n                        <div className=\"panel-info-text-container\">\n                            {abilityChangesPending ? changesPendingText : null}\n                        </div>                  \n                        <div>\n                            <button className=\"panel-button\" onClick={handleAbilitySet}>{abilityButtonText}</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"panel-content-container\">\n                    <div className=\"panel-content-header\">Customize Auras</div>\n                        <div className=\"settings-header-container\">\n                            {Object.keys(auras)\n                            .filter(k => auraOptions[k])\n                            .map(k => \n                                <div key={k} className={activeAuraSection === k ? \"settings-header-active\" : \"settings-header\"} setting={k} onClick={showAuraOptions}>{auras[k].displayName}</div>    \n                            )}\n                        </div>\n                        {activeAuraSection ? <CustomizeSection name={activeAuraSection} setting={currentAuras[activeAuraSection]} options={auraOptions[activeAuraSection]} onChange={handleAuraSettingChange}/> : null}\n                        <div className=\"panel-text-button-container\">\n                            <div className=\"panel-info-text-container\">\n                                {auraChangesPending ? changesPendingText : null}    \n                            </div>\n                            <div>\n                                <button className=\"panel-button\" onClick={handleAuraSet}>{auraButtonText}</button>   \n                            </div>  \n                        </div>            \n                </div>\n            </div>\n        </Panel>      \n    )\n}\n\nexport default SettingsPanel","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport Panel from \"./Panel\"\nimport {keybinds} from \"../../lib/constants\"\nimport \"./Panel.css\"\nimport \"./Tooltip.css\"\n\nconst AbilityIndex = (props) => {\n\n    const {name, count, onChange, value} = props\n\n    const handleChange = (e) => {\n        onChange(parseInt(e.target.value), name)\n    }\n\n    return (\n        <div>\n            <select className=\"panel-dropdown\" value={value} onChange={handleChange}>\n                {[...Array(count).keys()].map(i => <option key={`${name}-index-${i}`} value={i+1}>{i+1}</option>)}\n            </select>\n        </div>\n    )\n}\n\nconst AbilityKeybindsPanel = (props) => {\n\n    const {abilities, currentPanel, onKeybind, setOrder, onToggle, onClick, closePanel} = props\n\n    const panel = \"abilitykeybinds\"\n    const header = \"Ability and Keybinds\"\n    const panelClass = \"bottom-panel\"\n\n    const defaultState = {\n        tooltip: \"\",\n        keybindText: \"\",\n        currentAbility: \"\"\n    }\n\n    const [tooltip, setTooltip] = useState(defaultState.tooltip)\n    const [keybindText, setKeybindText] = useState(defaultState.keybindText)\n    const [currentAbility, setCurrentAbility] = useState(defaultState.currentAbility)\n    const [abilityCount] = useState(Object.keys(abilities).length-1)\n\n    const handleClose = () => {\n        setTooltip(defaultState.tooltip)\n        setKeybindText(defaultState.keybindText)\n        setCurrentAbility(defaultState.currentAbility)\n\n        closePanel()\n    }\n\n    const currentAbilityRef = useRef(currentAbility)\n    currentAbilityRef.current = currentAbility\n\n    const showToolTip = (e) => {\n        setTooltip(e.target.alt)\n    }\n\n    const hideToolTip = () => {\n        setTooltip(\"\")\n    }\n\n    const prepareToBindAbility = (e) => {\n        let ability = e.target.getAttribute(\"ability\")\n        setCurrentAbility(ability)\n\n        setKeybindText(`Press any key to bind to ${abilities[ability].displayName}`)\n\n        document.addEventListener(\"keydown\", handleKeyDown, {once: true})\n        document.addEventListener(\"keypress\", handleKeyPress, {once: true})\n    }\n\n    const handleKeyDown = (event) => {\n        //check to see if we prevent default or not\n        const {key} = event\n\n        if(!isKeydownKey(key)) return\n\n        event.preventDefault()\n        bindAbility(key)\n\n        //if keybind was found, prevent default and bind ability\n\n        //if keybind was not found, return\n    }\n\n    const handleKeyPress = (e) => bindAbility(e.key)\n\n    const isKeydownKey = (key) => {     \n        if(key.match(/F[1-9]{1,2}/)) return true\n\n        return false\n    }\n\n    const formKeybindFromKey = (key) => {\n        if(keybinds[key]) \n            return {key, keybindText: keybinds[key]}\n        if(key.match(/^[a-z]$/)) \n            return {key, keybindText: key.toUpperCase() }\n        if(key.match(/^[A-Z]$/)) \n            return {key, keybindText: \"S-\" + key }\n        \n        return {key, keybindText: key}\n    }\n\n    const bindAbility = (key) => {\n        document.removeEventListener(\"keypress\", handleKeyPress)\n        \n        const keybind = formKeybindFromKey(key)\n        \n        let ability = currentAbilityRef.current \n\n        onKeybind(keybind, ability)\n        setKeybindText(`${abilities[ability].displayName} successfuly bound to ${keybind.keybindText}`)\n    }\n\n    const reset = () => {\n        document.removeEventListener(\"keydown\", handleKeyDown)\n        document.removeEventListener(\"keypress\", handleKeyPress)\n        setTooltip(defaultState.tooltip)\n        setKeybindText(defaultState.keybindText)\n        setCurrentAbility(defaultState.currentAbility)\n    }\n\n    return (\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} header={header} style={{transform: `translateY(${currentPanel === panel ? \"0px\": \"250px\"}`}} panelClass={panelClass} handleClose={handleClose}>\n            <div className=\"horizontal-panel-content\">\n                <div className=\"panel-content-header\">Change Abilities and Keybinds</div>\n                <div className=\"tooltip\">\n                    <span className=\"tooltip-text\" visibility={(!!tooltip).toString()}>\n                        {tooltip}\n                    </span>\n                </div>\n                <div className=\"panel-abilities-content\">\n                    <div className=\"panel-abilities-header\">\n                        Spell Order\n                    </div>\n                    <div className=\"panel-abilities-container\">\n                        {Object.keys(abilities).map(k => {\n                            if(k === \"void-eruption\") return\n                            return <div className=\"panel-ability-container\" key={k}>\n                                <img  \n                                    className=\"hover-pointer\" \n                                    alt={abilities[k].displayName}\n                                    ability={k} \n                                    onMouseOver={showToolTip}\n                                    onMouseOut={hideToolTip}\n                                    onClick={prepareToBindAbility}\n                                    src={abilities[k].icon}\n                                    height={50}\n                                    width={50}\n                                />\n                                <button className={`${abilities[k].disabled ? \"panel-button-secondary\" : \"panel-button\"}`} onClick={() => onToggle(k)}>{abilities[k].disabled ? \"Enable\" : \"Disable\"}</button>\n                                <AbilityIndex name={k} count={abilityCount} value={abilities[k].index} onChange={setOrder} />\n                            </div>\n                    })}\n                    </div>\n                </div>\n                <div>{keybindText ? keybindText : null}</div>\n            </div>\n        </Panel>\n    )\n}\n\nexport default AbilityKeybindsPanel","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport Panel from \"./Panel\"\n\nimport \"./Panel.css\"\n\nconst AboutPanel = (props) => {\n    const {currentPanel, onClick, closePanel} = props\n\n    const panel = \"about\"\n    const header= \"About\"\n    const panelClass = \"middle-panel\"\n\n    return (\n        <Panel panel={panel} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass}\n            style={{transform: `translateY(${currentPanel === panel ? \"0px\": \"min(-685px,-70vh)\"}`}}\n        >\n            <div className=\"middle-panel-content\">\n                <div className=\"panel-content-header\">About</div>\n                <div className=\"medium-text left-text panel-text-content\">\n                    <p>\n                    Voidform Optimizer is a thought experiment I had.\n                    </p>\n                    <p>\n                    I am convinced that many, although not all, players' grievances with Voidform are caused by the\n                    implementations of Voidform they have experienced, and not by the design of Voidform itself. Therefore I have made it my mission to allow others\n                    to experience Voidform in a myriad of ways; in hope that they realize it isn't inherently flawed, find what they most enjoy about it, and \n                    share those findings with others. Then, just maybe, as a community we can come to an agreement on how to <b>#savevoidform</b>.\n                    </p>\n                    <p>\n                    If you have any questions, feedback, or bugs to report, please feel free to DM me on Discord at Shot#1711.\n                    </p>\n\n                </div>\n            </div>\n        </Panel>      \n    )\n}\n\nexport default AboutPanel","export default [\n    {\n        header: \"New Article: Ramp\",\n        description: \"Ramp is a buzz-word used to express very valid complaints regarding Voidform. In this article I discuss how ramp works, \\\n        how it has worked in the past, and hopefully how it will work in the future.\"\n    },\n    {\n        header: \"New Article: Design Philosophy\",\n        description: \"This is the first of articles I will be creating. The Design Philosophy article gives detailed reasoning behind \\\n        each of the decisions I made while designing the Ryeshot's Shadowlands template.\"\n    },\n    {\n        header: \"New Template: Yvaelle's Shadowlands\",\n        description: \"Yvaelle had an interesting proposal for a static Voidform, so I decided to include support for it and created a template \\\n        based on their proposal.\"\n    },\n    {\n        header: \"New Ability: Bloodlust!\",\n        description: \"Let's be honest, it's hard to determine how Shadow truly feels until you feel it under lust. Luckily, Bloodlust has now \\\n        been added so you can have the true Shadow experience. The ability works the same way on live (without the debuff), and is not customizable.\"\n    },\n    {\n        header: \"New Template: Ryeshot's Shadowlands\",\n        description: \"This template reflects what I think the healthiest version of baseline Shadow looks like going into Shadowlands. \\\n        It will be updated regularly as I refine my beliefs on what is best for the spec.\"\n    },\n    {\n        header: \"Void Bolt Rank Two Removed!\",\n        description: \"Void Bolt rank two has been removed from the alpha, and therefore is no longer part of the alpha template or a \\\n        customizable option for Void Bolt. Good riddance.\"\n    },\n    {\n        header: \"New Domain!\",\n        description: \"Voidform Optimizer is now registered at voidform-optimizer.com.\"\n    },\n    {\n        header: \"Function Key Binding\",\n        description: \"Due to popular demand, function keys are now a valid keybind option. Just make sure to unbind should you wish to \\\n        perform any browser function key events (such as refreshing the page), since the settings will override that default behavior.\"\n    },\n    {\n        header: \"Spell Ordering!\",\n        description: \"You can now manually set the order of spells shown through the keybinds panel. You can also preserve these changes \\\n        by toggling include spell order while importing a template.\"\n    },\n    {\n        header: \"Power Infusion!\",\n        description: \"Customizable Power Infusion ability has been added! The ability's cooldown may be changed \\\n        and the aura's duration and resource generation can be changed. If desired, you can create alpha StM, Lucid, \\\n        and Legion Power Infusion from these settings.\"\n    },\n    {\n        header: \"Legion Templates!\",\n        description: \"New templates to satiate your Legion nostalgia. More to come in the future.\"\n    },\n    {\n        header: \"Shadowfiend\",\n        description: \"Customizable Shadowfiend ability has been added!\"\n    },\n    {\n        header: \"Templates\",\n        description: \"Premade templates may now be selected on import panel!\"\n    },\n    {\n        header: \"Devouring Plague\",\n        description: \"The recent Shadowlands Devouring Plague addition is now available to try out!\"\n    },\n    {\n        header: \"What's New?\",\n        description: \"Added a what's new dialogue to inform about recent changes to Voidform Optimizer.\"\n    }\n]","import React, {useState} from 'react';\nimport \"../forms/Form.css\"\nimport \"./Panel.css\"\nimport whatsNew from \"../../lib/whatsNew\"\n\nconst containerStyle = {\n    textAlign: \"left\",\n    marginBottom: \"20px\"\n}\n\nconst smallText = {\n    fontSize: \"15px\"\n}\n\nconst mediumText = {\n    fontSize: \"20px\"\n}\n\nconst WhatsNew = (props) => {\n    const title = \"What's New\"\n\n    const {onClose} = props\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content panel\">\n                <div className=\"form-title\">\n                    {title}\n                </div>           \n                <div>\n                    {whatsNew.map(item => \n                        <div style={containerStyle}>\n                            <b style={mediumText}>{item.header}</b>\n                            <div style={smallText}>\n                                {item.description}\n                            </div>\n                        </div>)}\n                </div>\n                <div>\n                    <button className=\"panel-button\" onClick={onClose}>Got it!</button>\n                </div>\n                <button className=\"panel-button panel-exit-button\" onClick={onClose}>x</button>\n            </div>\n        </div>\n    )\n}\n\nconst WhatsNewPanel = () => {\n\n    const header = \"What's New\"\n\n    const [showWhatsNew, setShowWhatsNew] = useState(false)\n\n    return (\n        <div>\n            <div className=\"panel-header hover-pointer\" onClick={() => setShowWhatsNew(true)}>{header}</div>\n            {showWhatsNew ? <WhatsNew onClose={() => setShowWhatsNew(false)} /> : null}\n        </div>\n    )\n}\n\nexport default WhatsNewPanel","export default {\n    \"mind-flay\": {\n        displayName: \"Mind Flay\",\n        index: 1,\n        keybind: {\n            key: \"1\",\n            keybindText: \"1\"\n        },\n        icon: \"images/mind-flay.jpg\"\n    },\n    \"mind-sear\": {\n        displayName: \"Mind Sear\",\n        index: 2,\n        keybind: {\n            key: \"2\",\n            keybindText: \"2\"\n        },\n        icon: \"images/mind-sear.jpg\"\n    },\n    \"mind-blast\": {\n        displayName: \"Mind Blast\",\n        index: 3,\n        keybind: {\n            key: \"3\",\n            keybindText: \"3\"\n        },\n        icon: \"images/mind-blast.jpg\"\n    },\n    \"void-bolt\": {\n        displayName: \"Void Bolt\",\n        index: 4,\n        keybind: {\n            key: \"4\",\n            keybindText: \"4\"\n        },\n        icon: \"images/void-bolt.jpg\"\n    },\n    \"void-eruption\": {\n        displayName: \"Void Eruption\",\n        index: 4,\n        keybind: {\n            key: \"4\",\n            keybindText: \"4\"\n        },\n        icon: \"images/void-eruption.jpg\",\n        unusable: true\n    },\n    \"shadow-word-death\": {\n        displayName: \"Shadow Word: Death\",\n        index: 5,\n        keybind: {\n            key: \"5\",\n            keybindText: \"5\"\n        },\n        icon: \"images/shadow-word-death.jpg\"\n    },\n    \"void-torrent\": {\n        displayName: \"Void Torrent\",\n        index: 6,\n        keybind: {\n            key: \"6\",\n            keybindText: \"6\"\n        },\n        icon: \"images/void-torrent.jpg\"\n    },\n    \"shadow-word-pain\": {\n        displayName: \"Shadow Word: Pain\",\n        index: 7,\n        keybind: {\n            key: \"7\",\n            keybindText: \"7\"\n        },\n        icon: \"images/shadow-word-pain.jpg\"\n    },\n    \"vampiric-touch\": {\n        displayName: \"Vampiric Touch\",\n        index: 8,\n        keybind: {\n            key: \"8\",\n            keybindText: \"8\"\n        },\n        icon: \"images/vampiric-touch.jpg\"\n    },\n    \"devouring-plague\": {\n        displayName: \"Devouring Plague\",\n        index: 9,\n        keybind: {\n            key: \"9\",\n            keybindText: \"9\"\n        },\n        icon: \"images/devouring-plague.jpg\",\n        unusable: true\n    },\n    \"shadowfiend\": {\n        displayName: \"Shadowfiend\",\n        index: 10,\n        keybind: {\n            key: \"0\",\n            keybindText: \"0\"\n        },\n        icon: \"images/shadowfiend.jpg\"\n    },\n    \"power-infusion\": {\n        displayName: \"Power Infusion\",\n        index: 11,\n        keybind: {\n            key: \"-\",\n            keybindText: \"-\"\n        },\n        icon: \"images/power-infusion.jpg\"\n    },\n    \"fae-blessings\": {\n        displayName: \"Fae Blessings\",\n        index: 12,\n        keybind: {\n            key: \"=\",\n            keybindText: \"=\"\n        },\n        icon: \"images/fae-blessings.jpg\"\n    },\n    \"bloodlust\": {\n        displayName: \"Bloodlust\",\n        index: 12,\n        keybind: {\n            key: \"=\",\n            keybindText: \"=\"\n        },\n        icon: \"images/bloodlust.jpg\"\n    }\n}","import React from \"react\"\n\nconst FormTextAreaField = (props) => {\n\n    const {value, id, label, className, placeHolder, onChange} = props\n\n    const handleChange = (e) => onChange(id, e.target.value)\n\n    return (\n        <div className={`form-field ${className}`}>\n            <label htmlFor={id}>{label}</label>\n            <div>\n                <textarea className=\"panel-text-area form-input-container\" id={id} value={value} placeholder={placeHolder} required={true} onChange={handleChange} />\n            </div>\n        </div>\n    )\n}\n\nexport default FormTextAreaField","import React from \"react\"\n\nconst FormTextField = (props) => {\n\n    const {value, id, label, placeHolder, onChange, required} = props\n\n    const handleChange = (e) => onChange(id, e.target.value)\n\n    return (\n        <div className=\"form-field\">\n            <label className=\"form-input-title\" htmlFor={id}>{label}</label>\n            <input className=\"panel-text-area form-input\" type=\"text\" id={id} value={value} placeholder={placeHolder} required={required} onChange={handleChange} />\n        </div>\n    )\n}\n\nexport default FormTextField","const email = window.Email\n\nconst formatBugReportContent = (body) => {\n    const appHeader = \"<h1>Bug Report for Voidform Optimizer</h1>\\n\"\n    const descriptionHeader = \"<h3>Give a brief description of the issue</h3>\"\n    //const reproductionHeader = \"### How can this issue be reproduced?\"\n    const expectedBehaviorHeader = \"<h3>What is the expected behavior?</h3>\"\n    const actualBehaviorHeader = \"<h3>What is the actual behavior?</h3>\"\n    const contactHeader = \"<h3>Contact Information</h3>\"\n\n    const headers = [descriptionHeader, expectedBehaviorHeader, actualBehaviorHeader, contactHeader]\n\n    const userContent = Object.keys(body).reduce((content, key, i) => {\n        if(!body[key]) return content\n        return content.concat([headers[i], body[key]])\n    }, []).join(\"\\n\")\n\n    return appHeader + userContent\n}\n\nconst sendBugReport = async (title, content) => {\n    const data = {\n        SecureToken: process.env.REACT_APP_SMTP_ACCESS_TOKEN,\n        From: process.env.REACT_APP_SENDER_GMAIL_USER,\n        To: process.env.REACT_APP_RECEIVER_GMAIL_USER,\n        Subject: title,\n        Body: content\n    }\n\n    const result = await email.send(data)\n\n    if(result !== \"OK\") throw new Error(result)\n}\n\nexport const submitBugReport = async (data, onSuccess, onFail) => {\n\n    const {title, ...body} = data\n\n    const content = formatBugReportContent(body)\n\n    try {\n        await sendBugReport(`[BUG] ${title}`, content)\n        onSuccess()\n    }\n    catch(err){\n        console.log(err)\n        onFail()\n    }\n}\n\nexport const createPendingTextTimer = (text, setText) => {\n    const dot = \".\"\n    let i = 1\n\n    setText(text)\n    \n    const timer = setInterval(() => {\n        const count = i % 4\n\n        setText(`${text}${dot.repeat(count)}`)\n\n        i++\n    }, 500);\n\n    return timer\n}\n","import React, {useState} from \"react\"\nimport Form from \"./Form\"\nimport FormTextAreaField from \"./FormTextAreaField\"\nimport FormTextField from \"./FormTextField\"\nimport {submitBugReport, createPendingTextTimer} from \"../../utils/bugreport\"\n\nconst fields = [{\n    id: \"bug-report-description\",\n    label: \"Description\",\n    className: \"form-field-small\"\n    // placeHolder: \"Enter a description of the bug...\"\n},\n{\n    id: \"bug-report-expected\",\n    label: \"Expected Behavior\",\n    className: \"form-field-medium\"\n    // placeHolder: \"Enter the expected behavior...\"\n},\n{\n    id: \"bug-report-actual\",\n    label: \"Actual Behavior\",\n    className: \"form-field-medium\"\n    // placeHolder: \"Enter the actual behavior...\"\n}]\n\nconst titleField = {\n    id: \"title\",\n    label: \"Title\"\n}\n\nconst contactField = {\n    id: \"contact\",\n    label: \"Contact (Optional)\"\n}\n\nconst formTitle = \"Bug Report\"\n\nconst formInfo = \"If the issue is UI related, please update your browser \\\nto the latest version before submitting.\"\n\nconst submitPending = \"Submitting\"\nconst submitSuccess = \"Bug report successfully submitted!\"\nconst submitFail = \"Failed to submit bug report\"\n\nconst BugReport = (props) => {\n\n    const {closeForm} = props\n    const [data, setData] = useState({})\n    const [canSubmit, setCanSubmit] = useState(true)\n    const [submitMessage, setSubmitMessage] = useState(\"\")\n\n    const onChange = (id, value) => {\n        setData({...data, [id]: value})\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        const timer = createPendingTextTimer(submitPending, setSubmitMessage)\n\n        const onSuccess = () => {\n            clearInterval(timer)\n            setSubmitMessage(submitSuccess)\n        }\n        const onFail = () => {\n            clearInterval(timer)\n            setSubmitMessage(submitFail)\n        }\n\n        submitBugReport(data, onSuccess, onFail)\n        setCanSubmit(false)\n    }\n\n    return <div className=\"modal\">\n        <div className=\"modal-content panel\">\n            <div className=\"form-title\">\n                {formTitle}\n            </div>\n            <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-info\">\n                    {formInfo}\n                </div>\n                <FormTextField value={data.title} {...titleField} required={true} onChange={onChange} />\n                {fields.map(f => <FormTextAreaField key={f.id} value={data[f.id]} {...f} onChange={onChange} />)}\n                <FormTextField value={data.contact} {...contactField} required={false} onChange={onChange} />\n                <div>\n                    <input className=\"panel-button\" type=\"submit\" value=\"Submit\" disabled={!canSubmit} />\n                </div>\n            </form>\n            <div>\n                {submitMessage}\n            </div>\n            <button className=\"panel-button panel-exit-button\" onClick={closeForm}>x</button>\n        </div>\n    </div>\n}\n\nexport default BugReport","import React, {useState} from \"react\"\nimport Form from \"./Form\"\nimport FormTextAreaField from \"./FormTextAreaField\"\nimport FormTextField from \"./FormTextField\"\n\nconst fields = []\n\nconst submitSuccess = \"Feature request successfully submitted!\"\nconst submitFail = \"Failed to submit feature request\"\n\nconst FeatureRequest = (props) => {\n\n    const {closeForm} = props\n\n    return <div className=\"modal\">\n        <div className=\"modal-content panel\">\n            Coming soon!\n            <button className=\"panel-button panel-exit-button\" onClick={closeForm}>x</button>\n        </div>\n    </div>\n}\n\nexport default FeatureRequest","import React, {useState} from \"react\"\nimport BugReport from \"./BugReport\"\nimport FeatureRequest from \"./FeatureRequest\"\nimport \"./Form.css\"\nimport \"../panels/Panel.css\"\nimport \"../panels/SettingOption.css\"\n\nconst Forms = (props) => {\n\n    const {pauseKeyEvents} = props\n\n    const [showBugReport, setShowBugReport] = useState(false)\n    const [showFeatureRequest, setShowFeatureRequest] = useState(false)\n\n    const handleFormClick = (setShow, show) => {\n        pauseKeyEvents(show)\n        setShow(show)\n    }\n\n    return (\n        <div className=\"forms-container\">\n            <div>\n                <button className=\"panel-button\" onClick={() => handleFormClick(setShowBugReport, true)}>Report a Bug</button>\n                <button className=\"panel-button\" onClick={() => handleFormClick(setShowFeatureRequest, true)}>Request a Feature</button>\n            </div>\n                {showBugReport ? <BugReport closeForm={() => handleFormClick(setShowBugReport, false)} /> : null} \n                {showFeatureRequest ? <FeatureRequest closeForm={() => handleFormClick(setShowFeatureRequest, false)} /> : null} \n        </div>\n    )\n}\n\nexport default Forms","export default [{\n    header: \"\",\n    content: \"This will be a detailed article on my design philosophy regarding the baseline health of Shadow and Voidform. \\\n    If you want to skip the reasoning behind my design decisions, you can try the design out yourself using the \\\"Ryeshot's \\\n    Shadowlands\\\" template on the main page. I will be breaking this article down by the changes made to each element of the \\\n    spec, and the reasons for those changes.\"\n},\n{\n    header: \"Voidform\",\n    content: \"The core of Voidform in my mind boils down to two things. It is a self-perpetuating state that mimics the descent \\\n    into madness. It also enables Void Bolt. Therefore I made Voidform do these two things and only these two things. Get rid of \\\n    borrowed power (good riddance Mass Hysteria and Chorus of Insanity), get rid of Lingering Insanity (more reason will be \\\n    provided later), get rid of Mind Blast cooldown reduction (why did this exist?). \\\n    \\n\\n\\\n    Voidform now immediately grants 10% haste and grants an extra 1% haste per stack while in Voidform. Entering Voidform \\\n    should immediately be noticeable due to the rotation quickening immediately. Additionally, unlike existing Voidform at \\\n    .5% haste per stack, you should be able to feel the quickening pace of your rotation while you remain in Voidform. You \\\n    should now feel like you are going insane while in Voidform!\"   \n},\n{\n    header: \"Shadowform\",\n    content: \"Because of how Voidform is designed, Shadowform by necessity must be slow-paced. If you want to think about \\\n    Voidform as the high, then Shadowform is the low. There needs to be some time between Voidforms so that it is not \\\n    thought of as the default state, otherwise the player will become desensitized to its effects. This time should be \\\n    just long enough to begin wanting Voidform again, but not long enough to experience fatigue from the lack of Voidform.\"\n},\n{\n    header: \"Mind Blast\",\n    content: \"Mind blast has two charges baseline. I think the reason is pretty self apparent, but for those who aren't \\\n    aware: Void Bolt and Mind Blast cause an effect call clashing, which means they come off cooldown at the same time. \\\n    This causes the lower priority spell (in this case Mind Blast) to be off cooldown during the global of the higher priority \\\n    spell (Void Bolt). Adding a second charge to Mind Blast removes this issue, since Mind Blast will continue \\\n    recharging when its cooldown clashes with Void Bolt.\\\n    \\n\\n\\\n    Mind Blast now generates 25 Insanity. This makes Shadowform's length shorter and makes less of a dependency of casting \\\n    Mind Flay to generate Insanity. You can now generate more Insanity while moving because your Insanity budget now \\\n    resides mostly in Void Bolt and Mind Blast (due to it recharging while moving).\\\n    \\n\\n\\\n    Mind blast no longer has its cooldown reduced while in Voidform. There was no reason for this to exist so I removed it.\"\n},\n{\n    header: \"Void Bolt\",\n    content: \"Now generates 15 Insanity. Because I want Mind Blast to be the Insanity nuke of the spec, I needed to reduce \\\n    Void Bolt's Insanity generation so generation between the two spells did not feel too similar.\" \n},\n{\n    header: \"Devouring Plague\",\n    content: \"Blizzard added Devouring Plague with the express purpose of having an option for spending Insanity in content \\\n    that does not support Voidform. I expanded upon this purpose and designed an ability which I believe to be a compelling \\\n    skill to press no matter the content.\\\n    \\n\\n\\\n    Devouring Plague spends all Insanity and generates 30 Insanity over its duration. Due to spending all Insanity, Devouring \\\n    Plague can now be used as an option to exit Voidform at will. It can also be used as (one of) the last spell in your \\\n    Voidform; scraping for any remaining Insanity and hurling it at your foe. Lastly, it can be used out of Voidform to \\\n    deal damage to an enemy that either will not last for Voidform's duration, or should you wish to do more priority damage \\\n    to that target.\\\n    \\n\\n\\\n    The fact that Devouring Plague also generates Insanity over its duration means that after using it you can get a faster \\\n    cast of another Devouring Plague or Void Eruption.\"\n},\n{\n    header: \"Lingering Insanity\",\n    content: \"Lingering Insanity has been removed. No talent, not baseline; gone, poof. In a world where Voidform has base \\\n    haste, I could not think of a valid reason to keep Lingering Insanity. The purpose for Lingering Insanity is to smooth \\\n    the transitions between Voidforms. Not only is that counter to the design of Shadowform as explained above, it is no \\\n    longer necessary due to the duration in Shadowform being tolerable and entering Voidform having an immediate impact \\\n    on the pacing of the gameplay.\"\n},\n{\n    header: \"Starting Insanity\",\n    content: \"Now gain 30 Insanity while out of combat. This alleviates the pain point for having the first Voidform of \\\n    a fight take longer than every other one. It also provides quick options for using Insanity in content where casting \\\n    Void Eruption is not the only option.\"\n},\n{\n    header: \"Insanity Drain\",\n    content: \"Insanity drain was adjusted such that you can reach a soft cap of 25 stacks at entry-raid levels of haste. \\\n    If you wish to know the exact numbers, Voidform starts at a drain of 6 Insanity per second, which increases at a rate of \\\n    .66 Insanity per stack.\"\n}\n]","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Article.css\"\n\nconst homeUrl = \"/\"\nconst home = \"Voidform Optimizer\"\n\nconst Article = (props) => {\n\n    const {title, sections} = props\n\n    return (\n        <div className=\"sub-page\">\n            <header className=\"App-header header-panel\">\n                <div className=\"sub-page-header\">\n                    <div className=\"sub-page-title\">{title}</div>\n                </div>\n                <div className=\"page-nav-container\">\n                    <Link className=\"page-nav-link\" to={homeUrl}>\n                        <div className=\"page-nav-text\">{home}</div>\n                    </Link>\n                </div>\n            </header>\n            <div className=\"sub-page-content-container\">\n                {sections.map(s => (\n                    <div>\n                        <h3>{s.header}</h3>\n                        <div>{s.content}</div>\n                    </div>\n                ))}\n            </div>\n            <div className=\"sub-page-asset-container\"></div>   \n        </div>\n    )\n}\n\nexport const ArticleLink = (props) => {\n\n    const {title, url} = props\n\n    return (\n    <div>\n        <Link className=\"page-nav-link\" to={url}>\n            <div className=\"panel-header hover-pointer\">{title}</div>\n        </Link>\n    </div>\n    )\n}\n\nexport default Article\n","import React from \"react\"\nimport sections from \"../../lib/articles/designPhilosophy\"\nimport Article, {ArticleLink} from \"./Article\"\n\nconst title = \"Design Philosophy\"\nconst url = \"/articles/design-philosophy\"\n\nconst DesignPhilosophy = () => {\n    return (\n        <Article title={title} sections={sections} />\n    )\n}\n\nexport const DesignPhilosophyLink = () => {\n    return (\n        <ArticleLink title={title} url={url} />\n    )\n}\n\nexport default DesignPhilosophy","export default [{\n    header: \"\",\n    content: \"I need to address ramp because it is the largest pain point I have noticed regarding Voidform. Now, ramp is a \\\n    very contentious topic so I will discuss what ramp means when it comes to what we have experienced thus far, and what it \\\n    can mean in the future.\\\n    \\n\\n\\\n    Ramp, by my self-proclaimed definition, is a damage pattern where you start at a weaker state, end at your strongest state, \\\n    and there is some transition of the strength of your state over time.\"\n},\n{\n    header: \"Past Ramp Designs\",\n    content: \"I call this section past ramp designs, because this is the ramp we have experienced for the entirety of Voidform's \\\n    existence, and for the sake of it and Shadow I pray we do not experience ramp in this form again.\\\n    \\n\\n\\\n    Borrowed power, in the form of Mass Hysteria in Legion and Chorus of Insanity/Spiteful Apparitions in Battle for Azeroth, \\\n    has created unhealthy ramp patterns for spec. In Legion, because of how the benefits of borrowed power compound with the \\\n    benefits of Voidform, Voidform stacks had significantly more power budget at the latest-most part of it. For this reason, \\\n    leaving Voidform early, by any means, lead to excessive punishment on the player. In Battle for Azeroth, Voidform stacks \\\n    had even more backloaded power because you needed to end Voidform in order to receive the benefit. So either you get too few stacks \\\n    from Voidform and leave early, or you leave at the right time and are unable to benefit from the stacks you attained (due to not being \\\n    able to attack a target and maintain Voidform). Not only did both of these cause excessive punishment to the player, but the performance \\\n    of a Voidform was dependent on the performance of the previous Voidform, due to benefits from Voidform lasting quite a long ways into the \\\n    next one. A term which I coin \\\"Voidform dependency\\\", and I believe this to be unhealthy for the spec to have.\\\n    \\n\\n\\\n    Lingering Insanity is also a major offender when it comes to ramp. Due to its implementation, except for 7.0 in Legion, Lingering \\\n    Insanity had lasting effects into the next Voidform, which means you were first at your most powerful the second Voidform of any \\\n    encounter. Lingering Insanity also adds more dependency to Voidform stacks, which means failing to attain stacks, or failing to \\\n    act while Lingering Insanity stacks are active, leads to excessive punishment.\"    \n},\n{\n    header: \"Ideal Ramp\",\n    content: \"Now that we have established the pitfalls of past ramp designs, let us now explore how to correct those pitfalls into \\\n    an ideal ramp pattern.\\\n    \\n\\n\\\n    First I need to define what I mean when I say \\\"excessive punishment\\\". In my mind, excessive punishment is when the player is \\\n    unfairly punishment for failing, for whatever reason, to achieve a goal. In the case of Voidform, that goal is Voidform, and \\\n    therefore the punishment should be losing Voidform. Any other negative effects I would deem as excessive punishment.\\\n    \\n\\n\\\n    So how do we correct excessive punishment? That's simple - do not let it exist. The punishment for falling out of Voidform should \\\n    be, and should only be, losing Voidform. This is one reason Lingering Insanity was removed from my Shadowlands design.\\\n    \\n\\n\\\n    Correcting Voidform dependency is another easy one. If there exist any rewards after ending a Voidform, do not let them influence \\\n    the next Voidform. In my Shadowlands design the only reward I have included baseline is Devouring Plague, should one use it in while \\\n    in Voidform. Used this way, Devouring Plague's quick Insanity generation lends to reaching the next Voidform faster while preventing \\\n    it from influencing the performance of the next Voidform.\\\n    \\n\\n\\\n    Now let's discuss about how to balance this ideal ramp damage pattern. Again it's relatively simple, let us make the weakest state \\\n    not too weak, and the strongest state not too strong. Going into Shadowform from Voidform should give you a damage increase, but \\\n    not enough of a damage increase make damage in Shadowform feel like nothing. And now that the ramp of Voidform is mostly in Shadowform, \\\n    we can reach a pretty strong state rather quickly. While stacking haste might not be a compelling reason to extend Voidform for long \\\n    purely for damage, the quickening pace of the rotation from that stacking haste is.\"\n}]","import React from \"react\"\nimport sections from \"../../lib/articles/ramp\"\nimport Article, {ArticleLink} from \"./Article\"\n\nconst title = \"Ramp\"\nconst url = \"/articles/ramp\"\n\nconst Ramp = () => {\n    return (\n        <Article title={title} sections={sections} />\n    )\n}\n\nexport const RampLink = () => {\n    return (\n        <ArticleLink title={title} url={url} />\n    )\n}\n\nexport default Ramp","export default (state, action) => {\n    if(!action.category === \"SPELL\") return state\n    \n    const newState = JSON.parse(JSON.stringify(state))\n    const payload = action.payload\n\n    switch(action.type) {\n        case \"GLOBAL_COOLDOWN_START\":\n            newState.globalCooldown = payload.gcd\n            newState.globalCooldownStartTime = payload.time\n            break\n        case \"GLOBAL_COOLDOWN_END\":\n            newState.globalCooldownStartTime = 0\n            break\n        case \"ABILITY_CAST_SUCCESS\":\n            var {name} = payload\n            newState.cooldowns[name].castStartTime = 0\n            newState.cooldowns[name].castEndTime = 0\n\n            if(newState.casting) {\n                newState.cooldowns[newState.casting.name].castStartTime = 0\n                newState.cooldowns[newState.casting.name].castEndTime = 0\n                delete newState.casting\n            }\n            break\n        case \"ABILITY_COOLDOWN_START\":\n            var {name, time} = payload\n            newState.cooldowns[name].startTime = time\n            break\n        case \"ABILITY_COOLDOWN_END\":\n            var {name} = payload\n            newState.cooldowns[name].startTime = 0\n            break\n        case \"ABILITY_CHARGE_UPDATE\":\n            var {name, charges} = payload\n            newState.cooldowns[name].currentCharges = charges\n            break\n        case \"ABILITY_CAST_START\":\n            var {name, displayName, time, duration} = payload\n            newState.cooldowns[name].castStartTime = time\n            newState.cooldowns[name].castEndTime = time + duration\n            if(newState.casting) {\n                newState.cooldowns[newState.casting.name].castStartTime = 0\n                newState.cooldowns[newState.casting.name].castEndTime = 0\n            }\n            newState.casting = {\n                duration,\n                name,\n                displayName,\n                direction: 1,\n                time\n            }\n            break\n        case \"ABILITY_CHANNEL_START\":\n            var {name, displayName, time, duration, baseChannelTime, currentTicks} = payload\n            var ability = newState.cooldowns[name]\n\n            newState.cooldowns[name] = {\n                ...ability,\n                castStartTime: time,\n                castEndTime: time + duration,\n                baseChannelTime,\n                currentTicks\n            }\n\n            if(newState.casting && name !== newState.casting.name) {\n                newState.cooldowns[newState.casting.name].castStartTime = 0\n                newState.cooldowns[newState.casting.name].castEndTime = 0\n            }\n            newState.casting = {\n                duration,\n                name,\n                displayName,\n                direction: 0,\n                time\n            }\n            break\n        case \"ABILITY_CHANNEL_UPDATE\":\n            var {name} = payload\n            newState.cooldowns[name].currentTicks--\n            break\n        case \"ABILITY_CHANNEL_END\":\n            var {name} = payload\n            var ability = newState.cooldowns[name]\n\n            newState.cooldowns[name] = {\n                ...ability,\n                castStartTime: 0,\n                castEndTime: 0,\n                currentTicks: 0\n            }\n            if(newState.casting && name === newState.casting.name) delete newState.casting\n            break\n    }\n\n    return newState\n\n}","const handleAuraPandemic = (aura, now) => {\n    const endTime = aura.startTime + aura.maxDuration\n    const baseDuration = aura.baseDuration\n    const remaining = endTime - now\n    const pandemicDuration = Math.min(.3 * baseDuration, remaining)\n\n    aura.maxDuration = baseDuration + pandemicDuration\n    aura.startTime = now\n  }\n\nexport default (state, action) => {\n  if(!(action.category === \"AURA\" || action.category === \"STAT\")) return state\n  const newState = JSON.parse(JSON.stringify(state))\n  const payload = action.payload\n  const voidform = newState.voidform\n  const lingeringInsanity = newState.lingeringInsanity\n\n  switch(action.type) {\n    case \"HASTE_SET\":\n      var {source, haste} = payload\n      newState[source].haste = haste\n      break\n    case \"HASTE_UPDATE\":\n      var {source, haste} = payload\n      newState[source].haste += haste\n      break\n    case \"HASTE_RESET\":\n      var {source} = payload\n      newState[source].haste = 0\n      break\n    case \"VOIDFORM_UPDATE\":\n      voidform.stacks++\n      voidform.haste += payload\n      break;\n    case \"VOIDFORM_START\":\n      voidform.active = true\n      voidform.stacks = 1\n      break;\n    case \"VOIDFORM_END\":\n      var {time, startingHaste} = payload\n      lingeringInsanity.active = true\n      lingeringInsanity.stacks = voidform.stacks\n      lingeringInsanity.haste = Math.round((voidform.haste - startingHaste)*1000)/1000\n      lingeringInsanity.startTime = time\n      voidform.stacks = 0\n      voidform.haste = 0\n      break;\n    case \"LINGERING_INSANITY_START\":\n      var {haste, stacks} = payload\n      lingeringInsanity.haste = haste\n      lingeringInsanity.stacks = stacks\n      break;\n    case \"LINGERING_INSANITY_UPDATE\":\n      lingeringInsanity.haste += payload\n      lingeringInsanity.stacks--\n      if(lingeringInsanity.haste <= 0) lingeringInsanity.haste = 0\n      break;\n    case \"LINGERING_INSANITY_END\":\n      lingeringInsanity.active = false\n      lingeringInsanity.stacks = 0\n      lingeringInsanity.haste = 0\n      lingeringInsanity.startTime = 0\n      break;\n    case \"INSANITY_DRAIN_PAUSE_START\":\n      voidform.paused = true\n      break\n    case \"INSANITY_DRAIN_PAUSE_END\":\n      voidform.paused = false\n      break\n    case \"AURA_START\":\n      var {name, time} = payload\n      var aura = newState[name]\n      aura.active ? handleAuraPandemic(aura, time) : aura.active = true\n      break\n    case \"AURA_BEGIN\":\n      var {name, time, duration, maxStacks} = payload\n      newState[name].startTime = time\n      newState[name].maxDuration = duration\n      newState[name].baseDuration = duration\n      if(maxStacks) newState[name].stacks = 1\n      break\n    case \"AURA_REFRESH\":\n      var {name, time, maxStacks } = payload\n      const currentStacks = newState[name].stacks\n      newState[name].startTime = time\n      if(maxStacks && currentStacks < maxStacks) newState[name].stacks++\n      break\n    case \"AURA_END\":\n      var {name} = payload\n      newState[name].active = false\n      newState[name].startTime = 0\n      newState[name].stacks = 0\n      break\n    case \"AURA_STACK_UPDATE\":\n      var {name, stacks} = payload\n      newState[name].stacks = stacks\n      break\n  }\n\n  return newState\n}","export default (state, action) => {\n    if(!action.category === \"EFFECT\") return state\n    switch(action.type){\n        case \"EFFECT_ACTIVATE\":\n            var {name} = action.payload\n            var effect = state[name]\n            return {...state, [name]: {...effect, active: true}}\n        case \"EFFECT_DEACTIVATE\":\n            var {name} = action.payload\n            var effect = state[name]\n            return {...state, [name]: {...effect, active: false}}\n    }\n\n    return state\n}","import defaultAbilities from \"../../lib/abilities\"\nimport defaultEffects from \"../../lib/effects\"\n\nconst inactiveAbilities = [\"void-eruption\", \"devouring-plague\"]\nconst cooldowns = Object.keys(defaultAbilities).reduce((obj, a) => {\n    obj[a] = {}\n    return obj\n}, {})\n\nexport default {\n    resource: 0,\n    auras: {\n      stats: {\n        haste: 0\n      },\n      voidform: {\n        active: false,\n        stacks: 0,\n        haste: 0,\n        paused: false,\n      },\n      lingeringInsanity: {\n        active: false,\n        stacks: 0,\n        haste: 0\n      },\n      \"shadow-word-pain\": {\n        active: false\n      },\n      \"vampiric-touch\": {\n        active: false\n      },\n      \"devouring-plague\": {\n        active: false\n      },\n      \"shadowfiend\": {\n        active: false\n      },\n      \"power-infusion\": {\n        active: false,\n        haste: 0\n      },\n      \"fae-blessings\": {\n        active: false\n      },\n      \"bloodlust\": {\n        active: false,\n        haste: 0\n      },\n      \"dark-thoughts\": {\n        active: false,\n        stacks: 0\n      }\n    },\n    abilities: {\n      cooldowns,\n      globalCooldown: 0\n    },\n    effects: defaultEffects\n  }","export default {\n    \"void-bolt-cooldown-reduce-shadowfiend\": { active: false },\n    \"dark-thoughts\": { active: true }\n}","import abilitiesReducer from \"./abilitiesReducer\"\nimport aurasReducer from \"./aurasReducer\"\nimport effectReducer from \"./effectsReducer\"\nimport defaultState from \"./defaultState\"\n\nconst updateAbilitiesAfterResourceChange = (abilitySettings, abilities, resource, voidform) => {\n    Object.keys(abilitySettings).forEach(k => {\n        const setting = abilitySettings[k]\n        const ability = abilities[k]\n        const unusable = (voidform.active && !!setting.requireNoVoidform) || (!voidform.active && !!setting.requireVoidform)\n        if(!ability) return\n        if(!setting.resourceCost) {\n          ability.unusable = unusable\n          return\n        }\n        if(setting.costType === \"dump\") \n          ability.unusable = resource === 0 || unusable\n        else {\n          ability.unusable = resource < setting.resourceCost || unusable\n        }\n    })\n}\n\nexport default (auraSettings, abilitySettings, abilities) => [(state, action) => {\n    const {auras} = state\n    const payload = action.payload\n\n    if(!action.category || action.category === \"RESOURCE\")\n        switch(action.type) {\n            case \"RESET\":\n                return {...defaultState, resource: auraSettings.stats.startingInsanity }\n            case \"RESET_ABILITIES\":\n                return {...defaultState, resource: auraSettings.stats.startingInsanity, auras: state.auras}\n            case \"RESET_AURAS\":\n                return {...state, resource: auraSettings.stats.startingInsanity, auras: {...defaultState.auras, stats: state.auras.stats} }\n            case \"RESOURCE_UPDATE\":\n                var {name, resource, resourceCost} = payload\n                resourceCost = resourceCost || 0\n                resource = (resource + (resourceCost * -1))   \n                resource = Math.max(Math.min(state.resource + resource, 100), 0)\n\n                updateAbilitiesAfterResourceChange(abilitySettings, abilities, resource, auras.voidform)\n\n                return {...state, resource}\n            case \"ABILITY_ACTIVATE\":\n                var {name} = payload\n                abilities[name].unusable = false\n                return state\n            case \"ABILITY_DEACTIVATE\":\n                var {name} = payload\n                abilities[name].unusable = true\n                return state\n        }\n        \n    return {\n        resource: state.resource,\n        abilities: abilitiesReducer(state.abilities, action),\n        auras: aurasReducer(state.auras, action),\n        effects: effectReducer(state.effects, action)\n    }\n}, defaultState]","export const globalEffects = {\n    \"RESOURCE_UPDATE\": [{\n        type: \"TRIGGER\",\n        effects: [\n            \"calculate-resource\"\n        ]\n    }]\n}\n\nexport const auraEffects = {\n    \"fae-blessings\": {\n        onEvent: {\n            \"AURA_START\": [{\n                type: \"ACTIVATE\",\n                effects: [\n                    \"void-bolt-cooldown-reduce-fae-blessings\",\n                    \"void-bolt-cooldown-reduce-shadowfiend\"\n                ]\n            }],\n            \"AURA_END\": [{\n                type: \"DEACTIVATE\",\n                effects: [\n                    \"void-bolt-cooldown-reduce-fae-blessings\",\n                    \"void-bolt-cooldown-reduce-shadowfiend\"\n                ]\n            }]\n        }\n    }\n}\n\nexport const abilityEffects = {\n    \"void-bolt\": {\n        onEvent: {\n            \"CAST_SUCCESS\": [{\n                type: \"TRIGGER\",\n                effects: [\n                    \"void-bolt-cooldown-reset\",\n                    \"void-bolt-cooldown-reduce-fae-blessings\",\n                    \"void-bolt-cooldown-reduce-shadowfiend\"\n                ]\n            }]\n        }\n    },\n    \"void-eruption\": {\n        onEvent: {\n            \"CAST_SUCCESS\": [{\n                type: \"TRIGGER\",\n                effects: [\n                    \"voidform-deactivate-void-eruption\"\n                ]\n            }]\n        }\n    },\n    \"mind-flay\": {\n        onEvent: {\n            \"CHANNEL_UPDATE\": [{\n                type: \"TRIGGER\",\n                effects: [\n                    \"dark-thoughts\"\n                ]\n            }]\n        }\n    },\n    \"mind-sear\": {\n        onEvent: {\n            \"CHANNEL_UPDATE\": [{\n                type: \"TRIGGER\",\n                effects: [\n                    \"dark-thoughts\"\n                ]\n            }]\n        }\n    },\n    \"mind-blast\": {\n        onEvent: {\n            \"CAST_SUCCESS\": [{\n                type: \"REMOVE\",\n                effects: [\n                    \"dark-thoughts\"\n                ]\n            },{\n                type: \"UPDATE\",\n                effects: [\n                    \"dark-thoughts\"\n                ]\n            }]\n        }\n    }\n}","export default {\n    isAbilityEnabled: (name) => {\n        if(name === \"fae-blessings\") return false\n        return true\n    },\n    isEffectEnabled: (name) => {\n        if(name === \"dark-thoughts\") return false\n        return true\n    }\n}","import toggle from \"./featureToggle\"\n\nconst effectTargets = {\n    \"void-bolt-cooldown-reset\": [\"void-bolt\"],\n    \"void-bolt-cooldown-reduce-fae-blessings\": [\"fae-blessings\"],\n    \"void-bolt-cooldown-reduce-shadowfiend\": [\"shadowfiend\"]\n}\n\nconst effectTriggered = (chance) => Date.now() % 100 < (chance * 100)\n\nconst original = {}\n\nexport default {\n    \"void-bolt-cooldown-reset\": {\n        trigger: ({events, state}) => {\n            const {effects, effectSettings} = state\n            const name = \"void-bolt-cooldown-reset\"\n            if(!effectSettings) return events\n            if(!effectSettings[name]) return events\n            if(!effects[name]) return events\n\n            const targets = effectTargets[name]\n            const {chance} = effectSettings[name]\n\n            if(!effects[name].active) return events\n            \n            const triggered = effectTriggered(chance)\n\n            if(!triggered) return events\n\n            const type = \"ABILITY_COOLDOWN_END\"\n            const effectEvents = targets.map(name => ({\n                type,\n                payload: { name }\n            }))\n\n            return [...events, ...effectEvents]\n        }\n    },\n    \"void-bolt-cooldown-reduce-fae-blessings\": {\n        trigger: ({events, state}) => {\n            const {effects, effectSettings, auras, abilities} = state\n            const name = \"void-bolt-cooldown-reduce-fae-blessing\"\n            if(!effectSettings) return events\n            if(!effectSettings[name]) return events\n            if(!effects[name]) return events\n\n            const targets = effectTargets[name]\n            const {chance, effectTime} = effectSettings[name]\n\n            if(!effects[name].active) return events\n            if(!auras[\"fae-blessings\"].active) return events\n\n            const triggered = effectTriggered(chance)\n\n            if(!triggered) return events\n\n            const type = \"ABILITY_COOLDOWN_START\"\n            const effectEvents = targets.map(name => {\n                const ability = abilities.cooldowns[name]\n                const time = ability.startTime ? ability.startTime - effectTime : 0\n                return {\n                    type,\n                    payload: {\n                        name,\n                        time\n                    }\n                }\n            })\n\n            return [...events, ...effectEvents]\n            \n        }\n    },\n    \"void-bolt-cooldown-reduce-shadowfiend\": {\n        trigger: ({events, state}) => {\n            const {effects, effectSettings, auras, abilities} = state\n            const name = \"void-bolt-cooldown-reduce-shadowfiend\"\n            if(!effectSettings) return events\n            if(!effectSettings[name]) return events\n            if(!effects[name]) return events\n\n            const targets = effectTargets[name]\n            const {effectTime} = effectSettings[name]\n\n            if(!effects[name].active) return events\n\n            const type = \"ABILITY_COOLDOWN_START\"\n            const effectEvents = targets.map(name => {\n                const ability = abilities.cooldowns[name]\n                const time = ability.startTime ? ability.startTime - effectTime : 0\n                return {\n                    type,\n                    payload: {\n                        name,\n                        time\n                    }\n                }\n            })\n\n            const stackEvent = {\n                type: \"AURA_STACK_UPDATE\",\n                payload: {\n                    name: \"fae-blessings\",\n                    stack: -1\n                }\n            }\n            return [...events, ...effectEvents, stackEvent]\n        }\n    },\n    \"voidform-deactivate-void-eruption\": {\n        trigger: ({events}) => {\n            const name = \"voidform-deactivate-void-eruption\"\n            const type = \"ABILITY_DEACTIVATE\"\n\n            const effectEvent = {\n                type,\n                payload: {\n                    name: \"void-eruption\"\n                }\n            }\n\n            return [...events, effectEvent]\n        }\n    },\n    \"calculate-resource\": {\n        trigger: ({events, state}) => {\n            return events\n        }\n    },\n    \"dark-thoughts\": {\n        trigger: ({events, state}) => {\n            const {effects, effectSettings, auras, auraSettings, abilitySettings, abilities} = state\n            const name = \"dark-thoughts\"\n            if(!toggle.isEffectEnabled(name)) return events\n            if(!effectSettings?.[name]) return events\n            if(!effects?.[name].active) return events\n            const {procChance} = effectSettings[name]\n            const dots = [\"shadow-word-pain\", \"vampiric-touch\", \"devouring-plague\"]\n            const currentChance = dots.reduce((sum, dot) => {\n                if(auras[dot] && auras[dot].active) sum += procChance\n                return sum\n            }, 0)\n            if(!effectTriggered(currentChance)) return events\n            const abilityName = \"mind-blast\"\n            const mindblast = abilitySettings[abilityName]\n            const abilityState = abilities.cooldowns[abilityName]\n            const auraState = auras[name]\n            const currentCharges = !abilityState.startTime ? 1 : 0\n            const charges = abilityState.currentCharges || currentCharges\n            const maxStacks = auraSettings[name].maxStacks\n            const maxCharges = mindblast.charges + maxStacks\n            const time = Date.now()\n            if(charges < maxCharges){\n                events.push({\n                    type: \"ABILITY_CHARGE_UPDATE\",\n                    payload: {\n                        name: abilityName,\n                        charges: Math.min(charges + 1, maxCharges)\n                    }\n                })\n            }\n            if(auraState.active){\n                events.push({\n                    type: \"AURA_REFRESH\",\n                    payload: { \n                        name,\n                        time,\n                        maxStacks\n                     }\n                })\n            }\n            if(!auraState.active){\n                events.push({\n                    type: \"AURA_START\",\n                    payload: { \n                        name,\n                        time\n                    }\n                })\n                original[\"mind-blast\"] = {...mindblast}\n                mindblast.casttime = 0\n                mindblast.charges = maxCharges\n            }\n\n            return events\n        },\n        remove: ({events, state}) => {\n            const {effects, effectSettings, auras, auraSettings, abilitySettings, abilities} = state\n            const name = \"dark-thoughts\"\n            if(!toggle.isEffectEnabled(name)) return events\n            if(!effectSettings?.[name]) return events\n            if(!effects?.[name].active) return events\n            if(!auras[name].active) return events\n\n            const auraState = auras[name]\n            const mindblast = abilitySettings[\"mind-blast\"]\n\n            events.push({\n                type: \"AURA_STACK_UPDATE\",\n                payload: {\n                    name: name,\n                    stacks: auraState.stacks - 1\n                }\n            })\n\n            if(auraState.stacks - 1 <= 0){\n                mindblast.casttime = original[\"mind-blast\"].casttime\n                mindblast.charges = original[\"mind-blast\"].charges\n            }\n\n            return events\n        },\n        update: ({events, state}) => {\n            const {auras, abilities} = state\n            const name = \"dark-thoughts\"\n            if(!toggle.isEffectEnabled(name)) return events\n            if(!auras[name].active) return events\n            const castingAbility = abilities.casting?.name\n            if(castingAbility !== \"mind-flay\" && castingAbility !== \"mind-sear\") return events\n            return events.filter(e => e.type !== \"ABILITY_CAST_SUCCESS\")\n        }\n    }\n}","import {globalEffects, auraEffects, abilityEffects} from \"../lib/eventEffects\"\nimport effects from \"./effects\"\n\nclass EffectHandler {\n    constructor(state, effects){\n        this.state = state\n        this.effects = effects\n    }\n\n    static forAbility(state){\n        return new EffectHandler(state, abilityEffects)\n    }\n    static forAura(state){\n        return new EffectHandler(state, auraEffects)\n    }\n\n    getGlobalEffects(events){\n        return Object.keys(globalEffects).reduce((effects, k) => {\n            if(events.find(e => e.type === k))\n                effects = [...effects, ...globalEffects[k]]\n            return effects\n        }, [])\n    }\n\n    addEventEffects(source, event, effects){\n        const sourceEffects = this.effects[source]\n        if(!sourceEffects) return effects\n        const eventEffects = sourceEffects.onEvent[event] || []\n        return [...effects, ...eventEffects]\n    }\n\n    transformEvents(source, event, data){\n        const {events} = data\n        let eventEffects = this.getGlobalEffects(events)\n        eventEffects = this.addEventEffects(source, event, eventEffects)\n        if(eventEffects.length === 0) return events\n\n        eventEffects.forEach(({type, effects}) => {\n            switch(type){\n                case \"TRIGGER\":\n                    this.handleEffectTrigger(effects, data)\n                    return\n                case \"REMOVE\":\n                    this.handleEffectRemove(effects, data)\n                    return\n                case \"UPDATE\":\n                    this.handleEffectUpdate(effects, data)\n                case \"ACTIVATE\":\n                    this.handleEffectActivate(effects, data)\n                    return\n                case \"DEACTIVATE\":\n                    this.handleEffectDeactivate(effects, data)\n                    return\n                default:\n                    return null\n            }\n        })\n\n        return data.events\n    }\n    \n    handleEffectTrigger(effectNames, data){\n        effectNames.forEach(name => {\n            data.events = effects[name].trigger({...data, state: this.state.current})\n        })\n    }\n\n    handleEffectRemove(effectNames, data){\n        effectNames.forEach(name => {\n            data.events = effects[name].remove({...data, state: this.state.current})\n        })\n    }\n\n    handleEffectUpdate(effectNames, data){\n        effectNames.forEach(name => {\n            data.events = effects[name].update({...data, state: this.state.current})\n        })\n    }\n\n    handleEffectActivate(effects, data){\n        let {events} = data\n        effects.forEach(name => {\n            const event = {\n                type: \"EFFECT_ACTIVATE\",\n                payload: {\n                    name\n                }\n            }\n            events = [...events, event]\n        })\n\n        data.events = events\n    }\n\n    handleEffectDeactivate(effects, data){\n        let {events} = data\n        effects.forEach(name => {\n            const event = {\n                type: \"EFFECT_DEACTIVATE\",\n                payload: {\n                    name\n                }\n            }\n            events = [...events, event]\n        })\n\n        data.events = events\n    }\n}\n\nexport default EffectHandler","import React, {useState, useEffect, useReducer, useRef} from 'react';\nimport './App.css';\nimport ResourceBar from \"./components/ResourceBar\"\nimport AbilityBar from \"./components/AbilityBar\"\nimport AuraBar from \"./components/auras/AuraBar\"\nimport ExportPanel from \"./components/panels/ExportPanel\"\nimport SettingsPanel from \"./components/panels/SettingsPanel\"\nimport AbilityKeybindsPanel from \"./components/panels/AbilityKeybindsPanel\"\nimport AboutPanel from \"./components/panels/AboutPanel\"\nimport WhatsNewPanel from \"./components/panels/WhatsNewPanel\"\nimport defaultAbilities from \"./lib/abilities\"\nimport defaultAbilitySettings from \"./lib/abilitySettings\"\nimport defaultAuraSettings from \"./lib/auraSettings\"\nimport defaultEffectSettings from \"./lib/effectSettings\"\nimport defaultEffects from \"./lib/effects\"\nimport Forms from \"./components/forms/Forms\"\nimport {DesignPhilosophyLink as DesignPhilosophy} from \"./components/articles/DesignPhilosophy\"\nimport {RampLink as Ramp} from \"./components/articles/Ramp\"\nimport templates from \"./lib/templates\"\nimport rootReducer from \"./utils/reducers\"\nimport EffectHandler from \"./utils/effectHandler\"\nimport toggle from \"./utils/featureToggle\"\nimport abilities from './lib/abilities';\n\nconst toggledAbilities = (abilities) => Object.keys(abilities).reduce((toggled, name) => {\n  if(!toggle.isAbilityEnabled(name)) return toggled\n  return {\n    ...toggled,\n    [name]: abilities[name]\n  }\n}, {})\n\nconst VoidformOptimizer = () => {\n\n  const [panel, setPanel] = useState()\n  const [abilitySettings, setAbilitySettings] = useState(defaultAbilitySettings)\n  const [abilities, setAbilities] = useState(toggledAbilities(defaultAbilities))\n  const [auraSettings, setAuraSettings] = useState(defaultAuraSettings)\n  const [effectSettings, setEffectSettings] = useState(defaultEffectSettings)\n  //const [effects, setEffects] = useState(defaultEffects)\n  const [keyEventsPaused, setKeyEventsPaused] = useState(false)\n  const [reset, setReset] = useState(false)\n  const [abilityReset, setAbilityReset] = useState(false)\n  const [haste, setHaste] = useState(0)\n  const [state, updateState] = useReducer(...rootReducer(auraSettings, abilitySettings, abilities))\n  const stateRef = useRef()\n  stateRef.current = {...state, abilitySettings, auraSettings, effectSettings}\n  const [abilityEffectHandler] = useState(EffectHandler.forAbility(stateRef))\n  const [auraEffectHandler] = useState(EffectHandler.forAura(stateRef))\n\n  useEffect(() => {\n    setHaste(calculateHaste)\n  }, [state.auras.stats.haste,\n    state.auras.voidform.haste,\n    state.auras.lingeringInsanity.haste,\n    state.auras[\"power-infusion\"].haste,\n    state.auras[\"bloodlust\"].haste])\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search)\n    const template = queryParams.get(\"template\")\n    if(!template || !templates[template]) return\n    const templateSettings = {...templates[template], abilityConfig: templates[template].abilities}\n    delete templateSettings.abilities\n    handleImport(templateSettings)\n  }, [])\n\n  const calculateHaste = () => {\n    const auras = state.auras\n    return Object.keys(auras).reduce((haste, aura) => {\n      if(!auras[aura].haste) return haste\n      return haste * (1+auras[aura].haste)\n    }, 1)\n  }\n\n  const handlePanelHeaderClick = (panel) => {\n    setKeyEventsPaused(true)\n    setPanel(panel)\n  }\n\n  const handlePanelClose = () => {\n    setKeyEventsPaused(false)\n    setPanel(null)\n  }\n\n  const handleAbilityToggle = (ability) => {\n    let newSettings = JSON.parse(JSON.stringify(abilities))\n\n    newSettings[ability].disabled = !newSettings[ability].disabled\n    if(ability === \"void-bolt\") newSettings[\"void-eruption\"].disabled = newSettings[ability].disabled\n\n    setAbilities(newSettings)\n  }\n\n  const setKeyBind = (keybind, ability) => {\n    let state = JSON.parse(JSON.stringify(abilities))\n    let key = keybind.key\n    let voidBoltOrEruption = ability === \"void-bolt\" || ability === \"void-eruption\"\n    Object.keys(state).forEach(k => {\n      let abilityKeybind = state[k].keybind\n      if(abilityKeybind.key === key) state[k].keybind = { keybindText: \"--\"}\n    })\n    if(voidBoltOrEruption) {\n      state[\"void-bolt\"].keybind = {...keybind}\n      state[\"void-eruption\"].keybind = {...keybind}\n    }\n    else {\n      state[ability].keybind = {...keybind}\n    }\n\n    setAbilities(state)\n  }\n\n  const setAbilityOrder = (index, name) => {\n    const state = JSON.parse(JSON.stringify(abilities))\n    const ability = state[name]\n    const abilityIndex = ability.index\n    const shift = index < abilityIndex ? \"right\" : \"left\"\n\n    let voidBoltOrEruption = name === \"void-bolt\" || name === \"void-eruption\"\n\n    Object.keys(state).forEach(k => {\n      const currentIndex = state[k].index\n\n      if(shift === \"right\" && (currentIndex >= index && currentIndex < abilityIndex)) state[k].index++\n      if(shift === \"left\" && (currentIndex <= index && currentIndex > abilityIndex)) state[k].index--\n    })\n    \n    if(voidBoltOrEruption) {\n      state[\"void-bolt\"].index = index\n      state[\"void-eruption\"].index = index\n    }\n    else {\n      ability.index = index\n    }\n\n    setAbilities(state)\n  }\n\n  const handleImport = (settings) => {\n    setAllAbilities(settings.abilityConfig)\n    handleAbilitySet(settings.abilitySettings)\n    handleAuraSet(settings.auraSettings)\n    handleEffectSet(settings.effectSettings)\n  }\n\n  const setAllAbilities = (importedAbilities) => {\n    let state = Object.keys(abilities).reduce((state, ability) => {\n      state[ability] = {...abilities[ability], ...importedAbilities[ability]}\n      return state\n    }, {})\n\n    setAbilities(state)\n  }\n\n  const abilitySettingsWithDisplayName = () => {\n    return Object.keys(abilitySettings).reduce((merged, a) => {\n      merged[a] = {...abilitySettings[a], displayName: defaultAbilities[a].displayName}\n      return merged\n    }, {}) \n  }\n\n  const handleAuraSet = (auraSettings) => {\n    setAuraSettings(auraSettings)\n    const haste = auraSettings.stats.haste\n    const resource = auraSettings.stats.startingInsanity\n    handleAuraReset(resource)\n    updateState({\n      category: \"STAT\",\n      type: \"HASTE_SET\",\n      payload: {\n        source: \"stats\",\n        haste\n      }\n    })\n  }\n\n  const handleAbilitySet = (abilitySettings) => {\n    setAbilitySettings(abilitySettings)\n    handleAbilityReset()\n  }\n\n  const handleEffectSet = (effectSettings) => {\n    setEffectSettings(effectSettings)\n    handleEffectReset()\n  }\n\n  const handleAbilityReset = () => {\n    updateState({\n      type: \"RESET_ABILITIES\"\n    })\n    updateState({\n      type: \"RESOURCE_UPDATE\",\n      payload: {\n        resource: 0\n      }\n    })\n    setAbilityReset(!abilityReset)\n  }\n\n  const handleAuraReset = () => {\n    updateState({\n      type: \"RESET_AURAS\"\n    })\n\n    setTimeout(() => {\n      updateState({\n        category: \"AURA\",\n        type: \"LINGERING_INSANITY_END\"\n      })\n    }, 0)\n  }\n\n  const handleEffectReset = () => {\n    updateState({\n      type: \"RESET_EFFECTS\"\n    })\n  }\n\n  const handleReset = () => {\n    handleAuraReset()\n    handleAbilityReset()\n    handleEffectReset()\n    setReset(!reset)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header header-panel\">\n        <div className=\"App-title\">\n          <div className=\"App-title-text\">\n            Voidform Optimizer\n          </div>\n        </div>\n        <div className=\"header-container\">\n          <div className=\"panel-container\">\n            <SettingsPanel settings={{abilities: abilitySettingsWithDisplayName(), auras: auraSettings}} didReset={reset} onAbilitySet={handleAbilitySet} onAuraSet={handleAuraSet} currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\n            <AbilityKeybindsPanel abilities={abilities} currentPanel={panel} onKeybind={setKeyBind} setOrder={setAbilityOrder} onToggle={handleAbilityToggle} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\n            <ExportPanel settings={{abilitySettings, auraSettings, abilities}} onImport={handleImport} currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose}/>\n            <AboutPanel currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\n            <WhatsNewPanel />\n          </div>\n          <div className=\"panel-container\">\n            <DesignPhilosophy />\n            <Ramp />\n          </div>\n        </div>\n        <Forms pauseKeyEvents={setKeyEventsPaused} />\n      </header>\n      <div className=\"App-content\">\n        <AuraBar auras={state.auras} settings={auraSettings} effectHandler={auraEffectHandler} haste={haste} triggerEvent={updateState} />\n        <ResourceBar current={state.resource} max={100}/>\n        <AbilityBar state={state.abilities} abilitySettings={abilitySettings} abilities={abilities} effectHandler={abilityEffectHandler} haste={haste} inVoidform={state.auras.voidform.active} dispatch={updateState} keyEventsPaused={keyEventsPaused} reset={abilityReset} />\n        <button className=\"panel-button\" onClick={handleReset}>Reset</button>\n      </div>\n    </div>\n  );\n}\n\nexport default VoidformOptimizer;\n","import React, {useState} from \"react\"\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n  } from \"react-router-dom\";\nimport VoidformOptimizer from \"./VoidformOptimizer\"\nimport DesignPhilosophy from \"./components/articles/DesignPhilosophy\"\nimport Ramp from \"./components/articles/Ramp\"\n\nexport default () => {\n\n    return (\n      <Router>\n        <div>\n          <Switch>\n              <Route path=\"/articles/design-philosophy\">\n                <DesignPhilosophy />\n              </Route>\n              <Route path=\"/articles/ramp\">\n                <Ramp />\n              </Route>\n              <Route path=\"/\">\n                <VoidformOptimizer />\n              </Route>\n          </Switch>\n        </div>\n      </Router>    \n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport dotenv from \"dotenv\"\n\ndotenv.config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}