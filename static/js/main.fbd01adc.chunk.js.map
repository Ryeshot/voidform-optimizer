{"version":3,"sources":["components/ResourceBar.js","components/CooldownSweep.js","lib/events.js","lib/abilityEvents.js","utils/eventHandler.js","lib/constants.js","utils/ability.js","components/ProgressAbility.js","components/GlobalCooldown.js","components/CastBar.js","components/AbilityBar.js","components/auras/Aura.js","components/auras/LingeringInsanity.js","components/auras/Voidform.js","components/auras/DamageOverTime.js","lib/options.js","components/auras/AuraBar.js","components/panels/Panel.js","utils/hooks.js","lib/abilitySettings.js","lib/auraSettings.js","utils/importExport.js","lib/templates/index.js","lib/templates/live.js","lib/templates/alpha.js","lib/templates/legionENVoidlord.js","lib/templates/legionAntorus.js","components/panels/ExportPanel.js","components/panels/optionFactory.js","components/panels/SettingOption.js","components/panels/WhatIs.js","components/panels/CustomizeSection.js","components/panels/SettingsPanel.js","components/panels/AbilityKeybindsPanel.js","components/panels/AboutPanel.js","lib/whatsNew.js","components/panels/WhatsNewPanel.js","lib/abilities.js","components/forms/FormTextAreaField.js","components/forms/FormTextField.js","utils/bugreport.js","components/forms/BugReport.js","components/forms/FeatureRequest.js","components/forms/Forms.js","App.js","serviceWorker.js","index.js"],"names":["ResourceBar","props","max","current","voidform","className","toFixed","style","width","CooldownSweep","size","progress","inverse","stroke","normalizedRadius","circumference","Math","PI","height","fill","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","cx","cy","r","events","abilityEvents","onEvent","EventHandler","eventTriggers","this","event","payload","forEach","e","type","keybinds","Ability","initialState","updateFn","onExecute","eventHandler","state","updateState","charges","maxCharges","currentState","Object","keys","k","value","subState","k2","value2","now","Date","startTime","cooldown","duration","getCurrentState","name","cooldownTimer","setInterval","remaining","interval","clearInterval","startCooldown","handleEvent","time","displayName","resource","costsResource","cast","castTimer","setTimeout","currentlyOnCooldown","endTime","channel","baseDuration","ticks","pandemicTime","currentTicks","channelTimer","previousChannelRemaining","previousChannelFrequency","min","floor","channelFrequency","round","baseChannelTime","globalCooldown","globalCooldownTimer","clearTimeout","triggers","trigger","eventTypes","constructEventHandler","InstantAbility","CastAbility","ChannelAbility","unusable","casting","startCast","startChannel","ProgressAbility","settings","globalCooldownStartTime","casttime","castStartTime","castEndTime","icon","keybind","subscribe","unsubscribe","onAbilityUpdate","onClick","triggerEvent","reset","useState","setState","key","keybindText","startTimeRef","useRef","cooldownRef","castStartTimeRef","castEndTimeRef","casttimeRef","castingRef","baseChannelTimeRef","chargesRef","globalCooldownRef","globalCooldownStartTimeRef","ability","useEffect","create","source","execute","notify","beginGlobalCooldown","getRemainingCooldown","remove","src","GlobalCooldown","start","console","log","gcd","CastBar","direction","setCurrent","timeRef","durationRef","timer","AbilityBar","abilitySettings","abilities","haste","inVoidform","keyEventsPaused","hasteRef","inVoidformRef","spellQueueTimer","observers","setObservers","voidformEntered","setVoidformEntered","observersRef","defaultState","cooldowns","disabled","defaultCooldowns","status","triggerCooldown","document","addEventListener","handleKeyPress","removeEventListener","useReducer","oldState","action","newState","JSON","parse","stringify","rankTwo","error","o","abilityCooldownRemaining","globalCooldownRemaining","queueAbility","handleClick","calculateCooldown","triggerGlobalCooldown","gcdLength","observer","obs","filter","getAbilityCooldown","cdr","hasted","getAbilityCastTime","staticCastTime","find","map","i","Aura","maxDuration","stacks","children","LingeringInsanity","setMaxDuration","setDuration","stacksRef","initialize","afterVoidformEntry","hasteRetention","currentMaxDuration","calculateDecayStacks","voidformHaste","hasteDecay","ceil","startStatic","decayRate","startDecay","Voidform","drainRate","drainStart","hasteStack","hasteStart","maxStacks","paused","active","setStacks","pausedRef","n","frequency","drain","startingHaste","DamageOverTime","maxDurationRef","calculateNextTickTime","tickTime","commonOptions","whatIs","unit","resourceCast","resourceChannel","cost","castTime","channelTime","auraDuration","auraTicks","auraResource","abilityOptions","auraOptions","options","dots","AuraBar","auras","lingeringInsanity","dot","Panel","panel","currentPanel","handleClose","header","panelClass","target","cleanup","ref","useCleanup","defaultAbilitySettings","targetCount","extension","defaultAuraSettings","stats","parseAbilitySettings","result","a","Error","abilitySetting","reduce","obj","userSetting","setting","undefined","parseAbility","parseAuraSettings","auraSettings","aura","auraSetting","parseAura","formatAbilitySettingsForExport","formattedAbility","formatAbilityConfig","includeKeybinds","exportSettings","currentSettings","formattedAbilitySettings","formattedAbilityConfig","combined","abilityConfig","Base64","encode","live","alpha","legionENVoidlord","legionAntorus","Templates","onChange","selected","templates","t","ExportPanel","onImport","closePanel","exportData","setExportData","inputData","setInputData","setIncludeKeybinds","transform","template","data","rows","cols","placeholder","checked","parsedSettings","decode","message","importSettings","id","readOnly","getElementById","select","execCommand","err","TimeTextOption","step","parseFloat","NumberTextOption","parseInt","FloatTextOption","PercentTextOption","BooleanOption","defaultChecked","SelectOption","handleChange","htmlFor","Option","rest","SettingOption","onHelp","closeHelp","parentKey","onMouseEnter","pos","x","offsetLeft","y","offsetTop","onMouseLeave","v","WhatIs","text","xPos","yPos","left","top","CustomizeSection","showWhatIs","setShowWhatIs","setWhatIs","optionKey","option","newSetting","handleShowWhatIs","closeWhatIs","SettingsPanel","didReset","onAbilitySet","onAuraSet","changesPendingText","currentAbilities","setCurrentAbilities","currentAuras","setCurrentAuras","activeAbilitySection","setActiveAbilitySection","activeAuraSection","setActiveAuraSection","abilityChangesPending","setAbilityChangesPending","auraChangesPending","setAuraChangesPending","showAbilityOptions","settingKey","getAttribute","showAuraOptions","newAbilities","newAuras","AbilityKeybindsPanel","onKeybind","onToggle","onPause","tooltip","setTooltip","setKeybindText","currentAbility","setCurrentAbility","currentAbilityRef","showToolTip","alt","hideToolTip","prepareToBindAbility","bindAbility","once","match","toUpperCase","visibility","toString","onMouseOver","onMouseOut","AboutPanel","description","containerStyle","textAlign","marginBottom","smallText","fontSize","mediumText","WhatsNew","onClose","whatsNew","item","WhatsNewPanel","showWhatsNew","setShowWhatsNew","defaultAbilities","FormTextAreaField","label","placeHolder","required","FormTextField","email","window","Email","formatBugReportContent","body","headers","content","concat","join","sendBugReport","title","SecureToken","process","From","To","Subject","Body","send","submitBugReport","onSuccess","onFail","fields","titleField","BugReport","closeForm","setData","canSubmit","setCanSubmit","submitMessage","setSubmitMessage","onSubmit","preventDefault","setText","count","repeat","createPendingTextTimer","f","FeatureRequest","Forms","showBugReport","setShowBugReport","showFeatureRequest","setShowFeatureRequest","App","setPanel","setAbilitySettings","setAbilities","setAuraSettings","setKeyEventsPaused","setReset","setHaste","pandemicDuration","handleAuraPandemic","d","calculateHaste","handlePanelHeaderClick","handlePanelClose","setAllAbilities","importedAbilities","handleAuraSet","handleAuraReset","handleReset","handleAbilitySet","merged","voidBoltOrEruption","newSettings","Boolean","location","hostname","dotenv","config","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fbd01adc.chunk.js","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\r\nimport \"./ResourceBar.css\"\r\n\r\nconst ResourceBar = (props) => {\r\n    const {max, current, voidform} = props\r\n\r\n    return (\r\n        <div className=\"progress-bar-container\">\r\n            <div className=\"progress-text\">{(current/max*100).toFixed(0)}</div> \r\n            <div className=\"progress-bar resource-bar\" \r\n                style={{\r\n                    width: `${(current/max*100).toFixed(2)}%`\r\n            }}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceBar","import React, {useState, useEffect, useRef} from 'react';\r\n\r\nimport \"./CooldownSweep.css\"\r\n\r\nconst CooldownSweep = (props) => {\r\n\r\n    const {size, progress, inverse} = props\r\n\r\n    const radius = size * 2\r\n    const stroke = size * 2\r\n\r\n    const normalizedRadius = radius - (stroke/2)\r\n    const circumference = normalizedRadius * 2 * Math.PI\r\n\r\n    return (\r\n        <svg width={size} height={size}>\r\n            <circle\r\n                fill=\"transparent\"\r\n                strokeWidth={stroke}\r\n                strokeOpacity={.7}\r\n                strokeDasharray={circumference + \" \" + circumference}\r\n                strokeDashoffset={inverse ? ((!progress ? circumference : 0) + (progress || 0) * circumference) : (circumference + (progress || 0) * circumference)}\r\n                stroke={\"rgb(0,0,0)\"}\r\n                cx={size/2}\r\n                cy={size/2}\r\n                r={normalizedRadius} />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default CooldownSweep","const events = {\r\n    \"CAST\": [\r\n        \"ABILITY_CAST_SUCCESS\",\r\n        \"ABILITY_COOLDOWN_START\",\r\n        \"ABILITY_COOLDOWN_END\",\r\n        \"ABILITY_CAST_START\",\r\n        \"ABILITY_CHANNEL_START\",\r\n        \"ABILITY_CHANNEL_UPDATE\",\r\n        \"ABILITY_CHANNEL_END\"\r\n    ],\r\n    \"RESOURCE\": [\r\n        \"RESOURCE_UPDATE\",\r\n        \"INSANITY_DRAIN_PAUSE_START\",\r\n        \"INSANITY_DRAIN_PAUSE_END\"\r\n    ],\r\n    \"AURA\": [\r\n        \"VOIDFORM_START\",\r\n        \"VOIDFORM_UPDATE\",\r\n        \"VOIDFORM_END\",\r\n        \"LINGERING_INSANITY_START\",\r\n        \"LINGERING_INSANITY_UPDATE\",\r\n        \"LINGERING_INSANITY_END\",\r\n        \"AURA_START\",\r\n        \"AURA_END\",\r\n        \"DOT_EXTEND\"\r\n    ],\r\n    \"STAT\": [\"HASTE_UPDATE\"]\r\n}\r\n\r\nexport default events","const abilityEvents = {\r\n    \"void-bolt\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\", \"DOT_EXTEND\"]\r\n        }\r\n    },\r\n    \"mind-flay\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [],\r\n            \"COOLDOWN_END\": [],\r\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\"],\r\n            \"CHANNEL_UPDATE\": [\"RESOURCE_UPDATE\"],\r\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\"]\r\n        }\r\n    },\r\n    \"mind-sear\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [],\r\n            \"COOLDOWN_END\": [],\r\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\"],\r\n            \"CHANNEL_UPDATE\": [\"RESOURCE_UPDATE\"],\r\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\"]\r\n        }\r\n    },\r\n    \"void-eruption\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"VOIDFORM_START\"]\r\n        }\r\n    },\r\n    \"mind-blast\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\"],\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"]\r\n        }\r\n    },\r\n    \"shadow-word-death\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"void-torrent\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CHANNEL_START\": [\"ABILITY_CHANNEL_START\", \"INSANITY_DRAIN_PAUSE_START\"],\r\n            \"CHANNEL_UPDATE\": [\"RESOURCE_UPDATE\"],\r\n            \"CHANNEL_END\": [\"ABILITY_CHANNEL_END\", \"INSANITY_DRAIN_PAUSE_END\"]\r\n        }\r\n    },\r\n    \"shadow-word-pain\": {\r\n        onEvent: {\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"vampiric-touch\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"devouring-plague\": {\r\n        onEvent: {\r\n            \"CAST_START\": [\"ABILITY_CAST_START\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    },\r\n    \"shadowfiend\": {\r\n        onEvent: {\r\n            \"COOLDOWN_START\": [\"ABILITY_COOLDOWN_START\"],\r\n            \"COOLDOWN_END\": [\"ABILITY_COOLDOWN_END\"],\r\n            \"CAST_SUCCESS\": [\"ABILITY_CAST_SUCCESS\", \"AURA_START\", \"RESOURCE_UPDATE\"]\r\n        }\r\n    }\r\n}\r\n\r\nexport default abilityEvents","import events from \"../lib/events\"\r\nimport abilityEvents from \"../lib/abilityEvents\"\r\n\r\nclass EventHandler {\r\n\r\n    constructor(eventTriggers, events) {\r\n        this.eventTriggers = eventTriggers\r\n        this.events = events\r\n    }\r\n\r\n    handleEvent(event, payload) {\r\n        if(!this.events[event]) return\r\n        //console.log(event)\r\n        this.events[event].forEach(e => this.eventTriggers[e]({\r\n            type: e,\r\n            payload\r\n        }))\r\n    }\r\n}\r\n\r\nexport const constructEventHandler = (name, triggers) => {\r\n    const eventTriggers = {}\r\n\r\n    triggers.forEach(trigger => {\r\n        let types = trigger.eventTypes\r\n        types.forEach(type => {\r\n            events[type].forEach(e => eventTriggers[e] = trigger.trigger)\r\n        })\r\n    })\r\n\r\n    return new EventHandler(eventTriggers, abilityEvents[name].onEvent)\r\n}","export const interval = 20\r\nexport const lag = 50\r\nexport const spellQueueWindow = 250\r\nexport const keybinds = {\r\n    \"!\": \"S-1\",\r\n    \"@\": \"S-2\",\r\n    \"#\": \"S-3\",\r\n    \"$\": \"S-4\",\r\n    \"%\": \"S-5\",\r\n    \"^\": \"S-6\",\r\n    \"&\": \"S-7\",\r\n    \"*\": \"S-8\",\r\n    \"(\": \"S-9\",\r\n    \")\": \"S-0\"\r\n}","import {constructEventHandler} from \"./eventHandler\"\r\nimport {interval, lag} from \"../lib/constants\"\r\n\r\nclass Ability {\r\n\r\n    constructor(initialState, updateFn, onExecute, eventHandler) {\r\n        this.state = initialState\r\n        this.updateState = updateFn\r\n        this.onExecute = onExecute\r\n        this.eventHandler = eventHandler\r\n        this.updateState({\r\n            progress: 0,\r\n            charges: initialState.charges.maxCharges || 1\r\n        })       \r\n    }\r\n\r\n    static create(type, initialState, updateFn, onExecute, triggers) {\r\n        const eventHandler = constructEventHandler(initialState.name, triggers)\r\n        switch(type) {\r\n            case \"instant\":\r\n                return new InstantAbility(initialState, updateFn, onExecute, eventHandler)\r\n            case \"cast\":\r\n                return new CastAbility(initialState, updateFn, onExecute, eventHandler)\r\n            case \"channel\":\r\n                return new ChannelAbility(initialState, updateFn, onExecute, eventHandler)\r\n        }\r\n    }\r\n\r\n    getCurrentState() {\r\n        const currentState = {}\r\n        let state = this.state\r\n\r\n        Object.keys(state).forEach(k => {\r\n            let value = state[k]\r\n            if(typeof value !== \"object\") {\r\n                currentState[k] = value\r\n                return\r\n            }\r\n\r\n            const subState = {}\r\n            Object.keys(value).forEach(k2 => {\r\n                let value2 = value[k2]\r\n                if(value2 === \"undefined\") return\r\n                subState[k2] =  typeof value2 !== \"object\" ? value2 : value2.current\r\n            })\r\n            currentState[k] = subState\r\n        })\r\n\r\n        return currentState\r\n    }\r\n\r\n    getRemainingCooldown() {\r\n        const now = Date.now()\r\n        const startTime = this.state.cooldown.startTime.current\r\n        const duration = startTime ? this.state.cooldown.duration.current : 0\r\n        const charges = this.state.charges.current.current\r\n        const remaining = charges === 0 ? ((startTime || now) + duration) - now : 0\r\n\r\n        return remaining\r\n    }\r\n\r\n    startCooldown() {\r\n        let state = this.getCurrentState()\r\n        const {name} = state\r\n        const {maxCharges} = state.charges\r\n\r\n        this.cooldownTimer = setInterval(() => {\r\n            let now = Date.now()\r\n\r\n            let duration = this.state.cooldown.duration.current\r\n            let startTime = this.state.cooldown.startTime.current || now\r\n            let charges = this.state.charges.current.current\r\n            let remaining = (startTime + duration) - now\r\n\r\n            if(remaining <= interval + lag) {\r\n                this.updateState(state => {\r\n                    return {...state, charges: charges+1}\r\n                })\r\n\r\n                clearInterval(this.cooldownTimer)\r\n\r\n                if(maxCharges && charges < maxCharges - 1) {\r\n                    this.startCooldown()\r\n                    return\r\n                }\r\n\r\n                this.eventHandler.handleEvent(\"COOLDOWN_END\", {name})\r\n\r\n                this.updateState(state => {\r\n                    return {...state, progress: 0}\r\n                })\r\n\r\n                return\r\n            }\r\n            this.updateState(state => {\r\n                return {...state, progress: remaining/duration}\r\n            })\r\n\r\n        }, interval)\r\n\r\n        this.eventHandler.handleEvent(\"COOLDOWN_START\", {\r\n            name,\r\n            time: Date.now()\r\n        })\r\n    }\r\n\r\n    startCast() {\r\n        let state = this.getCurrentState()\r\n        const {name, displayName, resource, costsResource} = state\r\n        const {duration} = state.cast\r\n\r\n        this.castTimer = setTimeout(() => {\r\n            this.eventHandler.handleEvent(\"CAST_SUCCESS\", {\r\n                name,\r\n                resource,\r\n                costsResource,\r\n                time: Date.now()\r\n            })\r\n\r\n            let cooldown = this.state.cooldown.duration.current\r\n            let currentlyOnCooldown = this.state.cooldown.startTime.current\r\n            let charges = this.state.charges.current.current\r\n\r\n            if(cooldown) {\r\n                this.updateState(state => {\r\n                    return {...state, charges: charges-1}\r\n                })\r\n                if(currentlyOnCooldown) return               \r\n                this.startCooldown()\r\n            }\r\n\r\n        }, duration)\r\n\r\n        this.eventHandler.handleEvent(\"CAST_START\", {\r\n            name,\r\n            displayName,\r\n            duration,\r\n            time: Date.now()\r\n        })\r\n    }\r\n\r\n    startChannel() {\r\n        let state = this.getCurrentState()\r\n        const {startTime, endTime, duration} = state.cast\r\n        const {baseDuration, ticks} = state.channel\r\n        const {name, displayName, resource} = state\r\n\r\n        let now = Date.now()\r\n        let pandemicTime = 0\r\n        let currentTicks = ticks\r\n\r\n        if(startTime) {\r\n            clearInterval(this.channelTimer)\r\n            let previousChannelTime = endTime - startTime\r\n            let previousChannelRemaining = previousChannelTime - (now - startTime)\r\n            let previousChannelFrequency = (baseDuration/currentTicks)        \r\n            pandemicTime = Math.min(previousChannelRemaining, baseDuration * .3)\r\n            let remainingTicks = Math.floor(pandemicTime/previousChannelFrequency)\r\n            currentTicks += remainingTicks\r\n        }\r\n\r\n        let channelFrequency = Math.round((duration+pandemicTime)/currentTicks)\r\n\r\n        this.channelTimer = setInterval(() => {\r\n\r\n            let now = Date.now()\r\n            let endTime = this.state.cast.endTime.current\r\n\r\n            //another cast has stopped this channel, don't update\r\n            if(!endTime) {\r\n                clearInterval(this.channelTimer)\r\n\r\n                this.eventHandler.handleEvent(\"CHANNEL_END\", {\r\n                    name\r\n                })\r\n                return\r\n            }\r\n\r\n            this.eventHandler.handleEvent(\"CHANNEL_UPDATE\", {\r\n                resource: resource/ticks,\r\n                name\r\n            })\r\n\r\n            if(now >= endTime) {\r\n                clearInterval(this.channelTimer)\r\n\r\n                this.eventHandler.handleEvent(\"CHANNEL_END\", {\r\n                    name\r\n                })\r\n                return\r\n            }\r\n\r\n        }, channelFrequency)\r\n\r\n        this.eventHandler.handleEvent(\"CHANNEL_START\", {\r\n            name,\r\n            displayName,\r\n            duration: duration + pandemicTime,\r\n            time: now,\r\n            baseChannelTime: duration\r\n        })\r\n    }\r\n\r\n    beginGlobalCooldown() {\r\n        let state = this.getCurrentState()\r\n        const {duration, startTime} = state.globalCooldown\r\n\r\n        if(state.cooldown.startTime) {\r\n            let remaining = (state.cooldown.startTime + state.cooldown.duration) - startTime\r\n            if(remaining > duration) return\r\n        }\r\n\r\n        this.globalCooldownTimer = setInterval(() => {\r\n            let now = Date.now()\r\n            let remaining = (startTime + duration) - now\r\n            if(remaining <= interval) {\r\n                clearInterval(this.globalCooldownTimer)\r\n                             \r\n                return\r\n            }\r\n\r\n            if(this.state.cooldown.startTime.current) return\r\n            this.updateState(state => {\r\n                return {...state, progress: remaining/duration}\r\n            })\r\n        }, interval)\r\n    }\r\n\r\n    remove() {\r\n        clearInterval(this.cooldownTimer)\r\n        clearInterval(this.globalCooldownTimer)\r\n        clearInterval(this.channelTimer)\r\n        clearTimeout(this.castTimer)\r\n    }\r\n}\r\n\r\nclass InstantAbility extends Ability {\r\n\r\n    execute() {\r\n        if(this.state.unusable) return\r\n        if(this.state.cast.casting.current) return\r\n        let state = this.getCurrentState()\r\n        const {name, resource, costsResource} = state\r\n        const {startTime} = state.cooldown\r\n        const {maxCharges, current} = state.charges\r\n\r\n        if(startTime && current === 0) return      \r\n        this.updateState(state => {\r\n            return {...state, charges: current-1}\r\n        })\r\n\r\n        this.eventHandler.handleEvent(\"CAST_SUCCESS\", {\r\n            name,\r\n            resource,\r\n            costsResource,\r\n            time: Date.now()\r\n        })\r\n\r\n        this.onExecute()\r\n        if(maxCharges && current < maxCharges) return\r\n        this.startCooldown()\r\n    }\r\n}\r\n\r\nclass CastAbility extends Ability {\r\n\r\n    execute() {\r\n        if(this.state.unusable) return\r\n        if(this.state.cast.casting.current) return\r\n        let state = this.getCurrentState()\r\n        const {startTime} = state.cast\r\n        const {current} = state.charges\r\n\r\n        if(startTime || current === 0) return\r\n        this.startCast()\r\n        this.onExecute()\r\n    }\r\n}\r\n\r\nclass ChannelAbility extends Ability {\r\n\r\n    execute() {\r\n        if(this.state.unusable) return\r\n        if(this.state.cast.casting.current) return\r\n        let state = this.getCurrentState()\r\n        const {duration, startTime} = state.cooldown\r\n\r\n        if(startTime) return\r\n        this.startChannel()\r\n        if(duration) {\r\n            this.startCooldown()\r\n        }\r\n        this.onExecute()\r\n    }\r\n}\r\n\r\nexport default Ability","import React, {useState, useEffect, useRef} from 'react';\r\nimport \"./ProgressAbility.css\"\r\nimport CooldownSweep from \"./CooldownSweep\"\r\nimport Ability from \"../utils/ability\"\r\n\r\nconst ProgressAbility = (props) => {\r\n\r\n    const {name, displayName, settings, cooldown, globalCooldown, globalCooldownStartTime, unusable, startTime, casttime, castStartTime, castEndTime, icon, baseChannelTime, keybind, casting, subscribe, unsubscribe, onExecute, onAbilityUpdate, onClick, triggerEvent, reset} = props\r\n\r\n    const size = 50\r\n\r\n    const [state, setState] = useState({})\r\n\r\n    const {key, keybindText} = keybind\r\n    const {type, resource, costsResource, charges, ticks} = settings\r\n\r\n    //cooldown states\r\n    const startTimeRef = useRef(startTime)\r\n    const cooldownRef = useRef(cooldown)\r\n\r\n    startTimeRef.current = startTime\r\n    cooldownRef.current = cooldown\r\n\r\n    //cast states\r\n    const castStartTimeRef = useRef(castStartTime)\r\n    const castEndTimeRef = useRef(castEndTime)\r\n    const casttimeRef = useRef(casttime)\r\n    const castingRef = useRef(casting)\r\n\r\n    castStartTimeRef.current = castStartTime\r\n    castEndTimeRef.current = castEndTime\r\n    casttimeRef.current = casttime\r\n    castingRef.current = casting\r\n\r\n    //channel states\r\n    const baseChannelTimeRef = useRef(baseChannelTime)\r\n\r\n    baseChannelTimeRef.current = baseChannelTime\r\n\r\n    //charge states\r\n    const chargesRef = useRef(charges || 1)\r\n\r\n    chargesRef.current = state.charges\r\n\r\n    //gcd states\r\n    const globalCooldownRef = useRef(globalCooldown)\r\n    const globalCooldownStartTimeRef = useRef(globalCooldownStartTime)\r\n\r\n    globalCooldownRef.current = globalCooldown\r\n    globalCooldownStartTimeRef.current = globalCooldownStartTime\r\n\r\n    const ability = useRef()\r\n\r\n    useEffect(() => {\r\n        const triggers = [{\r\n            eventTypes: [\"CAST\"],\r\n            trigger: onAbilityUpdate \r\n        },\r\n        {\r\n            eventTypes: [\"RESOURCE\", \"AURA\", \"STAT\"],\r\n            trigger: triggerEvent\r\n        }]\r\n\r\n        const initialState = {\r\n            name,\r\n            displayName,\r\n            resource,\r\n            costsResource,\r\n            unusable,\r\n            cooldown: {\r\n                duration: cooldownRef,\r\n                startTime: startTimeRef\r\n            },\r\n            cast: {\r\n                duration: casttimeRef,\r\n                startTime: castStartTimeRef,\r\n                endTime: castEndTimeRef,\r\n                casting: castingRef\r\n            },\r\n            channel: {\r\n                baseDuration: baseChannelTimeRef,\r\n                ticks\r\n            },\r\n            charges: {\r\n                maxCharges: charges,\r\n                current: chargesRef\r\n            },\r\n            globalCooldown: {\r\n                duration: globalCooldownRef,\r\n                startTime: globalCooldownStartTimeRef\r\n            }\r\n        }\r\n\r\n        ability.current = Ability.create(type, initialState, setState, onExecute, triggers)\r\n        \r\n        subscribe({\r\n            source: name,\r\n            keybind: key,\r\n            execute: () => ability.current.execute(),\r\n            notify: () => ability.current.beginGlobalCooldown(),\r\n            getRemainingCooldown: () => ability.current.getRemainingCooldown()\r\n        })\r\n\r\n        return () => {\r\n            ability.current.remove()\r\n            unsubscribe(name)\r\n        }\r\n    }, [unusable, key, reset])\r\n\r\n    const handleClick = () => {\r\n        onClick(name, () => ability.current.getRemainingCooldown(), () => ability.current.execute())\r\n    }\r\n\r\n    return (\r\n        <div className=\"progress-ability-container\">\r\n        <div className=\"progress-ability\" onClick={handleClick}>\r\n            <img\r\n                className={!unusable && ((state.charges > 0 && charges) || (!startTimeRef.current)) ? \"colored\" : \"desaturated\"}\r\n                src={icon}\r\n                width={size}\r\n                height={size}\r\n            />\r\n            <div className=\"charge-text\">{charges > 1 ? state.charges : \"\"}</div>\r\n            {startTimeRef.current || globalCooldownRef.current ? \r\n            <CooldownSweep size={size} progress={state.progress}/>\r\n            : null}\r\n        </div>\r\n        <div>{keybindText}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressAbility;","const GlobalCooldown = {\r\n\r\n    start: (duration, triggerEvent) => {\r\n        console.log(\"End time for gcd: \" + (Date.now() + duration))\r\n\r\n        triggerEvent({\r\n            type: \"GLOBAL_COOLDOWN_START\",\r\n            payload: {\r\n                gcd: duration,\r\n                time: Date.now()\r\n\r\n            }\r\n        })\r\n\r\n        setTimeout(() => {\r\n            console.log(\"Gcd ended\")\r\n            triggerEvent({\r\n                type: \"GLOBAL_COOLDOWN_END\"\r\n            })    \r\n        }, duration);\r\n    }\r\n}\r\n\r\nexport default GlobalCooldown","import React, {useState, useEffect, useRef} from 'react';\r\nimport \"./CastBar.css\"\r\n\r\nconst CastBar = (props) => {\r\n\r\n    const {time, name, displayName, duration, direction} = props\r\n\r\n    const sec = 1000\r\n    const interval = 50\r\n\r\n    const [current, setCurrent] = useState(0)\r\n\r\n    const timeRef = useRef(time)\r\n    const durationRef = useRef(time)\r\n\r\n    timeRef.current = time\r\n    durationRef.current = duration\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            let now = Date.now()\r\n            setCurrent(current => now - timeRef.current)\r\n        }, interval)\r\n\r\n        return () => {\r\n            clearInterval(timer)\r\n            setCurrent(current => 0)\r\n        }\r\n    }, [name])\r\n\r\n    return (\r\n        <div className=\"progress-bar-container\">\r\n            <div className=\"cast-bar-text-container\">\r\n                <div className=\"progress-text cast-bar-text\">{displayName}</div>\r\n                <div className=\"progress-text cast-bar-text\">{direction \r\n                ? `${(current/sec).toFixed(1)}/${((duration/sec).toFixed(1))}`\r\n                : `${((durationRef.current-current)/sec).toFixed(1)}/${((durationRef.current/sec).toFixed(1))}`}sec\r\n                </div> \r\n            </div>\r\n            <div className=\"progress-bar cast-bar\" \r\n                style={{\r\n                    width: direction \r\n                    ? `${(current/durationRef.current*100).toFixed(2)}%`\r\n                    : `${((durationRef.current-current)/durationRef.current*100).toFixed(2)}%`\r\n            }}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastBar","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport ProgressAbility from \"./ProgressAbility\"\r\nimport GlobalCooldown from \"./GlobalCooldown\"\r\nimport CastBar from \"./CastBar\"\r\nimport {spellQueueWindow} from \"../lib/constants\"\r\nimport \"./AbilityBar.css\"\r\n\r\nconst AbilityBar = (props) => {\r\n\r\n    const gcdLength = 1500\r\n    const {abilitySettings, abilities, haste, inVoidform, triggerEvent, keyEventsPaused, reset} = props\r\n\r\n    const hasteRef = useRef(haste)\r\n    hasteRef.current = haste\r\n\r\n    const inVoidformRef = useRef(inVoidform)\r\n    inVoidformRef.current = inVoidform \r\n\r\n    const spellQueueTimer = useRef()\r\n\r\n    const defaultCooldowns = () => {\r\n        const cooldowns = {}\r\n        Object.keys(abilities).forEach(k => {\r\n            if(abilitySettings[k] && abilitySettings[k].disabled) return\r\n            cooldowns[k] = {\r\n                startTime: 0\r\n            }\r\n        })\r\n\r\n        return cooldowns\r\n    }\r\n\r\n    const [observers, setObservers] = useState([])\r\n    const [voidformEntered, setVoidformEntered] = useState(false)\r\n\r\n    const observersRef = useRef(observers)\r\n    observersRef.current = observers\r\n\r\n    const defaultState = {\r\n        globalCooldown: 0,\r\n        cooldowns: defaultCooldowns(),\r\n        status: {}\r\n    }\r\n\r\n    useEffect(() => {\r\n        triggerCooldown({\r\n            type: \"RESET\"\r\n        })\r\n    }, [reset])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keypress\", handleKeyPress)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keypress\", handleKeyPress)\r\n        }\r\n    }, [keyEventsPaused])\r\n\r\n    const [state, triggerCooldown] = useReducer((oldState, action) => {\r\n        const newState = JSON.parse(JSON.stringify(oldState))\r\n        const payload = action.payload\r\n\r\n        switch(action.type) {\r\n            case \"RESET\":\r\n                return defaultState\r\n            case \"EXECUTE_PENDING\":\r\n                var {name} = payload\r\n                newState.status[name] = \"PENDING\"\r\n                break\r\n            case \"EXECUTE_END\":\r\n                var {name} = payload\r\n                newState.status[name] = \"\"\r\n                break\r\n            case \"ABILITY_CAST_SUCCESS\":\r\n                var {name} = payload\r\n                if(abilitySettings[\"void-bolt\"].rankTwo && newState.casting && name === \"void-bolt\" && newState.casting.name === \"mind-flay\") {\r\n                    break\r\n                }\r\n                newState.cooldowns[name].castStartTime = 0\r\n                newState.cooldowns[name].castEndTime = 0\r\n\r\n                if(newState.casting) {\r\n                    newState.cooldowns[newState.casting.name].castStartTime = 0\r\n                    newState.cooldowns[newState.casting.name].castEndTime = 0\r\n                    delete newState.casting\r\n                }\r\n                break\r\n            case \"ABILITY_COOLDOWN_START\":\r\n                var {name, time} = payload\r\n                newState.cooldowns[name].startTime = time\r\n                break\r\n            case \"ABILITY_COOLDOWN_END\":\r\n                var {name} = payload\r\n                newState.cooldowns[name].startTime = 0\r\n                break\r\n            case \"ABILITY_CAST_START\":\r\n                var {name, displayName, time, duration} = payload\r\n                newState.cooldowns[name].castStartTime = time\r\n                newState.cooldowns[name].castEndTime = time + duration\r\n                if(newState.casting) {\r\n                    newState.cooldowns[newState.casting.name].castStartTime = 0\r\n                    newState.cooldowns[newState.casting.name].castEndTime = 0\r\n                }\r\n                newState.casting = {\r\n                    duration,\r\n                    name,\r\n                    displayName,\r\n                    direction: 1,\r\n                    time\r\n                }\r\n                break\r\n            case \"ABILITY_CHANNEL_START\":\r\n                var {name, displayName, time, duration, baseChannelTime} = payload\r\n                newState.cooldowns[name].castStartTime = time\r\n                newState.cooldowns[name].castEndTime = time + duration\r\n                newState.cooldowns[name].baseChannelTime = baseChannelTime\r\n                if(newState.casting && name !== newState.casting.name) {\r\n                    newState.cooldowns[newState.casting.name].castStartTime = 0\r\n                    newState.cooldowns[newState.casting.name].castEndTime = 0\r\n                }\r\n                newState.casting = {\r\n                    duration,\r\n                    name,\r\n                    displayName,\r\n                    direction: 0,\r\n                    time\r\n                }\r\n                break\r\n            case \"ABILITY_CHANNEL_UPDATE\":\r\n                var {name} = payload\r\n                newState.cooldowns[name].ticks--\r\n                break\r\n            case \"ABILITY_CHANNEL_END\":\r\n                var {name} = payload\r\n                newState.cooldowns[name].castStartTime = 0\r\n                newState.cooldowns[name].castEndTime = 0\r\n                newState.cooldowns[name].ticks = 0\r\n                if(newState.casting && name === newState.casting.name) delete newState.casting\r\n                break\r\n            case \"GLOBAL_COOLDOWN_START\":\r\n                newState.globalCooldown = payload.gcd\r\n                newState.globalCooldownStartTime = payload.time\r\n                break\r\n            case \"GLOBAL_COOLDOWN_END\":\r\n                newState.globalCooldown = 0\r\n                newState.globalCooldownStartTime = 0\r\n                break\r\n            default:\r\n                console.error(`Invalid action provided: ${action.type}`)\r\n        }\r\n\r\n        return newState\r\n\r\n    }, defaultState)\r\n\r\n    const globalCooldownRef = useRef(state.globalCooldown)\r\n    globalCooldownRef.current = state.globalCooldown\r\n\r\n    const globalCooldownStartTimeRef = useRef(state.globalCooldownStartTime)\r\n    globalCooldownStartTimeRef.current = state.globalCooldownStartTime\r\n\r\n    const handleKeyPress = (e) => {\r\n        if(keyEventsPaused) return\r\n        \r\n        const now = Date.now()\r\n\r\n        observersRef.current.forEach(o => {\r\n            if(o.keybind === e.key) {\r\n                const abilityCooldownRemaining = o.getRemainingCooldown()\r\n                const globalCooldownRemaining = globalCooldownRef.current ? globalCooldownRef.current - (now - globalCooldownStartTimeRef.current) : 0\r\n                const remaining = Math.max(abilityCooldownRemaining, globalCooldownRemaining)\r\n\r\n                if(remaining > spellQueueWindow) return\r\n\r\n                queueAbility(o.source, o.execute, remaining + 15)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleClick = (name, getRemainingCooldown, execute) => {\r\n        const now = Date.now()\r\n\r\n        const abilityCooldownRemaining = getRemainingCooldown()\r\n        const globalCooldownRemaining = globalCooldownRef.current ? globalCooldownRef.current - (now - globalCooldownStartTimeRef.current) : 0\r\n        const remaining = Math.max(abilityCooldownRemaining, globalCooldownRemaining)\r\n\r\n        if(remaining > spellQueueWindow) return\r\n\r\n        queueAbility(name, execute, remaining + 15)\r\n    }\r\n\r\n    const calculateCooldown = (cooldown) => {\r\n        return cooldown/hasteRef.current\r\n    }\r\n\r\n    const triggerGlobalCooldown = () => {\r\n        let gcd = Math.max(calculateCooldown(gcdLength), gcdLength/2)\r\n\r\n        GlobalCooldown.start(gcd, triggerCooldown)\r\n\r\n        setTimeout(() => {\r\n            observersRef.current.forEach(o => o.notify())\r\n        }, 0)\r\n    }\r\n\r\n    const subscribe = (observer) => {\r\n        setObservers(o => [...o, observer])\r\n    }\r\n\r\n    const unsubscribe = (source) => {\r\n        setObservers(obs => obs.filter(o => o.source !== source))\r\n    }\r\n\r\n    const getAbilityCooldown = (k) => {\r\n        const ability = abilitySettings[k]\r\n        let cooldown = ability.cooldown\r\n\r\n        if(inVoidformRef.current && k === \"mind-blast\") {\r\n            let cdr = ability.cdr \r\n            if(!voidformEntered) {\r\n                setVoidformEntered(true)\r\n                const now = Date.now()\r\n                const startTime = state.cooldowns[k].startTime\r\n                const remaining = startTime ? now - startTime : cooldown\r\n                cdr *= remaining/cooldown\r\n            }\r\n            cooldown -= cdr\r\n        }\r\n\r\n        if(!inVoidformRef.current && voidformEntered)\r\n            setVoidformEntered(false)\r\n\r\n        return ability.hasted ? calculateCooldown(cooldown) : cooldown\r\n    }\r\n\r\n    const getAbilityCastTime = (k) => {\r\n        const ability = abilitySettings[k]\r\n        const casttime = ability.casttime\r\n\r\n        return ability.staticCastTime ? casttime : calculateCooldown(casttime)\r\n    }\r\n\r\n    const queueAbility = (name, execute, remaining) => {\r\n\r\n        clearTimeout(spellQueueTimer.current)\r\n\r\n        spellQueueTimer.current = setTimeout(() => {\r\n            if(!observersRef.current.find(o => o.source === name)) return\r\n            execute()\r\n        }, remaining)\r\n    }\r\n\r\n    return (\r\n        <div className=\"ability-bar-container\">\r\n        <div className=\"progress-bar-container\">\r\n            {state.casting ? <CastBar {...state.casting}/> : null}\r\n        </div>\r\n        <div className=\"ability-bar\">\r\n            {Object.keys(abilities)\r\n            .map((k,i) => {\r\n                if(abilities[k].disabled) return\r\n                if(k === \"void-bolt\" && !inVoidformRef.current) return\r\n                if(k === \"void-eruption\" && inVoidformRef.current) return\r\n                return <ProgressAbility\r\n                    name={k}\r\n                    key={i}\r\n                    {...abilities[k]}\r\n                    {...state.cooldowns[k]}\r\n                    settings={abilitySettings[k]}\r\n                    cooldown={getAbilityCooldown(k)}\r\n                    globalCooldown={state.globalCooldown}\r\n                    globalCooldownStartTime={state.globalCooldownStartTime}\r\n                    casttime={getAbilityCastTime(k)}\r\n                    casting={state.casting && state.casting.time && state.casting.direction}\r\n                    subscribe={subscribe}\r\n                    unsubscribe={unsubscribe}\r\n                    onExecute={triggerGlobalCooldown}\r\n                    onAbilityUpdate={triggerCooldown}\r\n                    onClick={handleClick}\r\n                    triggerEvent={triggerEvent}\r\n                    reset={reset}\r\n                />\r\n            })}\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AbilityBar","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport CooldownSweep from \"../CooldownSweep\"\r\nimport \"./Aura.css\"\r\n\r\nconst Aura = (props) => {\r\n\r\n    const {icon, displayName, duration, maxDuration, stacks} = props\r\n\r\n    const size = 30\r\n    const progress = duration && ((maxDuration-duration)/maxDuration)\r\n\r\n    return (\r\n        <div className=\"aura\">\r\n            <img\r\n                src={icon}\r\n                width={size}\r\n                height={size}\r\n            >\r\n            </img>\r\n            <div className=\"aura-text\">{stacks > 0 ? stacks : \"\"}</div>\r\n            {duration ? <CooldownSweep size={30} progress={progress} inverse={true}/> : null}\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aura","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Aura from \"./Aura\"\r\n\r\nconst LingeringInsanity = (props) => {\r\n\r\n    const { type, startTime, haste, stacks, inVoidform, triggerEvent, ...settings} = props\r\n\r\n    const interval = 100\r\n    const name = \"lingeringInsanity\"\r\n    const displayName = \"Lingering Insanity\"\r\n    const icon = \"images/lingering-insanity.jpg\"\r\n    const defaultMaxDuration = 60000\r\n\r\n    const [maxDuration, setMaxDuration] = useState(defaultMaxDuration)\r\n    const [duration, setDuration] = useState(0)\r\n\r\n    const stacksRef = useRef(stacks)\r\n    stacksRef.current = stacks\r\n\r\n    const inVoidformRef = useRef(inVoidform)\r\n    inVoidformRef.current = inVoidform\r\n\r\n    const startTimeRef = useRef(startTime)\r\n    startTimeRef.current = startTime\r\n\r\n    const hasteRef = useRef(haste)\r\n    hasteRef.current = haste\r\n\r\n    const initialize = (afterVoidformEntry, hasteRetention, stacks, duration) => {\r\n        let currentMaxDuration = afterVoidformEntry ? defaultMaxDuration : duration\r\n        let voidformEntered = false\r\n\r\n        setMaxDuration(maxDuration => currentMaxDuration)\r\n\r\n        triggerEvent({\r\n            type: \"LINGERING_INSANITY_START\",\r\n            payload: {\r\n                haste: hasteRef.current * hasteRetention,\r\n                stacks\r\n            }\r\n        })\r\n\r\n        return {\r\n            currentMaxDuration,\r\n            voidformEntered\r\n        }\r\n\r\n    }\r\n\r\n    const startStatic = () => {\r\n\r\n        const { duration, afterVoidformEntry, hasteRetention } = settings\r\n        \r\n        let state = initialize(afterVoidformEntry, hasteRetention, stacksRef.current, duration)\r\n\r\n        const timer = setInterval(() => {\r\n\r\n            const now = Date.now()\r\n\r\n            console.log(\"here\")\r\n\r\n            //just left voidform\r\n            if(state.voidformEntered && !inVoidformRef.current) {\r\n                state = initialize(afterVoidformEntry, hasteRetention, stacksRef.current, duration)\r\n\r\n                return\r\n            }\r\n\r\n            //timed out\r\n            if(now >= startTimeRef.current + state.currentMaxDuration) {\r\n                clearInterval(timer)\r\n                triggerEvent({\r\n                    type: \"LINGERING_INSANITY_END\"\r\n                })\r\n\r\n                return\r\n            }\r\n\r\n            if(!state.voidformEntered && inVoidformRef.current) \r\n            {\r\n                state.voidformEntered = true\r\n\r\n                if(afterVoidformEntry) {\r\n                    triggerEvent({\r\n                        type: \"AURA_REFRESH\",\r\n                        payload: {\r\n                            name,\r\n                            time: now\r\n                        }\r\n                    })\r\n                    setMaxDuration(maxDuration => duration)\r\n                    state.currentMaxDuration = duration\r\n                    setDuration(duration => 0)\r\n                    return\r\n                }\r\n           }            \r\n\r\n            setDuration(duration => now - startTimeRef.current)\r\n\r\n        }, interval)\r\n\r\n        return timer\r\n    }\r\n\r\n    const calculateDecayStacks = (voidformHaste, hasteDecay) => {\r\n        return Math.ceil(voidformHaste/hasteDecay)\r\n    }\r\n\r\n    const startDecay = () => {\r\n\r\n        const { decayRate, hasteDecay } = settings\r\n\r\n        let i = 0\r\n\r\n        let state = initialize(true, 1, calculateDecayStacks(hasteRef.current, hasteDecay))\r\n\r\n        const timer = setInterval(() => {\r\n\r\n            i += interval\r\n\r\n            const now = Date.now()\r\n\r\n            if(state.voidformEntered && !inVoidformRef.current) {\r\n                state = initialize(true, 1, calculateDecayStacks(hasteRef.current, hasteDecay))\r\n                i = 0\r\n\r\n                return\r\n            }\r\n\r\n            if(stacksRef.current <= 0) {\r\n                clearInterval(timer)\r\n                triggerEvent({\r\n                    type: \"LINGERING_INSANITY_END\"\r\n                })\r\n\r\n                return\r\n            }\r\n\r\n            //lose stack\r\n            if(i % decayRate === 0) {\r\n                triggerEvent({\r\n                    type: \"LINGERING_INSANITY_UPDATE\",\r\n                    payload: hasteDecay * -1\r\n                })\r\n            }\r\n\r\n            if(!state.voidformEntered && inVoidformRef.current) state.voidformEntered = true\r\n\r\n            setDuration(duration => now - startTimeRef.current)\r\n\r\n        }, interval)\r\n\r\n        return timer\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer\r\n\r\n        switch(type) {\r\n            case \"static\":\r\n                timer = startStatic()\r\n                break\r\n            case \"decay\":\r\n                timer = startDecay()\r\n                break\r\n        }\r\n\r\n        return () => clearInterval(timer)\r\n\r\n    }, [])\r\n\r\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={maxDuration} stacks={stacks}/>\r\n}\r\n\r\nexport default LingeringInsanity","import React, { useState, useEffect, useRef } from 'react';\r\nimport Aura from \"./Aura\"\r\n\r\nconst Voidform = (props) => {\r\n\r\n    const { drainRate, drainStart, hasteStack, hasteStart, maxStacks, paused, active, triggerEvent } = props\r\n    const interval = 100\r\n    const displayName = \"Voidform\"\r\n    const icon = \"images/voidform.jpg\"\r\n\r\n    const [stacks, setStacks] = useState(1)\r\n\r\n    const pausedRef = useRef(paused)\r\n    pausedRef.current = paused\r\n\r\n    const start = () => {\r\n        let n = 0\r\n        let frequency = Math.round(1000 / interval)\r\n\r\n        let i = 0\r\n\r\n        triggerEvent({\r\n            type: \"HASTE_UPDATE\",\r\n            payload: {\r\n                source: \"voidform\",\r\n                haste: hasteStart + hasteStack\r\n            }\r\n        })\r\n\r\n        const timer = setInterval(() => {\r\n            let sec = interval / 1000\r\n            let drain = (drainStart + drainRate * n) * sec\r\n\r\n            i++\r\n\r\n            if (!pausedRef.current) {\r\n                n += sec\r\n                triggerEvent({\r\n                    type: \"RESOURCE_UPDATE\",\r\n                    payload: {\r\n                        resource: drain * -1\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (i % frequency === 0 && (!maxStacks || i / frequency < maxStacks)) {\r\n                //gain a stack of vf\r\n                triggerEvent({\r\n                    type: \"VOIDFORM_UPDATE\",\r\n                    payload: hasteStack\r\n                })\r\n                setStacks(stacks => stacks + 1)\r\n            }\r\n\r\n        }, interval)\r\n\r\n        return timer\r\n    }\r\n\r\n    useEffect(() => {\r\n        let timer = start()\r\n\r\n        return () => {\r\n            clearInterval(timer)\r\n\r\n            triggerEvent({\r\n                type: \"VOIDFORM_END\",\r\n                payload: {\r\n                    time: Date.now(),\r\n                    startingHaste: hasteStart\r\n                }\r\n            })\r\n        }\r\n    }, [active])\r\n\r\n    return <Aura icon={icon} displayName={displayName} stacks={stacks} />\r\n}\r\n\r\nexport default Voidform","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Aura from \"./Aura\"\r\n\r\nconst DamageOverTime = (props) => {\r\n\r\n    const {icon, name, displayName, startTime, baseDuration, maxDuration, ticks, resource, haste, triggerEvent} = props\r\n\r\n    const interval = 100\r\n\r\n    const [duration, setDuration] = useState(0)\r\n\r\n    const startTimeRef = useRef(startTime)\r\n    startTimeRef.current = startTime\r\n\r\n    const maxDurationRef = useRef(maxDuration)\r\n    maxDurationRef.current = maxDuration\r\n\r\n    const hasteRef = useRef(haste)\r\n    hasteRef.current = haste\r\n\r\n    const calculateNextTickTime = (now) => {\r\n        //console.log(\"Haste: \" + hasteRef.current)\r\n        return (baseDuration/ticks)/hasteRef.current + now\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Inside use effect for: \" + name)\r\n        // console.log(\"Resource: \" + resource)\r\n        // console.log(\"Haste: \" + haste)\r\n        let start = Date.now()\r\n        let tickTime = calculateNextTickTime(start)\r\n\r\n        triggerEvent({\r\n            type: \"AURA_BEGIN\",\r\n            payload: {\r\n                name,\r\n                duration: baseDuration,\r\n                time: start\r\n            }\r\n        })\r\n\r\n        const timer = setInterval(() => {\r\n\r\n            const now = Date.now()\r\n\r\n            if(now >= startTimeRef.current + maxDurationRef.current) {\r\n                clearInterval(timer)\r\n                triggerEvent({\r\n                    type: \"RESOURCE_UPDATE\",\r\n                    payload: {\r\n                        resource\r\n                    }\r\n                })\r\n                triggerEvent({\r\n                    type: \"AURA_END\",\r\n                    payload: {\r\n                        name\r\n                    }\r\n                })\r\n                return\r\n            }\r\n\r\n            if(now >= tickTime) {\r\n                //console.log(\"Tick!\")\r\n                triggerEvent({\r\n                    type: \"RESOURCE_UPDATE\",\r\n                    payload: {\r\n                        resource\r\n                    }\r\n                })\r\n\r\n                tickTime = calculateNextTickTime(now)\r\n            }\r\n\r\n            setDuration(duration => now - startTimeRef.current)\r\n\r\n        }, interval)\r\n\r\n        return () => clearInterval(timer)\r\n    }, [])\r\n\r\n    return <Aura icon={icon} displayName={displayName} duration={duration} maxDuration={maxDurationRef.current}/>\r\n}\r\n\r\nexport default DamageOverTime","const whatIs = {\r\n    cooldown: \"The amount of time, in seconds, it takes for an ability to be able to be recast.\",\r\n    charges: \"The number of times an ability may be cast while it is on cooldown.\",\r\n    hasted: \"An ability that is hasted has its cooldown reduced by haste.\",\r\n    resourceCast: \"The amount of resource an ability will generate upon a successful cast.\",\r\n    resourceChannel: \"The amount of resource an ability will generate over its complete channel period.\",\r\n    resourceAura: \"The amount of resource an aura will generate every time its effect triggers.\",\r\n    cost: \"The amount of resource required to cast an ability. Casting the ability will spend the resource cost.\",\r\n    castTime: \"The amount of time, in seconds, it takes for an ability to be executed.\",\r\n    channelTime: \"The amount of time, in seconds, it takes for an ability's channel to complete.\",\r\n    ticks: \"The number of times a channel generates resources over its duration.\",\r\n    mindSearTargetCount: \"The number of targets Mind Sear will hit. Mind Sear generates more resource per additional target.\",\r\n    voidBoltRankTwo: \"An extra rank coming to Void Bolt in Shadowlands. It allows Void Bolt to be cast during Mind Flay, without canceling it.\",\r\n    voidBoltExtension: \"The amount of time, in seconds, that Shadow Word: Pain and Vampiric Touch are extended when Void Bolt is cast.\",\r\n    voidformThreshold: \"The amount of Insanity that is required to cast Void Eruption out of Voidform.\",\r\n    voidformCooldownReduction: \"The amount of time, in seconds, that Mind Blast's cooldown is reduced while in Voidform.\",\r\n    haste: \"Increases the rate at which spells cast and the global cooldown, and certain spell cooldowns, regenerate.\",\r\n    voidformStartingDrain: \"The starting amount of Insanity being drained every second while in Voidform.\",\r\n    voidformDrainRate: \"The amount of increasing Insanity drained every second while in Voidform.\",\r\n    voidformStartingHaste: \"The amount of haste, in percent, that is granted at the start of Voidform.\",\r\n    voidformHasteStack: \"The amount of haste, in percent, that every stack of Voidform grants.\",\r\n    voidformMaximumStacks: \"The maximum number of Voidform stacks. Note that reaching the maximum does not stop drain from increasing.\",\r\n    lingeringInsanityType: \"Lingering Insanity has two types.\\nStatic - The length of the aura and haste from stacks are constant.\\nDecay - Haste stacks are lost over the aura's duration at a certain rate.\",\r\n    lingeringInsanityDuration: \"An option for type 'Static'. This is the amount of time, in seconds, that the aura will last.\",\r\n    lingeringInsanityAfterVoidformEntry: \"An option for type 'Static'. If enabled, then the duration for Lingering Insanity will only start after entering Voidform.\",\r\n    lingeringInsanityHasteRetention: \"An option for type 'Static. The amount of haste, in percent, that is retained from the final stacks of the previous Voidform.\",\r\n    lingeringInsanityDecayRate: \"An option for type 'Decay'. The amount of time, in seconds it takes for one stack of the aura to be lost.\",\r\n    lingeringInsanityHasteDecay: \"An option for type 'Decay'. The amount of haste, in percent, that is removed every time the aura loses a stack.\",\r\n    auraDuration: \"The amount of time, in seconds, that an aura's effect will last.\",\r\n    auraTicks: \"The number of times an aura will trigger its effect over its duration.\"\r\n}\r\n\r\nconst commonOptions = {\r\n    cooldown: {\r\n        key: \"cooldown\",\r\n        displayName: \"Cooldown\",\r\n        type: \"time\",\r\n        whatIs: whatIs.cooldown,\r\n        unit: \"sec\"\r\n    },\r\n    charges: {\r\n        key: \"charges\",\r\n        displayName: \"Charges\",\r\n        type: \"number\",\r\n        whatIs: whatIs.charges\r\n    },\r\n    hasted: {\r\n        key: \"hasted\",\r\n        displayName: \"Hasted\",\r\n        type: \"boolean\",\r\n        whatIs: whatIs.hasted\r\n    },\r\n    resourceCast: {\r\n        key: \"resource\",\r\n        displayName: \"Resource\",\r\n        type: \"number\",\r\n        whatIs: whatIs.resourceCast,\r\n        unit: \"insanity\"\r\n    },\r\n    resourceChannel: {\r\n        key: \"resource\",\r\n        displayName: \"Resource\",\r\n        type: \"number\",\r\n        whatIs: whatIs.resourceChannel,\r\n        unit: \"insanity\"\r\n    },\r\n    cost: {\r\n        key: \"resource\",\r\n        displayName: \"Cost\",\r\n        type: \"number\",\r\n        whatIs: whatIs.cost,\r\n        unit: \"insanity\"\r\n    },\r\n    castTime: {\r\n        key: \"casttime\",\r\n        displayName: \"Cast Time\",\r\n        type: \"time\",\r\n        whatIs: whatIs.castTime,\r\n        unit: \"sec\"\r\n    },\r\n    channelTime: {\r\n        key: \"casttime\",\r\n        displayName: \"Channel Time\",\r\n        type: \"time\",\r\n        whatIs: whatIs.channelTime,\r\n        unit: \"sec\"\r\n    },\r\n    ticks: {\r\n        key: \"ticks\",\r\n        displayName: \"Ticks\",\r\n        type: \"number\",\r\n        whatIs: whatIs.ticks\r\n    },\r\n    auraDuration: {\r\n        key: \"baseDuration\",\r\n        displayName: \"Duration\",\r\n        type: \"time\",\r\n        whatIs: whatIs.auraDuration\r\n    },\r\n    auraTicks: {\r\n        key: \"ticks\",\r\n        displayName: \"Ticks\",\r\n        type: \"number\",\r\n        whatIs: whatIs.auraTicks\r\n    },\r\n    auraResource: {\r\n        key: \"resource\",\r\n        displayName: \"Resource\",\r\n        type: \"number\",\r\n        whatIs: whatIs.resourceAura\r\n    }\r\n}\r\n\r\n\r\nexport const abilityOptions = {\r\n    \"void-bolt\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.hasted,\r\n        commonOptions.charges,\r\n        commonOptions.resourceCast,\r\n        {\r\n            key: \"rankTwo\",\r\n            displayName: \"Rank 2\",\r\n            type: \"boolean\",\r\n            whatIs: whatIs.voidBoltRankTwo\r\n        },\r\n        {\r\n            key: \"extension\",\r\n            displayName: \"DoT Extension\",\r\n            type: \"time\",\r\n            whatIs: whatIs.voidBoltExtension\r\n        }\r\n    ],\r\n    \"void-eruption\": [\r\n        commonOptions.castTime,\r\n        {\r\n            key: \"resource\",\r\n            displayName: \"Insanity Threshold\",\r\n            type: \"number\",\r\n            whatIs: whatIs.voidformThreshold\r\n        }\r\n    ],\r\n    \"mind-flay\": [\r\n        commonOptions.channelTime,\r\n        commonOptions.resourceChannel,\r\n        commonOptions.ticks\r\n    ],\r\n    \"mind-sear\": [\r\n        commonOptions.channelTime,\r\n        commonOptions.resourceChannel,\r\n        commonOptions.ticks,\r\n        {\r\n            key: \"targetCount\",\r\n            displayName: \"Target Count\",\r\n            type: \"number\",\r\n            whatIs: whatIs.mindSearTargetCount\r\n        }\r\n    ],\r\n    \"mind-blast\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.charges,\r\n        commonOptions.castTime,\r\n        commonOptions.hasted,\r\n        commonOptions.resourceCast,\r\n        {\r\n            key: \"cdr\",\r\n            displayName: \"Voidform Cooldown Reduction\",\r\n            type: \"time\",\r\n            whatIs: whatIs.voidformCooldownReduction\r\n        }\r\n    ],\r\n    \"shadow-word-death\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.charges,\r\n        commonOptions.hasted,\r\n        commonOptions.resourceCast\r\n    ],\r\n    \"void-torrent\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.channelTime,\r\n        commonOptions.resourceChannel,\r\n        commonOptions.ticks\r\n    ],\r\n    \"shadow-word-pain\": [\r\n        commonOptions.resourceCast\r\n    ],\r\n    \"vampiric-touch\": [\r\n        commonOptions.castTime,\r\n        commonOptions.resourceCast\r\n    ],\r\n    \"devouring-plague\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.cost\r\n    ],\r\n    \"shadowfiend\": [\r\n        commonOptions.cooldown,\r\n        commonOptions.resourceCast\r\n    ]\r\n}\r\n\r\nexport const auraOptions = {\r\n    \"stats\": [\r\n        {\r\n            key: \"haste\",\r\n            displayName: \"Haste\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.haste\r\n        }\r\n    ],\r\n    \"voidform\": [\r\n        {\r\n            key: \"drainStart\",\r\n            displayName: \"Starting Insanity Drain\",\r\n            type: \"float\",\r\n            unit: \"/sec\",\r\n            whatIs: whatIs.voidformStartingDrain,\r\n        },\r\n        {\r\n            key: \"drainRate\",\r\n            displayName: \"Insanity Drain Rate\",\r\n            type: \"float\",\r\n            unit: \"/sec\",\r\n            whatIs: whatIs.voidformDrainRate\r\n        },\r\n        {\r\n            key: \"hasteStart\",\r\n            displayName: \"Voidform Starting Haste\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.voidformStartingHaste\r\n        },\r\n        {\r\n            key: \"hasteStack\",\r\n            displayName: \"Voidform Haste Per Stack\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.voidformHasteStack\r\n        },\r\n        {\r\n            key: \"maxStacks\",\r\n            displayName: \"Maximum Voidform Stacks\",\r\n            type: \"number\",\r\n            whatIs: whatIs.voidformMaximumStacks\r\n        }\r\n    ],\r\n    \"lingeringInsanity\": [\r\n        {\r\n            key: \"type\",\r\n            displayName: \"Aura Type\",\r\n            type: \"select\",\r\n            options: [{\r\n                value: \"static\",\r\n                displayName: \"Static\"\r\n            },{\r\n                value: \"decay\",\r\n                displayName: \"Decay\"\r\n            }],\r\n            whatIs: whatIs.lingeringInsanityType\r\n        },\r\n        {\r\n            key: \"duration\",\r\n            displayName: \"Aura Duration\",\r\n            type: \"time\",\r\n            whatIs: whatIs.lingeringInsanityDuration\r\n        },\r\n        {\r\n            key: \"afterVoidformEntry\",\r\n            displayName: \"After Voidform Entry\",\r\n            type: \"boolean\",\r\n            whatIs: whatIs.lingeringInsanityAfterVoidformEntry\r\n        },\r\n        {\r\n            key: \"hasteRetention\",\r\n            displayName: \"Haste Retained\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.lingeringInsanityHasteRetention\r\n        },\r\n        {\r\n            key: \"decayRate\",\r\n            displayName: \"Stack Decay Rate\",\r\n            type: \"time\",\r\n            whatIs: whatIs.lingeringInsanityDecayRate\r\n        },\r\n        {\r\n            key: \"hasteDecay\",\r\n            displayName: \"Haste Decay Amount\",\r\n            type: \"percent\",\r\n            whatIs: whatIs.lingeringInsanityHasteDecay\r\n        }\r\n    ],\r\n    \"shadow-word-pain\": [\r\n        commonOptions.auraDuration,\r\n        commonOptions.auraTicks,\r\n        commonOptions.auraResource\r\n    ],\r\n    \"vampiric-touch\": [\r\n        commonOptions.auraDuration,\r\n        commonOptions.auraTicks,\r\n        commonOptions.auraResource\r\n    ],\r\n    \"devouring-plague\": [\r\n        commonOptions.auraDuration\r\n    ],\r\n    \"shadowfiend\": [\r\n        commonOptions.auraResource\r\n    ]\r\n}","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport LingeringInsanity from \"./LingeringInsanity\"\r\nimport Voidform from \"./Voidform\"\r\nimport DamageOverTime from './DamageOverTime';\r\nimport { auraOptions } from '../../lib/options';\r\n\r\nconst dots = [\r\n  {\r\n    name: \"shadow-word-pain\",\r\n    icon: \"images/shadow-word-pain.jpg\",\r\n    displayName: \"Shadow Word: Pain\"\r\n  },\r\n  {\r\n    name: \"vampiric-touch\",\r\n    icon: \"images/vampiric-touch.jpg\",\r\n    displayName: \"Vampiric Touch\"\r\n  },\r\n  {\r\n    name: \"devouring-plague\",\r\n    icon: \"images/devouring-plague.jpg\",\r\n    displayName: \"Devouring Plague\"\r\n  },\r\n  {\r\n    name: \"shadowfiend\",\r\n    icon: \"images/shadowfiend.jpg\",\r\n    displayName: \"Shadowfiend\"\r\n  }\r\n]\r\n\r\nconst AuraBar = (props) => {\r\n\r\n    const {auras, triggerEvent, settings, haste} = props\r\n    const {lingeringInsanity, voidform} = settings \r\n\r\n    const [state, triggerAuraEvent] = useReducer((state, action) => {\r\n\r\n    })\r\n\r\n    return (\r\n        <div className=\"aura-container\">\r\n          {auras.voidform.active \r\n          ? <Voidform \r\n            {...voidform}\r\n            {...auras.voidform}\r\n            triggerEvent={triggerEvent}/> \r\n          : null}\r\n          {auras.lingeringInsanity.active\r\n          ? <LingeringInsanity \r\n            {...lingeringInsanity}\r\n            {...auras.lingeringInsanity} \r\n            inVoidform={auras.voidform.active} \r\n            triggerEvent={triggerEvent}/>\r\n          : null}\r\n          {dots.map(dot => \r\n            auras[dot.name].active\r\n            ? <DamageOverTime\r\n                {...dot}\r\n                {...auras[dot.name]}\r\n                {...settings[dot.name]}\r\n                haste={haste}\r\n                triggerEvent={triggerEvent} \r\n              />\r\n            : null\r\n          )}\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default AuraBar\r\n\r\n\r\n","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport {useCleanup} from \"../../utils/hooks\"\r\n\r\nimport \"./Panel.css\"\r\n\r\nconst Panel = (props) => {\r\n\r\n    const {panel, currentPanel, reset, onClick, handleClose, header, panelClass, style} = props\r\n\r\n    useCleanup(panel, currentPanel, reset)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel-header hover-pointer\" onClick={() => onClick(panel)}>{header}</div>\r\n            <div className={`panel ${panelClass}`} style={style}>\r\n                <button className=\"panel-button panel-exit-button\" onClick={handleClose}>x</button>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel","import {useEffect, useRef} from \"react\"\r\n\r\nexport const useCleanup = (target, value, cleanup) => {\r\n    const ref = useRef()\r\n\r\n    useEffect(() => {\r\n        if(ref.current === target) {\r\n            cleanup()\r\n        }       \r\n        ref.current = value\r\n    }, [value])\r\n}","const defaultAbilitySettings = {\r\n    \"mind-flay\": {\r\n        cooldown: 0,\r\n        resource: 12,\r\n        hasted: true,\r\n        casttime: 3000,\r\n        ticks: 4,\r\n        type: \"channel\",\r\n    },\r\n    \"mind-sear\": {\r\n        cooldown: 0,\r\n        resource: 5,\r\n        hasted: true,\r\n        casttime: 3000,\r\n        ticks: 4,\r\n        targetCount: 1,\r\n        type: \"channel\",\r\n    },\r\n    \"void-bolt\": {\r\n        cooldown: 4500,\r\n        resource: 20,\r\n        hasted: true,\r\n        rankTwo: false,\r\n        type: \"instant\",\r\n        charges: 1,\r\n        extension: 3000\r\n    },\r\n    \"void-eruption\": {\r\n        cooldown: 0,\r\n        type: \"cast\",\r\n        casttime: 2000,\r\n        resource: 90,\r\n        costsResource: true\r\n    },\r\n    \"mind-blast\": {\r\n        cooldown: 7500,\r\n        resource: 12,\r\n        hasted: true,\r\n        type: \"cast\",\r\n        casttime: 1500,\r\n        charges: 1,\r\n        cdr: 1500\r\n    },\r\n    \"shadow-word-death\": {\r\n        cooldown: 9000,\r\n        resource: 15,\r\n        type: \"instant\",\r\n        charges: 1,\r\n    },\r\n    \"void-torrent\": {\r\n        cooldown: 45000,\r\n        resource: 30,\r\n        type: \"channel\",\r\n        casttime: 4000,\r\n        staticCastTime: true,\r\n        ticks: 10\r\n    },\r\n    \"shadow-word-pain\": {\r\n        cooldown: 0,\r\n        resource: 4,\r\n        type: \"instant\"\r\n    },\r\n    \"vampiric-touch\": {\r\n        cooldown: 0,\r\n        resource: 6,\r\n        type: \"cast\",\r\n        casttime: 1500\r\n    },\r\n    \"devouring-plague\": {\r\n        cooldown: 0,\r\n        resource: 50,\r\n        costsResource: true,\r\n        type: \"instant\"\r\n    },\r\n    \"shadowfiend\": {\r\n        cooldown: 180000,\r\n        resource: 3,\r\n        type: \"instant\"\r\n    }\r\n}\r\n\r\nexport default defaultAbilitySettings","const defaultAuraSettings = {\r\n    stats: {\r\n        displayName: \"Stats\",\r\n        haste: 0\r\n    },\r\n    voidform: {\r\n        displayName: \"Voidform\",\r\n        drainStart: 6,\r\n        drainRate: .68,\r\n        hasteStart: 0,\r\n        hasteStack: .005,\r\n        maxStacks: 0\r\n    },\r\n    lingeringInsanity: {\r\n        displayName: \"Lingering Insanity\",\r\n        type: \"decay\",\r\n        duration: 60000,\r\n        afterVoidformEntry: false,\r\n        hasteRetention: 1,\r\n        decayRate: 3000,\r\n        hasteDecay: .01\r\n    },\r\n    \"shadow-word-pain\": {\r\n        displayName: \"Shadow Word: Pain\",\r\n        baseDuration: 16000,\r\n        ticks: 8,\r\n        resource: 0\r\n    },\r\n    \"vampiric-touch\": {\r\n        displayName: \"Vampiric Touch\",\r\n        baseDuration: 21000,\r\n        ticks: 7,\r\n        resource: 0\r\n    },\r\n    \"devouring-plague\": {\r\n        displayName: \"Devouring Plague\",\r\n        baseDuration: 12000,\r\n        ticks: 4,\r\n        resource: 0\r\n    },\r\n    \"shadowfiend\": {\r\n        displayName: \"Shadowfiend\",\r\n        baseDuration: 15000,\r\n        ticks: 10,\r\n        resource: 3\r\n    }\r\n}\r\n\r\nexport default defaultAuraSettings","import {Base64} from \"js-base64\"\r\nimport abilitySettings from \"../lib/abilitySettings\"\r\nimport auraSettings from \"../lib/auraSettings\"\r\n\r\nconst parseAbility = (ability, key) => {\r\n    let abilitySetting = abilitySettings[key]\r\n    let result = Object.keys(abilitySetting).reduce((obj, k) => {\r\n        let userSetting = ability[k]\r\n        //might want to look at options\r\n        let setting = abilitySetting[k]\r\n\r\n        if(userSetting === null || userSetting === undefined) throw new Error(\"Missing ability setting in input \" + k)\r\n\r\n        if(typeof userSetting !== typeof setting) throw new Error(\"Ability setting has invalid format\")\r\n        \r\n        obj[k] = userSetting\r\n\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst parseAbilitySettings = (abilities) => {\r\n    let result = {}\r\n\r\n    Object.keys(abilitySettings).forEach(a => {\r\n        let ability = abilities[a]\r\n\r\n        if(!ability) throw new Error(\"Missing ability in input\")\r\n\r\n        result[a] = parseAbility(ability, a)\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nconst parseAura = (aura, key) => {\r\n    let auraSetting = auraSettings[key]\r\n\r\n    let result = Object.keys(auraSetting).reduce((obj, k) => {\r\n        let userSetting = aura[k]\r\n        let setting = auraSetting[k]\r\n\r\n        if(userSetting === null || auraSetting === undefined) throw new Error(\"Missing aura setting in input \" + k)\r\n        if(typeof userSetting !== typeof setting) throw new Error(\"Aura setting has invalid format\")\r\n\r\n        obj[k] = userSetting\r\n\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst parseAuraSettings = (auras) => {\r\n    let result = {}\r\n    Object.keys(auraSettings).forEach(a => {\r\n        let aura = auras[a]\r\n\r\n        if(!aura) throw new Error(\"Missing aura in input\")\r\n\r\n        result[a] = parseAura(aura, a)\r\n    })\r\n\r\n    return result\r\n}\r\n\r\nexport const importSettings = (settings, includeKeybinds) => {\r\n\r\n    try {\r\n        let parsedSettings = JSON.parse(Base64.decode(settings))\r\n\r\n        let parsedAbilitySettings = parseAbilitySettings(parsedSettings.abilitySettings)\r\n        let parsedAuraSettings = parseAuraSettings(parsedSettings.auraSettings)\r\n        let abilityConfig = formatAbilityConfig(parsedSettings.abilityConfig, includeKeybinds)\r\n\r\n        return {\r\n            abilitySettings: parsedAbilitySettings, \r\n            auraSettings: parsedAuraSettings,\r\n            abilityConfig\r\n        }\r\n    }\r\n\r\n    catch(e) {\r\n        throw new Error(\"An error occurred while parsing input data.\\nReason: \" + e.message)\r\n    }\r\n}\r\n\r\nconst formatSingleAbilitySetting = (setting) => {\r\n    let result = Object.keys(setting).reduce((obj, k) => {\r\n        obj[k] = setting[k]\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst formatAbilitySettingsForExport = (settings) => {\r\n    let result = Object.keys(settings).reduce((obj, k) => {\r\n        let ability = settings[k]\r\n        let formattedAbility = formatSingleAbilitySetting(ability)\r\n        obj[k] = formattedAbility\r\n        return obj\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nconst formatAbilityConfig = (settings, includeKeybinds) => {\r\n    let result = Object.keys(settings).reduce((result, k) => {\r\n        let {keybind, disabled} = settings[k]\r\n\r\n        result[k] = {disabled: !!disabled}\r\n        if(includeKeybinds && keybind) result[k].keybind = keybind\r\n        \r\n        return result\r\n    }, {})\r\n\r\n    return result\r\n}\r\n\r\nexport const exportSettings = (currentSettings) => {\r\n    let formattedAbilitySettings = formatAbilitySettingsForExport(currentSettings.abilitySettings)\r\n    let formattedAbilityConfig = formatAbilityConfig(currentSettings.abilities, true)\r\n\r\n    let combined =  {\r\n        abilitySettings: formattedAbilitySettings,\r\n        auraSettings: currentSettings.auraSettings,\r\n        abilityConfig: formattedAbilityConfig\r\n    }\r\n\r\n    let result = Base64.encode(JSON.stringify(combined))\r\n\r\n    return result\r\n}","import live from \"./live\"\r\nimport alpha from \"./alpha\"\r\nimport legionENVoidlord from \"./legionENVoidlord\"\r\nimport legionAntorus from \"./legionAntorus\"\r\n\r\nexport default {\r\n    live,\r\n    alpha,\r\n    legionENVoidlord,\r\n    legionAntorus\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Live\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-eruption\": {\r\n            cooldown: 0,\r\n            type: \"cast\",\r\n            casttime: 1500,\r\n            resource: 90,\r\n            costsResource: true\r\n        },\r\n        \"mind-blast\": {\r\n            cooldown: 9000,\r\n            resource: 15,\r\n            hasted: true,\r\n            type: \"cast\",\r\n            casttime: 1500,\r\n            charges: 1,\r\n            cdr: 1500\r\n        },\r\n        \"shadow-word-death\": {\r\n            cooldown: 9000,\r\n            resource: 15,\r\n            type: \"instant\",\r\n            charges: 2,\r\n        },\r\n        \"void-torrent\": {\r\n            cooldown: 45000,\r\n            resource: 30,\r\n            type: \"channel\",\r\n            casttime: 4000,\r\n            staticCastTime: true,\r\n            ticks: 10,\r\n        },\r\n        \"shadowfiend\": {\r\n            cooldown: 180000,\r\n            resource: 3,\r\n            type: \"instant\"\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": {},\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": { disabled: true },\r\n        \"void-torrent\": { disabled: true },\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": { disabled: true },\r\n        \"shadowfiend\": {}\r\n    }\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Shadowlands Alpha\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-bolt\": {\r\n            cooldown: 4500,\r\n            resource: 20,\r\n            hasted: true,\r\n            rankTwo: true,\r\n            type: \"instant\",\r\n            charges: 1,\r\n            extension: 3000\r\n        },\r\n        \"void-eruption\": {\r\n            cooldown: 0,\r\n            type: \"cast\",\r\n            casttime: 2000,\r\n            resource: 90,\r\n            costsResource: true\r\n        },\r\n        \"mind-blast\": {\r\n            cooldown: 8000,\r\n            resource: 12,\r\n            hasted: true,\r\n            type: \"cast\",\r\n            casttime: 1500,\r\n            charges: 1,\r\n            cdr: 1500\r\n        },\r\n        \"shadow-word-death\": {\r\n            cooldown: 20000,\r\n            resource: 0,\r\n            type: \"instant\",\r\n            charges: 1,\r\n        },\r\n        \"devouring-plague\": {\r\n            cooldown: 0,\r\n            resource: 50,\r\n            costsResource: true,\r\n            type: \"instant\"\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings,\r\n        \"devouring-plague\": {\r\n            displayName: \"Devouring Plague\",\r\n            baseDuration: 12000,\r\n            ticks: 4,\r\n            resource: 0\r\n        }\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": {},\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": {},\r\n        \"void-torrent\": { disabled: true },\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": {},\r\n        \"shadowfiend\": {}\r\n    }\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Legion: EN + Void Lord\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-eruption\": {\r\n            cooldown: 0,\r\n            type: \"cast\",\r\n            casttime: 2500,\r\n            resource: 90,\r\n            costsResource: true\r\n        },\r\n        \"void-torrent\": {\r\n            cooldown: 60000,\r\n            resource: 0,\r\n            type: \"channel\",\r\n            casttime: 4000,\r\n            staticCastTime: true,\r\n            ticks: 10,\r\n        },\r\n        \"shadowfiend\": {\r\n            cooldown: 180000,\r\n            resource: 0,\r\n            type: \"instant\"\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings,\r\n        voidform: {\r\n            displayName: \"Voidform\",\r\n            drainStart: 6,\r\n            drainRate: .66,\r\n            hasteStart: 0,\r\n            hasteStack: .01,\r\n            maxStacks: 0\r\n        },\r\n        lingeringInsanity: {\r\n            displayName: \"Lingering Insanity\",\r\n            type: \"static\",\r\n            duration: 8000,\r\n            afterVoidformEntry: true,\r\n            hasteRetention: 1,\r\n            decayRate: 1000,\r\n            hasteDecay: .01\r\n        },\r\n        \"shadowfiend\": {\r\n            displayName: \"Shadowfiend\",\r\n            baseDuration: 15000,\r\n            ticks: 10,\r\n            resource: 0\r\n        }\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": {},\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": {},\r\n        \"void-torrent\": {},\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": { disabled: true }\r\n    }\r\n\r\n}","import defaultAbilitySettings from \"../abilitySettings\"\r\nimport defaultAuraSettings from \"../auraSettings\"\r\n\r\nexport default {\r\n    displayName: \"Legion: Antorus\",\r\n    abilitySettings: {\r\n        ...defaultAbilitySettings,\r\n        \"void-eruption\": {\r\n            cooldown: 0,\r\n            type: \"cast\",\r\n            casttime: 1500,\r\n            resource: 65,\r\n            costsResource: true\r\n        },\r\n        \"mind-blast\": {\r\n            cooldown: 7500,\r\n            resource: 12,\r\n            hasted: true,\r\n            type: \"cast\",\r\n            casttime: 1500,\r\n            charges: 2,\r\n            cdr: 1500\r\n        },\r\n        \"void-torrent\": {\r\n            cooldown: 60000,\r\n            resource: 0,\r\n            type: \"channel\",\r\n            casttime: 4000,\r\n            staticCastTime: true,\r\n            ticks: 10,\r\n        },\r\n        \"shadowfiend\": {\r\n            cooldown: 60000,\r\n            resource: 6,\r\n            type: \"instant\"\r\n        }\r\n    },\r\n    auraSettings: {\r\n        ...defaultAuraSettings,\r\n        stats: {\r\n            displayName: \"Stats\",\r\n            haste: .4\r\n        },\r\n        voidform: {\r\n            displayName: \"Voidform\",\r\n            drainStart: 6,\r\n            drainRate: .66,\r\n            hasteStart: 0,\r\n            hasteStack: .01,\r\n            maxStacks: 0\r\n        },\r\n        lingeringInsanity: {\r\n            displayName: \"Lingering Insanity\",\r\n            type: \"decay\",\r\n            duration: 60000,\r\n            afterVoidformEntry: false,\r\n            hasteRetention: 1,\r\n            decayRate: 1000,\r\n            hasteDecay: .01\r\n        },\r\n        \"shadowfiend\": {\r\n            displayName: \"Shadowfiend\",\r\n            baseDuration: 24000,\r\n            ticks: 16,\r\n            resource: 6\r\n        }\r\n    },\r\n    abilities: {\r\n        \"mind-flay\": {},\r\n        \"mind-sear\": {},\r\n        \"void-bolt\": {},\r\n        \"void-eruption\": {},\r\n        \"mind-blast\": {},\r\n        \"shadow-word-death\": {},\r\n        \"void-torrent\": {},\r\n        \"shadow-word-pain\": {},\r\n        \"vampiric-touch\": {},\r\n        \"devouring-plague\": { disabled: true }\r\n    }\r\n\r\n}","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\nimport { exportSettings, importSettings } from \"../../utils/importExport\"\r\nimport templates from \"../../lib/templates\"\r\nimport \"./Panel.css\"\r\n\r\nconst Templates = (props) => {\r\n\r\n    const {onChange} = props\r\n\r\n    return (\r\n        <div style={{width: \"60%\"}}>\r\n            <select className=\"panel-dropdown\" onChange={onChange}>\r\n                <option disabled selected>Choose a template...</option>\r\n                {Object.keys(templates).map(t => <option key={t} value={t}>{templates[t].displayName}</option>)}\r\n                <option key={\"custom\"} value={\"custom\"}>Custom</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ExportPanel = (props) => {\r\n\r\n    const {settings, onImport, currentPanel, onClick, closePanel} = props\r\n\r\n    const panel = \"export\"\r\n    const header = \"Import/Export Settings\"\r\n    const panelClass = \"left-panel\"\r\n    const placeholderText = \"Import settings here...\"\r\n    const exportTextAreaId = \"export-content\"\r\n    const rows = 20\r\n    const cols = 25\r\n\r\n    const [exportData, setExportData] = useState(\"\")\r\n    const [inputData, setInputData] = useState(\"\")\r\n    const [includeKeybinds, setIncludeKeybinds] = useState(false)\r\n\r\n    const handleImport = () => {\r\n        const settings = importSettings(inputData, includeKeybinds)\r\n        onImport(settings)\r\n        setInputData(\"\")\r\n    }\r\n\r\n    const handleExport = () => {\r\n        const data = exportSettings(settings)\r\n\r\n        setExportData(data)\r\n    }\r\n\r\n    const handleTemplateChange = (e) => {\r\n        const key = e.target.value\r\n\r\n        if(key === \"custom\") {\r\n            setInputData(\"\")\r\n            return\r\n        }\r\n\r\n        const {displayName, ...template} = templates[key]\r\n\r\n        const data = exportSettings({...template})\r\n\r\n        setInputData(data)\r\n    }\r\n\r\n    const copyToClipBoard = () => {\r\n        const textArea = document.getElementById(exportTextAreaId)\r\n\r\n        textArea.select()\r\n\r\n        try {\r\n            document.execCommand(\"copy\")\r\n\r\n        }\r\n        catch (err) {\r\n            //set the message\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        let data = e.target.value\r\n\r\n        setInputData(data)\r\n    }\r\n\r\n    const reset = () => {\r\n        setExportData(\"\")\r\n        setInputData(\"\")\r\n        setIncludeKeybinds(false)\r\n    }\r\n\r\n    return (\r\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass} style={{transform: `translateX(${currentPanel === panel ? \"0px\": \"-350px\"})`}}>\r\n            <div className=\"vertical-panel-content\">\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Import Settings</div>\r\n                    <Templates onChange={handleTemplateChange} />\r\n                    <textarea className=\"panel-text-area\" rows={rows} cols={cols} placeholder={placeholderText} value={inputData} onChange={handleInputChange}></textarea>\r\n                    <div className=\"panel-info-text-container\">\r\n                        <label>Include keybinds</label>\r\n                        <input type=\"checkbox\" onChange={() => setIncludeKeybinds(!includeKeybinds)} checked={includeKeybinds} />\r\n                    </div>\r\n                    <div className=\"panel-button-container\">\r\n                        <button className=\"panel-button panel-input-button\" onClick={handleImport} disabled={!inputData}>Import</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Export Settings</div>\r\n                    <textarea id={exportTextAreaId} className=\"panel-text-area\" rows={rows} cols={cols} value={exportData} readOnly={true}></textarea>\r\n                    <div className=\"panel-button-container\">\r\n                        <button className=\"panel-button panel-input-button\" onClick={handleExport}>Export</button>\r\n                        <button className=\"panel-button panel-input-button\" onClick={copyToClipBoard} disabled={!exportData}>Copy</button>\r\n                    </div>\r\n                </div>      \r\n            </div> \r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default ExportPanel","import React, { useState } from \"react\"\r\n\r\nconst TimeTextOption = (props) => {\r\n    const {value, onChange} = props\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value || parseFloat(e.target.value) < 0) return\r\n        onChange(parseFloat(e.target.value)*1000)\r\n    }\r\n    \r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={value/1000} min=\"0\" step=\".1\" onChange={handleChange} />sec</span>\r\n}\r\n\r\nconst NumberTextOption = (props) => {\r\n    const {value, onChange, unit} = props\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value || parseFloat(e.target.value) < 0) return\r\n        onChange(parseInt(e.target.value))\r\n    }\r\n    \r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={value} min=\"0\" onChange={handleChange} /> {unit}</span>\r\n}\r\n\r\nconst FloatTextOption = (props) => {\r\n    const {value, onChange, unit} = props\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value || parseFloat(e.target.value) < 0) return\r\n        onChange(parseFloat(e.target.value))\r\n    }\r\n    \r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={value} min=\"0\" step=\".01\" onChange={handleChange} /> {unit}</span>\r\n}\r\n\r\nconst PercentTextOption = (props) => {\r\n    const {value, onChange} = props\r\n\r\n    const handleChange = (e) => {\r\n        if(!e.target.value || parseFloat(e.target.value) < 0) return\r\n        onChange(parseFloat(e.target.value)/100)\r\n    }\r\n\r\n    return <span><input className=\"setting-option-input\" type=\"number\" value={value*100} min=\"0\" step=\".5\" onChange={handleChange} />%</span>\r\n}\r\n\r\nconst BooleanOption = (props) => {\r\n    const {value, onChange} = props\r\n\r\n    const handleChange = (e) => {\r\n        onChange(e.target.checked)\r\n    }\r\n\r\n    return <input type=\"checkbox\" defaultChecked={value} onChange={handleChange} />\r\n}\r\n\r\nconst SelectOption = (props) => {\r\n    const {value, onChange, name, options} = props\r\n\r\n    const handleChange = (e) => {\r\n        onChange(e.target.value)\r\n    }\r\n\r\n    return (\r\n        options.map(o => (\r\n            <div>\r\n                <input type=\"radio\" id={o.value} name={name} value={o.value} defaultChecked={o.value === value} onChange={handleChange} />\r\n                <label htmlFor={o.value}>{o.displayName}</label>\r\n            </div>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default Option = (type, value, onChange, key, name, rest) => {\r\n    switch(type) {\r\n        case \"time\":\r\n            return <TimeTextOption key={key} value={value} onChange={onChange} />\r\n        case \"number\":\r\n            return <NumberTextOption key={key} value={value} onChange={onChange} {...rest} />\r\n        case \"float\":\r\n            return <FloatTextOption key={key} value={value} onChange={onChange} {...rest} />\r\n        case \"percent\":\r\n            return <PercentTextOption key={key} value={value} onChange={onChange} />\r\n        case \"boolean\":\r\n            return <BooleanOption key={key} value={value} onChange={onChange} />\r\n        case \"select\":\r\n            return <SelectOption key={key} value={value} name={name} onChange={onChange} {...rest} />\r\n        default:\r\n            return null\r\n    }\r\n}","import React from \"react\"\r\nimport Option from \"./optionFactory\"\r\nimport \"./WhatIs.css\"\r\nimport \"./SettingOption.css\"\r\n\r\nconst SettingOption = (props) => {\r\n    const {value, name, type, whatIs, displayName, onChange, onHelp, closeHelp, parentKey, ...rest} = props\r\n\r\n    const handleInputChange = (v) => {\r\n        onChange(name, v)\r\n    }\r\n\r\n    const handleOnHelp = (e) => {\r\n        const pos = {\r\n            x: e.target.offsetLeft,\r\n            y: e.target.offsetTop\r\n        }\r\n        //console.log(e.target.offsetLeft)\r\n        //console.log(e.target.offsetTop)\r\n        onHelp(displayName, whatIs, pos)\r\n    }\r\n\r\n    return (\r\n        <div className=\"setting-option\">\r\n            <div>\r\n                <i className=\"fa fa-question-circle what-is-icon\" onMouseEnter={handleOnHelp} onMouseLeave={closeHelp}></i>\r\n            </div>\r\n            <div className=\"setting-option-header\">{displayName}</div>\r\n            {Option(type, value, handleInputChange, parentKey + \"-input\", name, rest)}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SettingOption","import React from \"react\"\r\nimport \"./WhatIs.css\"\r\n\r\nconst WhatIs = (props) => {\r\n    const {name, text, xPos, yPos} = props\r\n\r\n    //console.log(xPos, yPos)\r\n    const minimumHeight = 30\r\n\r\n    const style = {\r\n        left: `${xPos}px`,\r\n        top: `${yPos+minimumHeight}px`\r\n    }\r\n    \r\n    return (\r\n        <div className=\"what-is\" style={style}>\r\n            <div className=\"what-is-header\">What is... {name}?</div>\r\n            <div className=\"what-is-description\">{text}</div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatIs","import React, {useState} from \"react\"\r\nimport SettingOption from \"./SettingOption\"\r\nimport WhatIs from \"./WhatIs\"\r\nimport \"./Panel.css\"\r\n\r\nconst CustomizeSection = (props) => {\r\n\r\n    const {name, setting, options, onChange} = props\r\n\r\n    const [showWhatIs, setShowWhatIs] = useState(false)\r\n    const [whatIs, setWhatIs] = useState({})\r\n\r\n    const handleChange = (optionKey, option) => {\r\n        const newSetting = {...setting, [optionKey]: option}\r\n        onChange(newSetting, name)\r\n    }\r\n\r\n    const handleShowWhatIs = (name, text, pos) => {\r\n        setShowWhatIs(true)\r\n        setWhatIs({\r\n            name,\r\n            text,\r\n            xPos: pos.x,\r\n            yPos: pos.y\r\n        })    \r\n    }\r\n\r\n    const closeWhatIs = () => {\r\n        setShowWhatIs(false)\r\n        setWhatIs({})\r\n    }\r\n\r\n    return (\r\n        <div className=\"customize-section\">\r\n            <div className=\"customoze-section-header\">{setting.displayName}</div>\r\n            {options.map(o => {\r\n            return <SettingOption {...o} key={`${name}-${o.key}`} value={setting[o.key]} name={o.key} parentKey={`${name}-${o.key}`} onChange={handleChange} onHelp={handleShowWhatIs} closeHelp={closeWhatIs}/>\r\n            })}\r\n            {showWhatIs ? <WhatIs {...whatIs}/> : null}\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default CustomizeSection","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\nimport CustomizeSection from \"./CustomizeSection\"\r\nimport {abilityOptions, auraOptions} from \"../../lib/options\"\r\nimport \"./Panel.css\"\r\n\r\nconst SettingsPanel = (props) => {\r\n\r\n    const {settings, currentPanel, didReset, onAbilitySet, onAuraSet, onClick, closePanel} = props\r\n\r\n    const {abilities, auras} = settings\r\n\r\n    const panel = \"settings\"\r\n    const header= \"Custom Settings\"\r\n    const panelClass = \"right-panel\"\r\n\r\n    const abilityButtonText = \"Update Abilities\"\r\n    const auraButtonText = \"Update Auras\"\r\n\r\n    const changesPendingText =\r\n`Changes pending...\r\nClick the button below to apply your changes`\r\n\r\n    const [currentAbilities, setCurrentAbilities] = useState(abilities)\r\n    const [currentAuras, setCurrentAuras] = useState(auras)\r\n    const [activeAbilitySection, setActiveAbilitySection] = useState(Object.keys(abilities)[0])\r\n    const [activeAuraSection, setActiveAuraSection] = useState(Object.keys(auras)[0])\r\n    const [abilityChangesPending, setAbilityChangesPending] = useState(false)\r\n    const [auraChangesPending, setAuraChangesPending] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCurrentAuras(auras)\r\n        setCurrentAbilities(abilities)\r\n        setAbilityChangesPending(false)\r\n        setAuraChangesPending(false)\r\n    }, [didReset])\r\n\r\n    const handleAbilitySettingChange = (setting, key) => {\r\n        const newAbilities = {...currentAbilities, [key]: setting}\r\n        setCurrentAbilities(newAbilities)\r\n        setAbilityChangesPending(true)\r\n    }\r\n\r\n    const handleAuraSettingChange = (setting, key) => {\r\n        const newAuras = {...currentAuras, [key]: setting}\r\n        setCurrentAuras(newAuras)\r\n        setAuraChangesPending(true)\r\n    }\r\n\r\n    const handleAbilitySet = () => {\r\n        onAbilitySet(currentAbilities)\r\n        setAbilityChangesPending(false)\r\n    }\r\n\r\n    const handleAuraSet = () => {\r\n        onAuraSet(currentAuras)\r\n        setAuraChangesPending(false)\r\n    }\r\n\r\n    const showAbilityOptions = (e) => {\r\n        const settingKey = e.target.getAttribute(\"setting\")\r\n        setActiveAbilitySection(settingKey)\r\n    }\r\n\r\n    const showAuraOptions = (e) => {\r\n        const settingKey = e.target.getAttribute(\"setting\")\r\n        setActiveAuraSection(settingKey)\r\n    }\r\n\r\n    const reset = () => {\r\n        setActiveAbilitySection(Object.keys(abilities)[0])\r\n        setActiveAuraSection(Object.keys(auras)[0])\r\n        setCurrentAuras(auras)\r\n        setCurrentAbilities(abilities)\r\n        setAbilityChangesPending(false)\r\n        setAuraChangesPending(false)\r\n    }\r\n\r\n    return (\r\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass} style={{transform: `translateX(${currentPanel === panel ? \"0px\": \"350px\"}`}}>\r\n            <div className=\"vertical-panel-content\">\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Customize Abilities</div>\r\n                    <div className=\"settings-header-container\">\r\n                        {Object.keys(abilities).map(k => \r\n                            <div key={k} className={activeAbilitySection === k ? \"settings-header-active\" : \"settings-header\"} setting={k} onClick={showAbilityOptions}>{abilities[k].displayName}</div>    \r\n                        )}\r\n                    </div>\r\n                    {activeAbilitySection ? <CustomizeSection name={activeAbilitySection} setting={currentAbilities[activeAbilitySection]} options={abilityOptions[activeAbilitySection]} onChange={handleAbilitySettingChange}/> : null}\r\n                    <div className=\"panel-text-button-container\">\r\n                        <div className=\"panel-info-text-container\">\r\n                            {abilityChangesPending ? changesPendingText : null}\r\n                        </div>                  \r\n                        <div>\r\n                            <button className=\"panel-button\" onClick={handleAbilitySet}>{abilityButtonText}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel-content-container\">\r\n                    <div className=\"panel-content-header\">Customize Auras</div>\r\n                        <div className=\"settings-header-container\">\r\n                            {Object.keys(auras).map(k => \r\n                                <div key={k} className={activeAuraSection === k ? \"settings-header-active\" : \"settings-header\"} setting={k} onClick={showAuraOptions}>{auras[k].displayName}</div>    \r\n                            )}\r\n                        </div>\r\n                        {activeAuraSection ? <CustomizeSection name={activeAuraSection} setting={currentAuras[activeAuraSection]} options={auraOptions[activeAuraSection]} onChange={handleAuraSettingChange}/> : null}\r\n                        <div className=\"panel-text-button-container\">\r\n                            <div className=\"panel-info-text-container\">\r\n                                {auraChangesPending ? changesPendingText : null}    \r\n                            </div>\r\n                            <div>\r\n                                <button className=\"panel-button\" onClick={handleAuraSet}>{auraButtonText}</button>   \r\n                            </div>  \r\n                        </div>            \r\n                </div>\r\n            </div>\r\n        </Panel>      \r\n    )\r\n}\r\n\r\nexport default SettingsPanel","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\nimport {keybinds} from \"../../lib/constants\"\r\nimport \"./Panel.css\"\r\nimport \"./Tooltip.css\"\r\n\r\nconst AbilityKeybindsPanel = (props) => {\r\n\r\n    const {abilities, currentPanel, onKeybind, onToggle, onClick, onPause, closePanel} = props\r\n\r\n    const panel = \"abilitykeybinds\"\r\n    const header = \"Ability and Keybinds\"\r\n    const panelClass = \"bottom-panel\"\r\n\r\n    const defaultState = {\r\n        tooltip: \"\",\r\n        keybindText: \"\",\r\n        currentAbility: \"\"\r\n    }\r\n\r\n    const [tooltip, setTooltip] = useState(defaultState.tooltip)\r\n    const [keybindText, setKeybindText] = useState(defaultState.keybindText)\r\n    const [currentAbility, setCurrentAbility] = useState(defaultState.currentAbility)\r\n\r\n    const handleClose = () => {\r\n        setTooltip(defaultState.tooltip)\r\n        setKeybindText(defaultState.keybindText)\r\n        setCurrentAbility(defaultState.currentAbility)\r\n\r\n        closePanel()\r\n    }\r\n\r\n    const currentAbilityRef = useRef(currentAbility)\r\n    currentAbilityRef.current = currentAbility\r\n\r\n    const showToolTip = (e) => {\r\n        setTooltip(e.target.alt)\r\n    }\r\n\r\n    const hideToolTip = () => {\r\n        setTooltip(\"\")\r\n    }\r\n\r\n    const prepareToBindAbility = (e) => {\r\n        let ability = e.target.getAttribute(\"ability\")\r\n        setCurrentAbility(ability)\r\n\r\n        setKeybindText(`Press any key to bind to ${abilities[ability].displayName}`)\r\n\r\n        document.addEventListener(\"keypress\", bindAbility, {once: true})\r\n    }\r\n\r\n    const bindAbility = (event) => {\r\n        document.removeEventListener(\"keypress\", bindAbility)\r\n        let keybind = {\r\n            key: event.key,\r\n            keybindText: event.key\r\n        }\r\n\r\n        if(keybinds[keybind.key]) keybind.keybindText = keybinds[keybind.key]\r\n        if(keybind.key.match(/[a-z]/)) keybind.keybindText = keybind.key.toUpperCase()\r\n        if(keybind.key.match(/[A-Z]/)) keybind.keybindText = \"S-\" + keybind.key\r\n        \r\n        let ability = currentAbilityRef.current \r\n\r\n        onKeybind(keybind, ability)\r\n        setKeybindText(`${abilities[ability].displayName} successfuly bound to ${keybind.keybindText}`)\r\n    }\r\n\r\n    const reset = () => {\r\n        document.removeEventListener(\"keypress\", bindAbility)\r\n        setTooltip(defaultState.tooltip)\r\n        setKeybindText(defaultState.keybindText)\r\n        setCurrentAbility(defaultState.currentAbility)\r\n    }\r\n\r\n    return (\r\n        <Panel panel={panel} currentPanel={currentPanel} reset={reset} onClick={onClick} header={header} style={{transform: `translateY(${currentPanel === panel ? \"0px\": \"250px\"}`}} panelClass={panelClass} handleClose={handleClose}>\r\n            <div className=\"horizontal-panel-content\">\r\n                <div className=\"panel-content-header\">Change Abilities and Keybinds</div>\r\n                <div className=\"tooltip\">\r\n                    <span className=\"tooltip-text\" visibility={(!!tooltip).toString()}>\r\n                        {tooltip}\r\n                    </span>\r\n                </div>\r\n                <div className=\"panel-abilities-container\">\r\n                    {Object.keys(abilities).map(k => {\r\n                        if(k === \"void-eruption\") return\r\n                        return <div className=\"panel-ability-container\" key={k}>\r\n                            <img  \r\n                                className=\"hover-pointer\" \r\n                                alt={abilities[k].displayName}\r\n                                ability={k} \r\n                                onMouseOver={showToolTip}\r\n                                onMouseOut={hideToolTip}\r\n                                onClick={prepareToBindAbility}\r\n                                src={abilities[k].icon}\r\n                                height={50}\r\n                                width={50}\r\n                            />\r\n                        <button className=\"panel-button\" onClick={() => onToggle(k)}>{abilities[k].disabled ? \"Enable\" : \"Disable\"}</button>\r\n                        </div>\r\n                })}\r\n                </div>\r\n                <div>{keybindText ? keybindText : null}</div>\r\n            </div>\r\n        </Panel>\r\n    )\r\n}\r\n\r\nexport default AbilityKeybindsPanel","import React, {useState, useEffect, useReducer, useRef} from 'react';\r\nimport Panel from \"./Panel\"\r\n\r\nimport \"./Panel.css\"\r\n\r\nconst AboutPanel = (props) => {\r\n    const {currentPanel, onClick, closePanel} = props\r\n\r\n    const panel = \"about\"\r\n    const header= \"About\"\r\n    const panelClass = \"middle-panel\"\r\n\r\n    return (\r\n        <Panel panel={panel} onClick={onClick} handleClose={closePanel} header={header} panelClass={panelClass}\r\n            style={{transform: `translateY(${currentPanel === panel ? \"0px\": \"-685px\"}`}}\r\n        >\r\n            <div className=\"middle-panel-content\">\r\n                <div className=\"panel-content-header\">About</div>\r\n                <div className=\"medium-text left-text panel-text-content\">\r\n                    <p>\r\n                    Voidform Optimizer is a thought experiment I had.\r\n                    </p>\r\n                    <p>\r\n                    I am convinced that many, although not all, players' grievances with Voidform are caused by the\r\n                    implementations of Voidform they have experienced, and not by the design of Voidform itself. Therefore I have made it my mission to allow others\r\n                    to experience Voidform in a myriad of ways; in hope that they realize it isn't inherently flawed, find what they most enjoy about it, and \r\n                    share those findings with others. Then, just maybe, as a community we can come to an agreement on how to <b>#savevoidform</b>.\r\n                    </p>\r\n                    <p>\r\n                    If you have any questions, feedback, or bugs to report, please feel free to DM me on Discord at Shot#1711.\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        </Panel>      \r\n    )\r\n}\r\n\r\nexport default AboutPanel","export default [\r\n    {\r\n        header: \"Legion Templates!\",\r\n        description: \"New templates to satiate your Legion nostalgia. More to come in the future.\"\r\n    },\r\n    {\r\n        header: \"Shadowfiend\",\r\n        description: \"Customizable Shadowfiend ability has been added!\"\r\n    },\r\n    {\r\n        header: \"Templates\",\r\n        description: \"Premade templates may now be selected on import panel!\"\r\n    },\r\n    {\r\n        header: \"Devouring Plague\",\r\n        description: \"The recent Shadowlands Devouring Plague addition is now available to try out!\"\r\n    },\r\n    {\r\n        header: \"What's New?\",\r\n        description: \"Added a what's new dialogue to inform about recent changes to Voidform Optimizer.\"\r\n    }\r\n]","import React, {useState} from 'react';\r\nimport \"../forms/Form.css\"\r\nimport \"./Panel.css\"\r\nimport whatsNew from \"../../lib/whatsNew\"\r\n\r\nconst containerStyle = {\r\n    textAlign: \"left\",\r\n    marginBottom: \"20px\"\r\n}\r\n\r\nconst smallText = {\r\n    fontSize: \"15px\"\r\n}\r\n\r\nconst mediumText = {\r\n    fontSize: \"20px\"\r\n}\r\n\r\nconst WhatsNew = (props) => {\r\n    const title = \"What's New\"\r\n\r\n    const {onClose} = props\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal-content panel\">\r\n                <div className=\"form-title\">\r\n                    {title}\r\n                </div>           \r\n                <div>\r\n                    {whatsNew.map(item => \r\n                        <div style={containerStyle}>\r\n                            <b style={mediumText}>{item.header}</b>\r\n                            <div style={smallText}>\r\n                                {item.description}\r\n                            </div>\r\n                        </div>)}\r\n                </div>\r\n                <div>\r\n                    <button className=\"panel-button\" onClick={onClose}>Got it!</button>\r\n                </div>\r\n                <button className=\"panel-button panel-exit-button\" onClick={onClose}>x</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WhatsNewPanel = () => {\r\n\r\n    const header = \"What's New\"\r\n\r\n    const [showWhatsNew, setShowWhatsNew] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"panel-header hover-pointer\" onClick={() => setShowWhatsNew(true)}>{header}</div>\r\n            {showWhatsNew ? <WhatsNew onClose={() => setShowWhatsNew(false)} /> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WhatsNewPanel","const defaultAbilities = {\r\n    \"mind-flay\": {\r\n        displayName: \"Mind Flay\",\r\n        keybind: {\r\n            key: \"1\",\r\n            keybindText: \"1\"\r\n        },\r\n        icon: \"images/mind-flay.jpg\"\r\n    },\r\n    \"mind-sear\": {\r\n        displayName: \"Mind Sear\",\r\n        keybind: {\r\n            key: \"2\",\r\n            keybindText: \"2\"\r\n        },\r\n        icon: \"images/mind-sear.jpg\"\r\n    },\r\n    \"mind-blast\": {\r\n        displayName: \"Mind Blast\",\r\n        keybind: {\r\n            key: \"3\",\r\n            keybindText: \"3\"\r\n        },\r\n        icon: \"images/mind-blast.jpg\"\r\n    },\r\n    \"void-bolt\": {\r\n        displayName: \"Void Bolt\",\r\n        keybind: {\r\n            key: \"4\",\r\n            keybindText: \"4\"\r\n        },\r\n        icon: \"images/void-bolt.jpg\"\r\n    },\r\n    \"void-eruption\": {\r\n        displayName: \"Void Eruption\",\r\n        keybind: {\r\n            key: \"4\",\r\n            keybindText: \"4\"\r\n        },\r\n        icon: \"images/void-eruption.jpg\"\r\n    },\r\n    \"shadow-word-death\": {\r\n        displayName: \"Shadow Word: Death\",\r\n        keybind: {\r\n            key: \"5\",\r\n            keybindText: \"5\"\r\n        },\r\n        icon: \"images/shadow-word-death.jpg\"\r\n    },\r\n    \"void-torrent\": {\r\n        displayName: \"Void Torrent\",\r\n        keybind: {\r\n            key: \"6\",\r\n            keybindText: \"6\"\r\n        },\r\n        icon: \"images/void-torrent.jpg\"\r\n    },\r\n    \"shadow-word-pain\": {\r\n        displayName: \"Shadow Word: Pain\",\r\n        keybind: {\r\n            key: \"7\",\r\n            keybindText: \"7\"\r\n        },\r\n        icon: \"images/shadow-word-pain.jpg\"\r\n    },\r\n    \"vampiric-touch\": {\r\n        displayName: \"Vampiric Touch\",\r\n        keybind: {\r\n            key: \"8\",\r\n            keybindText: \"8\"\r\n        },\r\n        icon: \"images/vampiric-touch.jpg\"\r\n    },\r\n    \"devouring-plague\": {\r\n        displayName: \"Devouring Plague\",\r\n        keybind: {\r\n            key: \"9\",\r\n            keybindText: \"9\"\r\n        },\r\n        icon: \"images/devouring-plague.jpg\"\r\n    },\r\n    \"shadowfiend\": {\r\n        displayName: \"Shadowfiend\",\r\n        keybind: {\r\n            key: \"0\",\r\n            keybindText: \"0\"\r\n        },\r\n        icon: \"images/shadowfiend.jpg\"\r\n    }\r\n}\r\n\r\nexport default defaultAbilities","import React from \"react\"\r\n\r\nconst FormTextAreaField = (props) => {\r\n\r\n    const {value, id, label, className, placeHolder, onChange} = props\r\n\r\n    const handleChange = (e) => onChange(id, e.target.value)\r\n\r\n    return (\r\n        <div className={`form-field ${className}`}>\r\n            <label htmlFor={id}>{label}</label>\r\n            <div className={\"form-input-container\"}>\r\n                <textarea className=\"panel-text-area form-input-field\" id={id} value={value} placeholder={placeHolder} required={true} onChange={handleChange} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormTextAreaField","import React from \"react\"\r\n\r\nconst FormTextField = (props) => {\r\n\r\n    const {value, id, label, placeHolder, onChange} = props\r\n\r\n    const handleChange = (e) => onChange(id, e.target.value)\r\n\r\n    return (\r\n        <div className=\"form-text-field form-title\">\r\n            <label className=\"form-input-title\" htmlFor={id}>{label}</label>\r\n            <input className=\"panel-text-area form-input-field\" type=\"text\" id={id} value={value} placeholder={placeHolder} required={true} onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormTextField","const email = window.Email\r\n\r\nconst formatBugReportContent = (body) => {\r\n    const appHeader = \"<h1>Bug Report for Voidform Optimizer</h1>\\n\"\r\n    const descriptionHeader = \"<h3>Give a brief description of the issue</h3>\"\r\n    //const reproductionHeader = \"### How can this issue be reproduced?\"\r\n    const expectedBehaviorHeader = \"<h3>What is the expected behavior?</h3>\"\r\n    const actualBehaviorHeader = \"<h3>What is the actual behavior?</h3>\"\r\n\r\n    const headers = [descriptionHeader, expectedBehaviorHeader, actualBehaviorHeader]\r\n\r\n    const userContent = Object.keys(body).reduce((content, key, i) => {\r\n        return content.concat([headers[i], body[key]])\r\n    }, []).join(\"\\n\")\r\n\r\n    return appHeader + userContent\r\n}\r\n\r\nconst sendBugReport = async (title, content) => {\r\n    const data = {\r\n        SecureToken: process.env.REACT_APP_SMTP_ACCESS_TOKEN,\r\n        From: process.env.REACT_APP_SENDER_GMAIL_USER,\r\n        To: process.env.REACT_APP_RECEIVER_GMAIL_USER,\r\n        Subject: title,\r\n        Body: content\r\n    }\r\n\r\n    const result = await email.send(data)\r\n\r\n    if(result !== \"OK\") throw new Error(result)\r\n}\r\n\r\nexport const submitBugReport = async (data, onSuccess, onFail) => {\r\n\r\n    const {title, ...body} = data\r\n\r\n    const content = formatBugReportContent(body)\r\n\r\n    try {\r\n        await sendBugReport(`[BUG] ${title}`, content)\r\n        onSuccess()\r\n    }\r\n    catch(err){\r\n        console.log(err)\r\n        onFail()\r\n    }\r\n}\r\n\r\nexport const createPendingTextTimer = (text, setText) => {\r\n    const dot = \".\"\r\n    let i = 1\r\n\r\n    setText(text)\r\n    \r\n    const timer = setInterval(() => {\r\n        const count = i % 4\r\n\r\n        setText(`${text}${dot.repeat(count)}`)\r\n\r\n        i++\r\n    }, 500);\r\n\r\n    return timer\r\n}\r\n","import React, {useState} from \"react\"\r\nimport Form from \"./Form\"\r\nimport FormTextAreaField from \"./FormTextAreaField\"\r\nimport FormTextField from \"./FormTextField\"\r\nimport {submitBugReport, createPendingTextTimer} from \"../../utils/bugreport\"\r\n\r\nconst fields = [{\r\n    id: \"bug-report-description\",\r\n    label: \"Description\",\r\n    className: \"form-field-small\"\r\n    // placeHolder: \"Enter a description of the bug...\"\r\n},\r\n{\r\n    id: \"bug-report-expected\",\r\n    label: \"Expected Behavior\",\r\n    className: \"form-field-medium\"\r\n    // placeHolder: \"Enter the expected behavior...\"\r\n},\r\n{\r\n    id: \"bug-report-actual\",\r\n    label: \"Actual Behavior\",\r\n    className: \"form-field-medium\"\r\n    // placeHolder: \"Enter the actual behavior...\"\r\n}]\r\n\r\nconst titleField = {\r\n    id: \"title\",\r\n    label: \"Title\"\r\n}\r\n\r\nconst formTitle = \"Bug Report\"\r\n\r\nconst submitPending = \"Submitting\"\r\nconst submitSuccess = \"Bug report successfully submitted!\"\r\nconst submitFail = \"Failed to submit bug report\"\r\n\r\nconst BugReport = (props) => {\r\n\r\n    const {closeForm} = props\r\n    const [data, setData] = useState({})\r\n    const [canSubmit, setCanSubmit] = useState(true)\r\n    const [submitMessage, setSubmitMessage] = useState(\"\")\r\n\r\n    const onChange = (id, value) => {\r\n        setData({...data, [id]: value})\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const timer = createPendingTextTimer(submitPending, setSubmitMessage)\r\n\r\n        const onSuccess = () => {\r\n            clearInterval(timer)\r\n            setSubmitMessage(submitSuccess)\r\n        }\r\n        const onFail = () => {\r\n            clearInterval(timer)\r\n            setSubmitMessage(submitFail)\r\n        }\r\n\r\n        submitBugReport(data, onSuccess, onFail)\r\n        setCanSubmit(false)\r\n    }\r\n\r\n    return <div className=\"modal\">\r\n        <div className=\"modal-content panel\">\r\n            <div className=\"form-title\">\r\n                {formTitle}\r\n            </div>\r\n            <form className=\"form\" onSubmit={onSubmit}>\r\n                <FormTextField value={data.title} {...titleField} onChange={onChange} />\r\n                {fields.map(f => <FormTextAreaField key={f.id} value={data[f.id]} {...f} onChange={onChange} />)}\r\n                <div>\r\n                    <input className=\"panel-button\" type=\"submit\" value=\"Submit\" disabled={!canSubmit} />\r\n                </div>\r\n            </form>\r\n            <div>\r\n                {submitMessage}\r\n            </div>\r\n            <button className=\"panel-button panel-exit-button\" onClick={closeForm}>x</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default BugReport","import React, {useState} from \"react\"\r\nimport Form from \"./Form\"\r\nimport FormTextAreaField from \"./FormTextAreaField\"\r\nimport FormTextField from \"./FormTextField\"\r\n\r\nconst fields = []\r\n\r\nconst submitSuccess = \"Feature request successfully submitted!\"\r\nconst submitFail = \"Failed to submit feature request\"\r\n\r\nconst FeatureRequest = (props) => {\r\n\r\n    const {closeForm} = props\r\n\r\n    return <div className=\"modal\">\r\n        <div className=\"modal-content panel\">\r\n            Coming soon!\r\n            <button className=\"panel-button panel-exit-button\" onClick={closeForm}>x</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default FeatureRequest","import React, {useState} from \"react\"\r\nimport BugReport from \"./BugReport\"\r\nimport FeatureRequest from \"./FeatureRequest\"\r\nimport \"./Form.css\"\r\nimport \"../panels/Panel.css\"\r\nimport \"../panels/SettingOption.css\"\r\n\r\nconst Forms = () => {\r\n\r\n    const [showBugReport, setShowBugReport] = useState(false)\r\n    const [showFeatureRequest, setShowFeatureRequest] = useState(false)\r\n\r\n    return (\r\n        <div className=\"forms-container\">\r\n            <div>\r\n                <button className=\"panel-button\" onClick={() => setShowBugReport(true)}>Report a Bug</button>\r\n                <button className=\"panel-button\" onClick={() => setShowFeatureRequest(true)}>Request a Feature</button>\r\n            </div>\r\n                {showBugReport ? <BugReport closeForm={() => setShowBugReport(false)} /> : null} \r\n                {showFeatureRequest ? <FeatureRequest closeForm={() => setShowFeatureRequest(false)} /> : null} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forms","import React, {useState, useEffect, useReducer} from 'react';\r\nimport './App.css';\r\nimport ResourceBar from \"./components/ResourceBar\"\r\nimport AbilityBar from \"./components/AbilityBar\"\r\nimport AuraBar from \"./components/auras/AuraBar\"\r\nimport ExportPanel from \"./components/panels/ExportPanel\"\r\nimport SettingsPanel from \"./components/panels/SettingsPanel\"\r\nimport AbilityKeybindsPanel from \"./components/panels/AbilityKeybindsPanel\"\r\nimport AboutPanel from \"./components/panels/AboutPanel\"\r\nimport WhatsNewPanel from \"./components/panels/WhatsNewPanel\"\r\nimport defaultAbilities from \"./lib/abilities\"\r\nimport defaultAbilitySettings from \"./lib/abilitySettings\"\r\nimport defaultAuraSettings from \"./lib/auraSettings\"\r\nimport Forms from \"./components/forms/Forms\"\r\n\r\nconst App = () => {\r\n\r\n  const [panel, setPanel] = useState()\r\n  const [abilitySettings, setAbilitySettings] = useState(defaultAbilitySettings)\r\n  const [abilities, setAbilities] = useState(defaultAbilities)\r\n  const [auraSettings, setAuraSettings] = useState(defaultAuraSettings)\r\n  const [keyEventsPaused, setKeyEventsPaused] = useState(false)\r\n  const [reset, setReset] = useState(false)\r\n  const [haste, setHaste] = useState(0)\r\n\r\n  const defaultState = {\r\n    resource: 0,\r\n    auras: {\r\n      stats: {\r\n        haste\r\n      },\r\n      voidform: {\r\n        active: false,\r\n        stacks: 0,\r\n        haste: 0,\r\n        paused: false,\r\n      },\r\n      lingeringInsanity: {\r\n        active: false,\r\n        stacks: 0,\r\n        haste: 0\r\n      },\r\n      \"shadow-word-pain\": {\r\n        active: false\r\n      },\r\n      \"vampiric-touch\": {\r\n        active: false\r\n      },\r\n      \"devouring-plague\": {\r\n        active: false\r\n      },\r\n      \"shadowfiend\": {\r\n        active: false\r\n      }\r\n    },\r\n    abilities: {\r\n      \"void-eruption\": {\r\n        unusable: true\r\n      },\r\n      \"devouring-plague\": {\r\n        unusable: true\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleAuraPandemic = (aura, baseDuration, now) => {\r\n    const endTime = aura.startTime + aura.maxDuration\r\n    const remaining = endTime - now\r\n    const pandemicDuration = Math.min(.3 * baseDuration, remaining)\r\n\r\n    aura.maxDuration = baseDuration + pandemicDuration\r\n    aura.startTime = now\r\n  }\r\n\r\n  const [state, updateState] = useReducer((state, action) => {\r\n\r\n    let event = action.type\r\n    let newState = JSON.parse(JSON.stringify(state))\r\n\r\n    const voidform = newState.auras.voidform\r\n    const lingeringInsanity = newState.auras.lingeringInsanity\r\n\r\n    switch(event) {\r\n      case \"RESET\":\r\n        return defaultState\r\n      case \"RESET_ABILITIES\":\r\n        return {...defaultState, auras: state.auras}\r\n      case \"RESET_AURAS\":\r\n        return {...newState, auras: {...defaultState.auras, stats: state.auras.stats} }\r\n      case \"HASTE_SET\":\r\n        var {source, haste} = action.payload\r\n        newState.auras[source].haste = haste\r\n        break\r\n      case \"HASTE_UPDATE\":\r\n        var {source, haste} = action.payload\r\n        newState.auras[source].haste += haste\r\n        break\r\n      case \"VOIDFORM_UPDATE\":\r\n        voidform.stacks++\r\n        voidform.haste += action.payload\r\n        break;\r\n      case \"VOIDFORM_START\":\r\n        voidform.active = true\r\n        voidform.stacks = 1\r\n        break;\r\n      case \"VOIDFORM_END\":\r\n        var {time, startingHaste} = action.payload\r\n        lingeringInsanity.active = true\r\n        lingeringInsanity.stacks = voidform.stacks\r\n        lingeringInsanity.haste = Math.round((voidform.haste - startingHaste)*1000)/1000\r\n        lingeringInsanity.startTime = time\r\n        voidform.stacks = 0\r\n        voidform.haste = 0\r\n        newState.abilities[\"void-eruption\"].unusable = true\r\n        break;\r\n      case \"LINGERING_INSANITY_START\":\r\n        var {haste, stacks} = action.payload\r\n        lingeringInsanity.haste = haste\r\n        lingeringInsanity.stacks = stacks\r\n        break;\r\n      case \"LINGERING_INSANITY_UPDATE\":\r\n        lingeringInsanity.haste += action.payload\r\n        lingeringInsanity.stacks--\r\n        if(lingeringInsanity.haste <= 0) lingeringInsanity.haste = 0\r\n        break;\r\n      case \"LINGERING_INSANITY_END\":\r\n        lingeringInsanity.active = false\r\n        lingeringInsanity.stacks = 0\r\n        lingeringInsanity.haste = 0\r\n        lingeringInsanity.startTime = 0\r\n        break;\r\n      case \"RESOURCE_UPDATE\":\r\n        var {name, resource, costsResource} = action.payload\r\n        let targetCount = name === \"mind-sear\" ? abilitySettings[name].targetCount : 1\r\n        resource = Math.max(Math.min(newState.resource + (resource * (costsResource && -1 || 1)) * targetCount, 100), 0)\r\n        newState.resource = resource\r\n        if(resource <= 0 && voidform.active) {\r\n          voidform.active = false\r\n        }\r\n        //whenever we get resource need to calculate if an ability is usable or not\r\n        Object.keys(abilitySettings).forEach(k => {\r\n          const ability = abilitySettings[k]\r\n          if(!ability.costsResource) return\r\n          newState.abilities[k].unusable = resource < ability.resource\r\n        })\r\n        // if(!voidform.active && resource >= abilitySettings[\"void-eruption\"].threshold) {\r\n        //   newState.abilities[\"void-eruption\"].unusable = false\r\n        // }\r\n        break;\r\n      case \"INSANITY_DRAIN_PAUSE_START\":\r\n        voidform.paused = true\r\n        break\r\n      case \"INSANITY_DRAIN_PAUSE_END\":\r\n        voidform.paused = false\r\n        break\r\n      case \"AURA_START\":\r\n        var {name, time} = action.payload\r\n        var aura = newState.auras[name]\r\n\r\n        aura.active ? handleAuraPandemic(aura, auraSettings[name].baseDuration, time) : aura.active = true\r\n        break\r\n      case \"AURA_BEGIN\":\r\n        var {name, time, duration} = action.payload\r\n        newState.auras[name].startTime = time\r\n        newState.auras[name].maxDuration = duration\r\n        break\r\n      case \"AURA_REFRESH\":\r\n        var {name, time} = action.payload\r\n        newState.auras[name].startTime = time\r\n        break\r\n      case \"AURA_END\":\r\n        var {name} = action.payload\r\n        newState.auras[name].active = false\r\n        newState.auras[name].startTime = 0\r\n        break\r\n      case \"DOT_EXTEND\":\r\n        const extension = abilitySettings[\"void-bolt\"].extension\r\n        const dots = [\"shadow-word-pain\", \"vampiric-touch\"]\r\n        dots.forEach(d => {\r\n          const dot = newState.auras[d]\r\n          if(!dot.active) return\r\n          dot.maxDuration += extension\r\n        })\r\n        break\r\n    }\r\n\r\n    return newState\r\n  }, defaultState)\r\n\r\n  useEffect(() => {\r\n    setHaste(calculateHaste)\r\n  }, [state.auras.stats.haste,\r\n    state.auras.voidform.haste,\r\n    state.auras.lingeringInsanity.haste])\r\n\r\n  const enterVoidform = () => {\r\n    updateState({\r\n      type: \"VOIDFORM_START\"\r\n    })\r\n  }\r\n\r\n  const gainInsanity = () => {\r\n    updateState({\r\n      type: \"RESOURCE_UPDATE\",\r\n      payload: {\r\n        resource: 10\r\n      }\r\n    })\r\n  }\r\n\r\n  const calculateHaste = () => {\r\n    const auras = state.auras\r\n    return Object.keys(auras).reduce((haste, aura) => {\r\n      if(!auras[aura].haste) return haste\r\n      return haste * (1+auras[aura].haste)\r\n    }, 1)\r\n  }\r\n\r\n  const handlePanelHeaderClick = (panel) => {\r\n    setKeyEventsPaused(true)\r\n    setPanel(panel)\r\n  }\r\n\r\n  const handlePanelClose = () => {\r\n    setKeyEventsPaused(false)\r\n    setPanel(null)\r\n  }\r\n\r\n  const handleAbilityToggle = (ability) => {\r\n    let newSettings = JSON.parse(JSON.stringify(abilities))\r\n\r\n    newSettings[ability].disabled = !newSettings[ability].disabled\r\n    if(ability === \"void-bolt\") newSettings[\"void-eruption\"].disabled = newSettings[ability].disabled\r\n\r\n    setAbilities(newSettings)\r\n  }\r\n\r\n  const setKeyBind = (keybind, ability) => {\r\n    let state = JSON.parse(JSON.stringify(abilities))\r\n    let key = keybind.key\r\n    let voidBoltOrEruption = ability === \"void-bolt\" || ability === \"void-eruption\"\r\n    Object.keys(state).forEach(k => {\r\n      let abilityKeybind = state[k].keybind\r\n      if(abilityKeybind.key === key) state[k].keybind = { keybindText: \"--\"}\r\n    })\r\n    if(voidBoltOrEruption) {\r\n      state[\"void-bolt\"].keybind = {...keybind}\r\n      state[\"void-eruption\"].keybind = {...keybind}\r\n    }\r\n    else {\r\n      state[ability].keybind = {...keybind}\r\n    }\r\n\r\n    setAbilities(state)\r\n  }\r\n\r\n  const handleImport = (settings) => {\r\n    setAllAbilities(settings.abilityConfig)\r\n    handleAbilitySet(settings.abilitySettings)\r\n    handleAuraSet(settings.auraSettings)\r\n  }\r\n\r\n  const setAllAbilities = (importedAbilities) => {\r\n    let state = Object.keys(abilities).reduce((state, ability) => {\r\n      state[ability] = {...abilities[ability], ...importedAbilities[ability]}\r\n      return state\r\n    }, {})\r\n\r\n    setAbilities(state)\r\n  }\r\n\r\n  const mergeAbilities = () => {\r\n    return Object.keys(abilities).reduce((merged, a) => {\r\n      merged[a] = {...abilities[a], ...state.abilities[a]}\r\n      return merged\r\n    }, {})\r\n  }\r\n\r\n  const abilitySettingsWithDisplayName = () => {\r\n    return Object.keys(abilitySettings).reduce((merged, a) => {\r\n      merged[a] = {...abilitySettings[a], displayName: defaultAbilities[a].displayName}\r\n      return merged\r\n    }, {}) \r\n  }\r\n\r\n  const handleAuraSet = (auraSettings) => {\r\n    setAuraSettings(auraSettings)\r\n    handleAuraReset()\r\n    const haste = auraSettings.stats.haste\r\n    updateState({\r\n      type: \"HASTE_SET\",\r\n      payload: {\r\n        source: \"stats\",\r\n        haste\r\n      }\r\n    })\r\n    handleReset()\r\n  }\r\n\r\n  const handleAbilitySet = (abilitySettings) => {\r\n    setAbilitySettings(abilitySettings)\r\n    handleReset()\r\n  }\r\n\r\n  const handleAbilityReset = () => {\r\n    updateState({\r\n      type: \"RESET_ABILITIES\"\r\n    })\r\n    updateState({\r\n      type: \"RESOURCE_UPDATE\",\r\n      payload: {\r\n        resource: 0\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleAuraReset = () => {\r\n    updateState({\r\n      type: \"RESET_AURAS\"\r\n    })\r\n\r\n    setTimeout(() => {\r\n      updateState({\r\n        type: \"LINGERING_INSANITY_END\"\r\n      })\r\n    }, 0)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    handleAuraReset()\r\n    handleAbilityReset()\r\n    setReset(!reset)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header header-panel\">\r\n        <div className=\"App-title\">\r\n          <div className=\"App-title-text\">\r\n            Voidform Optimizer\r\n          </div>\r\n        </div>\r\n        <div className=\"panel-container\">\r\n          <SettingsPanel settings={{abilities: abilitySettingsWithDisplayName(), auras: auraSettings}} didReset={reset} onAbilitySet={handleAbilitySet} onAuraSet={handleAuraSet} currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\r\n          <AbilityKeybindsPanel abilities={abilities} currentPanel={panel} onKeybind={setKeyBind} onToggle={handleAbilityToggle} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\r\n          <ExportPanel settings={{abilitySettings, auraSettings, abilities}} onImport={handleImport} currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose}/>\r\n          <AboutPanel currentPanel={panel} onClick={handlePanelHeaderClick} closePanel={handlePanelClose} />\r\n          <WhatsNewPanel />\r\n        </div>\r\n        <Forms />\r\n      </header>\r\n      <div className=\"App-content\">\r\n        <AuraBar auras={state.auras} settings={auraSettings} haste={haste} triggerEvent={updateState} />\r\n        <ResourceBar current={state.resource} max={100}/>\r\n        <AbilityBar abilitySettings={abilitySettings} abilities={mergeAbilities()} haste={haste} inVoidform={state.auras.voidform.active} triggerEvent={updateState} keyEventsPaused={keyEventsPaused} reset={reset} />\r\n        <button className=\"panel-button\" onClick={handleReset}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport dotenv from \"dotenv\"\r\n\r\ndotenv.config()\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}